DiscreteMath`Combinatorica`SetPartitionQ	"SetPartitionQ[sp, s] determines if sp is a set partition of set s. SetPartitionQ[sp] tests if sp is a set of disjoint sets."
<<EntryDelimiter>>
Calculus`VectorAnalysis`SetCoordinates	"SetCoordinates[coordsys] sets the default coordinate system to be coordsys with default variables. SetCoordinates[coordsys[c1, c2, c3]] sets the default coordinate system to be coordsys with variables c1, c2, and c3. Certain coordinate systems have parameters associated with them, and these parameters can be set by specifying the full description of the coordinate system. For example, SetCoordinates[Conical[lambda, mu, nu]] sets only the variables of the conical coordinate system, but SetCoordinates[Conical[lambda, mu, nu, a, b]] sets both the variables and the parameters of the conical coordinate system."
<<EntryDelimiter>>
Miscellaneous`Calendar`DaysPlus	"DaysPlus[{y, m, d}, n] gives the date n days after {y, m, d}. The default calendar is the usual American calendar, but can be changed with the Calendar option. The date can also be given in {y, m, d, h, m, s} form."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NthSubset	"NthSubset[n, l] gives the nth subset of list l in canonical order, with the empty set indexed as set 0."
<<EntryDelimiter>>
LightweightGridClient`RemoteServiceInformation	"RemoteServiceInformation[agent] returns information about the services provided by agent.\r\nRemoteServiceInformation[] returns information about services provided by agents on the local network."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Euclidean	"Euclidean is an option for SetEdgeWeights."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CompleteQ	"CompleteQ[g] yields True if graph g is complete. This means that between any pair of vertices there is an undirected edge or two directed edges going in opposite directions."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Eulerian	"Eulerian[n, k] gives the number of permutations of length n with k runs."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CycleStructure	"CycleStructure[p, x] returns the monomial in x[1], x[2], ..., x[Length[p]] that is the cycle structure of the permutation p."
<<EntryDelimiter>>
Miscellaneous`WorldNames`SouthAmerica	"SouthAmerica contains the names of the countries of South America defined in the WorldData database."
<<EntryDelimiter>>
Parallel`Kernels``SubKernel	"SubKernel[kernel] gives the subkernel object underlying kernel."
<<EntryDelimiter>>
Miscellaneous`Geodesy`SphericalDistance	"SphericalDistance[pt1,pt2] gives the distance between two points on the earth using the spherical model of the planet. The points are expressed as {lat,long}, where lat, long can be in degrees, or {d,m} or {d,m,s} form."
<<EntryDelimiter>>
Parallel`Preferences`tr	"tr[\"key\"] looks up a localized string."
<<EntryDelimiter>>
Algebra`FiniteFields`PowerListToField	"PowerListToField[list] gives a field object based on a list of the type produced by PowerList. PowerListQ for this field is set to True."
<<EntryDelimiter>>
DiscreteMath`RSolve`PartialFractions	"PartialFractions[f, z] gives a partial fraction decomposition of f[z] over the complex functions."
<<EntryDelimiter>>
DocumentationSearch`NewDocumentationNotebookIndexer	"NewDocumentationNotebookIndexer[directory] creates a new NotebookIndexer."
<<EntryDelimiter>>
DocumentationSearch`SearchDocumentation	"SearchDocumentation[criteria] searches the documentation and returns results based on the search criteria."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShakeGraph	"ShakeGraph[g, d] performs a random perturbation of the vertices of graph g, with each vertex moving, at most, a distance d from its original position."
<<EntryDelimiter>>
ClusterIntegration`CCS`CCSLoginScript	"Internal functions. Use Kernel Configuration menu to configure kernels."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SelfComplementaryQ	"SelfComplementaryQ[g] yields True if graph g is self-complementary, meaning it is isomorphic to its complement."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DegreesOf2Neighborhood	"DegreesOf2Neighborhood[g, v] returns the sorted list of degrees of vertices of graph g within a distance of 2 from v."
<<EntryDelimiter>>
LinearAlgebra`Orthogonalization`InnerProduct	"InnerProduct is an obsolete option. Use the final argument to Orthogonalize and related functions instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NoSelfLoops	"NoSelfLoops is an option value for Type."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`OrderedSumOfSquaresRepresentations	"OrderedSumOfSquaresRepresentations[d, n] gives the list of all representations of the positive integer n as a sum of d squares of nonnegative nonincreasing integers."
<<EntryDelimiter>>
ClusterIntegration`HPC`HPCNewComputeKernels	"Internal function. Use NewKernels to launch remote kernels."
<<EntryDelimiter>>
LinearAlgebra`FourierTrig`FourierCos	"FourierCos[list] computes the discrete cosine transform of a list of real numbers."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NthPair	"NthPair[n] returns the nth unordered pair of distinct positive integers, when sequenced to minimize the size of the larger integer. Pairs that have the same larger integer are sequenced in increasing order of their smaller integer."
<<EntryDelimiter>>
NumericalMath`Butcher`$ContinuousExtension	"$ContinuousExtension is a global environment setting, specifying whether to generate conditions for continuous extensions of Runge-Kutta methods."
<<EntryDelimiter>>
ClusterIntegration`LSF`LSFEngine	"Internal function of ClusterIntegration. Use ClusterSetEngine to set the default engine."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`StirlingSecond	"StirlingSecond[n, k] returns a Stirling number of the second kind."
<<EntryDelimiter>>
Miscellaneous`Music`QuarterTone	"QuarterTone is an interval list in which each semitone (100 cents) is split in two."
<<EntryDelimiter>>
AuthorTools`StyleTools`PrivateStylesheetQ	"PrivateStylesheetQ[nbObj] returns True if the given notebook object has an embedded stylesheet."
<<EntryDelimiter>>
Algebra`FiniteFields`FromElementCode	"FromElementCode[f, code] gives the field element of f associated with code, a non-negative integer less than FieldSize[f]."
<<EntryDelimiter>>
Parallel`Concurrency``ResetQueues	"ResetQueues[] waits for all running concurrent evaluations and abandons any queued evaluations.\r\n\tIt can be used to clean up after aborting WaitAll[]."
<<EntryDelimiter>>
AuthorTools`MakeIndex`ColumnHeights	"ColumnHeights is an option to MakeIndex that specifies the height of the grids used for the \"TwoColumn\" format. Setting it to {n1, n2, ...} indicates that the first grid should have n1 rows, the second n2, etc."
<<EntryDelimiter>>
Calculus`VariationalMethods`FirstIntegrals	"FirstIntegrals[f, u[x], x] or FirstIntegrals[f, {u[x],v[x],...}, x] returns a list of first integrals corresponding to those coordinates u, v, ... of the integrand f that are ignorable; when f is independent of x and depends on the coordinates and their first derivatives only, the first integral corresponding to x is also returned."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Thin	"Thin is a value that the option EdgeStyle can take on in the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IntervalGraph	"IntervalGraph[l] constructs the interval graph defined by the list of intervals l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Level	"Level is an option for the function BreadthFirstTraversal that makes the function return levels of vertices."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`DifferentialEquationTrek	"DifferentialEquationTrek is a value for the option TrekGenerator which shows the solution of differential equations."
<<EntryDelimiter>>
Geometry`Polytopes`NumberOfVertices	"NumberOfVertices[polytope] gives the number of vertices of polytope."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`EquationTrekkerState	"EquationTrekkerState[data] contains sufficient data so that if you use EquationTrekker[EquationTrekkerState[data]], the trek window will be restored to the point at which the state was saved."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ScaleFactors	"ScaleFactors[pt] gives a list of the scale factors at the point pt in the default coordinate system. ScaleFactors[pt, coordsys] gives a list of the scale factors at the point pt in the coordinate system coordsys. If pt is not given, the default coordinate variables are used."
<<EntryDelimiter>>
NumericalMath`Approximations`Bias	"Bias is an option to RationalInterpolation, GeneralRationalInterpolation, MiniMaxApproximation, and GeneralMiniMaxApproximation. It is a number between -1 and 1 and causes the abscissas to be chosen with a bias to the left or right of the interval. Bias -> 0 causes the abscissas to be chosen symmetrically."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`Biunitary	"Biunitary is an option value for the SumOfFactorsType option of AliquotSequence, AliquotCycle, and SumOfFactors, specifying that only divisors d of n except n are to be added such that if p^(2e) is the largest power of p dividing n for some prime p, then p^e is not the largest power of p dividing d."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomRGF	"RandomRGF[n] returns a random restricted growth function (RGF) defined on the first n natural numbers. RandomRGF[n, k] returns a random RGF defined on the first n natural numbers having maximum element equal to k."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Biharmonic	"Biharmonic[f] gives the Laplacian of the Laplacian of the scalar function f in the default coordinate system. Biharmonic[f, coordsys] gives the biharmonic of f in the coordinate system coordsys."
<<EntryDelimiter>>
Parallel`Concurrency``$QueueLength	"$QueueLength is the length of the input queue $Queue."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HerschelGraph	"HerschelGraph returns a graph object that represents a Herschel graph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CircularEmbedding	"CircularEmbedding[n] constructs a list of n points equally spaced on a circle. CircularEmbedding[g] embeds the vertices of g equally spaced on a circle."
<<EntryDelimiter>>
Miscellaneous`Geodesy`ToDegrees	"ToDegrees[{d,m}] or ToDegrees[{d,m,s}] converts degree-minute-second forms of coordinates to degrees. The coordinates are adjusted to stay within [-180,180] degrees. Note that the sign of d is enforced on m and s; so {-34,3,2} means 34 deg, 3 min, and 2 sec W (or S), as does {-34,-3,-2}."
<<EntryDelimiter>>
DocumentationSearch`DirectHitSearch	"DirectHitSearch[criteria] searches the documentation and returns a URI if there is a one specific hit for the given query."
<<EntryDelimiter>>
AuthorTools`StyleTools`InstallStylesheet	"InstallStylesheet[nb, name] saves a copy of the given stylesheet to $UserStylesheetDirectory."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionGrid	"InterpolatingFunctionGrid[ifun] gives the grid of all of the interpolating points."
<<EntryDelimiter>>
ResourceLocator`PreferencesDelete	StringJoin["PreferencesDelete[ appname] deletes the preference expression for the given application.","PreferencesDelete[ appname, categeory delets the preferences for a given category."]
<<EntryDelimiter>>
DiscreteMath`CombinatorialFunctions`Hofstadter	"Hofstadter[n] gives Hofstadter's function for positive integer n."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DepthFirstTraversal	"DepthFirstTraversal[g, v] performs a depth-first traversal of graph g starting from vertex v, and gives a list of vertices in the order in which they were encountered. DepthFirstTraversal[g, v, Edge] returns the edges of the graph that are traversed by the depth-first traversal in the order in which they are traversed. DepthFirstTraversal[g, v, Tree] returns the depth-first tree of the graph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`WeightRange	"WeightRange is an option to the functions SetEdgeWeights and SetVertexWeights that gives the range for these weights. The default range is [0, 1] for real as well as integer weights."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BipartiteMatchingAndCover	"BipartiteMatchingAndCover[g] takes a bipartite graph g and returns a matching with maximum weight along with the dual vertex cover. If the graph is not weighted, it is assumed that all edge weights are 1."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Dijkstra	"Dijkstra[g, v] gives a shortest-path spanning tree and associated distances from vertex v of graph g. The shortest-path spanning tree is given by a list in which element i is the predecessor of vertex i in the shortest-path spanning tree. Dijkstra does not work correctly when the edge weights are negative; BellmanFord should be used in this case."
<<EntryDelimiter>>
NumericalMath`NLimit`Scale	"Scale is an option of NLimit and ND. It specifies the initial stepsize in the sequence of steps or the radius of the circle of integration for Cauchy's integral formula in ND."
<<EntryDelimiter>>
LinearAlgebra`Tridiagonal`TridiagonalSolve	"TridiagonalSolve[ a, b, c, r ] solves A . x == r for x, where A is a tridiagonal matrix. The three diagonals of A are given by: a11 = b[[1]], a12 = c[[1]], a21 = a[[1]], a22 = b[[2]], a23 = c[[2]], ... No pivoting is done, so the algorithm may fail even though a solution exists. This cannot happen for a symmetric positive definite matrix."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LexicographicSubsets	"LexicographicSubsets[l] gives all subsets of set l in lexicographic order. LexicographicSubsets[n] returns all subsets of {1, 2,..., n} in lexicographic order."
<<EntryDelimiter>>
Miscellaneous`Geodesy`ToAuthalicRadius	"ToAuthalicRadius[a,e] gives the radius of the authalic sphere based on the spheroid with semimajor axis a and eccentricity e."
<<EntryDelimiter>>
DiscreteMath`RSolve`Odd	"Odd[n] is equivalent to OddQ[n] except that it remains unevaluated when n is not numerical."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`SalvageCells	"SalvageCells[file.nb] returns a list of cells salvaged from file.nb."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetDirectory	"StylesheetDirectory is an option to InstallStylesheet that determines where the stylesheet will be installed."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromInversionVector	"FromInversionVector[v] reconstructs the unique permutation with inversion vector v."
<<EntryDelimiter>>
DocumentationSearch`SearchDocumentationMetaData	"SearchDocumentationMetaData[] returns valid meta data that can be returned from a search."
<<EntryDelimiter>>
Parallel`Kernels``putback	"putback[kernel, result] puts a received evaluation result back so it can be received again. The result should be wrapped in HoldComplete. There can be only one putback."
<<EntryDelimiter>>
Statistics`DataManipulation`ColumnTake	"ColumnTake[data, spec] takes the specified columns in data."
<<EntryDelimiter>>
AuthorTools`Experimental`ItemLookupCategories	"ItemLookupCategories is an option to ItemLookup that determines which top-level categories are scanned."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MinimumChangePermutations	"MinimumChangePermutations[l] constructs all permutations of list l such that adjacent permutations differ by only one transposition."
<<EntryDelimiter>>
SubKernels`LinkKernels`ConnectLink	"ConnectLink[\"port@host\", opts..] connects to a waiting kernel using LinkConnect. Options are passed to LinkConnect.\r\n\tConnectLink[link, opts..] connects to an already established LinkObject."
<<EntryDelimiter>>
Parallel`Kernels``$maxProcessQueueSize	"$maxProcessQueueSize is the constant max size of a process queue."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionDomain	"InterpolatingFunctionDomain[ifun] gives the domain for the InterpolatingFunction object ifun."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermuteSubgraph	"PermuteSubgraph[g, p] permutes the vertices of a subgraph of g induced by p according to p."
<<EntryDelimiter>>
AuthorTools`Experimental`CategorizeResults	"CategorizeResults is an option to NotebookSearch that indicates whether to present Help Browser search results grouped by category or as a flat list."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AddVertices	"AddVertices[g, n] adds n disconnected vertices to graph g. AddVertices[g, vList] adds vertices in vList to g. vList contains embedding and graphics information and can have the form {x, y} or {{x1, y1}, {x2, y2}...} or the form {{{x1, y1}, g1}, {{x2, y2}, g2},...}, where {x, y}, {x1, y1}, and {x2, y2} are point coordinates and g1 and g2 are graphics information associated with vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Box	"Box is a value that the option VertexStyle, used in ShowGraph, can be set to."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShuffleExchangeGraph	"ShuffleExchangeGraph[n] returns the n-dimensional shuffle-exchange graph whose vertices are length n binary strings with an edge from w to w' if (i) w' differs from w in its last bit or (ii) w' is obtained from w by a cyclic shift left or a cyclic shift right. An option VertexLabel is provided, with default setting False, which can be set to True, if the user wants to associate the binary strings to the vertices as labels."
<<EntryDelimiter>>
LightweightGridClient`RemoteKernelInformation	"RemoteKernelInformation[link] returns information about the Lightweight Grid kernel connected on link.\r\nRemoteKernelInformation[] returns information about all open Lightweight Grid kernels."
<<EntryDelimiter>>
AuthorTools`Experimental`InstallSearchMenus	"InstallSearchMenus[] adds menu items to the Help menu via $UserBaseDirectory/Autoload/NotebookSearchMenus/FrontEnd/init.m"
<<EntryDelimiter>>
Algebra`PolynomialExtendedGCD`polyextGCD	"debug"
<<EntryDelimiter>>
Calculus`VectorAnalysis`CrossProduct	"CrossProduct[v1, v2] gives the cross product (sometimes called vector product) of the two vectors v1, v2 in three space in the default coordinate system. CrossProduct[v1, v2, coordsys] gives the cross product of v1 and v2 in the coordinate system coordsys."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`NewtonCotesWeights	"NewtonCotesWeights[n, a, b] gives a list of the pairs {abscissa, weight} for the elementary n point Newton-Cotes formula for quadrature on the interval a to b. NewtonCotesWeights has the option QuadratureType, which can be Open or Closed."
<<EntryDelimiter>>
Miscellaneous`Calendar`Gregorian	"Gregorian specifyies that the Gregorian calendar is to be used. It is a value for the Calendar option and can be used as an argument to CalendarChange. It is assumed that the date must be {1752, 9, 14} or later."
<<EntryDelimiter>>
ClusterIntegration`HPC`HPCLoginScript	"Internal functions. Use Kernel Configuration menu to configure kernels."
<<EntryDelimiter>>
SubKernels`LocalKernels`$mathkernel	"$mathkernel gives a suitable operating-system command for invoking a local kernel."
<<EntryDelimiter>>
AuthorTools`DiffReport`ShowDiffProgress	"ShowDiffProgress is an option of DiffReport and NotebookDiff that specifies whether to show incremental progress."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationType	"PermutationType[p] returns the type of permutation p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BiconnectedComponents	"BiconnectedComponents[g] gives a list of the biconnected components of graph g. If g is directed, the underlying undirected graph is used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ThickDashed	"ThickDashed is a value that the option EdgeStyle can take on in the graph data structure or in ShowGraph."
<<EntryDelimiter>>
Algebra`PolynomialContinuedFractions`PolynomialContinuedFraction	"PolynomialContinuedFraction[p, x] gives the continued fraction representation for the rational function of polynomials p in the variable x. PolynomialContinuedFraction[p, x, n] gives the continued fraction representation through order n."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`Closed	"Closed is a value for the QuadratureType option of NewtonCotesWeights and NewtonCotesError."
<<EntryDelimiter>>
Calculus`VectorAnalysis`CoordinatesFromCartesian	"CoordinatesFromCartesian[pt] gives the coordinates in the default coordinate system of the point pt given in Cartesian coordinates. CoordinatesFromCartesian[pt, coordsys] gives the coordinates in the coordinate system coordsys of the point given in Cartesian coordinates."
<<EntryDelimiter>>
Parallel`Palette``ParallelPreferences	"ParallelPreferences[] gives a parallel computing preference panel."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeBruijnSequence	"DeBruijnSequence[a, n] returns a De Bruijn sequence on the alphabet a, a shortest sequence in which every string of length n on alphabet a occurs as a contiguous subsequence."
<<EntryDelimiter>>
AuthorTools`Experimental`UninstallSearchMenus	"UninstallSearchMenus[] deletes the file $UserBaseDirectory/Autoload/NotebookSearchMenus/FrontEnd/init.m"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NormalizeVertices	"NormalizeVertices[v] gives a list of vertices with a similar embedding as v but with all coordinates of all points scaled to be between 0 and 1."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`RoundingRule	"RoundingRule is an option to SetArithmetic and specifies the rounding scheme to use. The choices are RoundToEven, RoundToInfinity, and Truncation. The default is RoundToEven."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`NearestNeighbor	"NearestNeighbor[{a,b},{{x1,y1},{x2,y2},...,{xn,yn}}] yields the label of the nearest neighbor of {a,b} out of the points {{x1,y1},{x2,y2},...,{xn,yn}}. NearestNeighbor[{a,b},{q1,q2,...,qm},val] yields the label of the nearest neighbor of {a,b} using the Voronoi vertices qj and the Voronoi vertex adjacency list val. NearestNeighbor[{{a1,b1},...,{ap,bp}},{{x1,x2},..., {xn,yn}}] or NearestNeighbor[{{a1,b1},...,{ap,bp}},{q1,q2,...,qm},val] yields the nearest neighbor labels for the list {{a1,b1},...,{ap,bp}}."
<<EntryDelimiter>>
Statistics`DataManipulation`CumulativeSums	"CumulativeSums[list] gives cumulative sums of list."
<<EntryDelimiter>>
SubKernels`RemoteKernels`LaunchRemote	"LaunchRemote[host, template, ConnectionType->LinkLaunch, opts] launches a kernel on the given host using LinkLaunch; opts is passed as options to LinkLaunch.\r\n\tLaunchRemote[host, template, ConnectionType->LinkCreate, opts..] creates a local link and uses Run to start a remote kernel, which is expected to open a connection to the link created. opts is passed as options to LinkCreate."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PointsAndLines	"PointsAndLines is now obsolete."
<<EntryDelimiter>>
Miscellaneous`Geodesy`Eccentricity	"Eccentricity is an option for SpheroidalDistance, which sets the eccentricity of the ellipsoid defining the planet. The default is for the Earth, from the WGS-84 standard."
<<EntryDelimiter>>
Geometry`Rotations`RotationMatrix3D	"RotationMatrix3D[phi, theta, psi] gives the matrix for rotation by the specified Euler angles in three dimensions."
<<EntryDelimiter>>
AuthorTools`Common`HorizontalInsertionPointQ	"HorizontalInsertionPointQ[nb] returns True if a notebook's insertion point is outside any cell or cell bracket, and False otherwise."
<<EntryDelimiter>>
ResourceLocator`TextResourceFunction	"TextResourceFunction[ ] is a function that looks up text resources."
<<EntryDelimiter>>
AuthorTools`Common`IncludeCellIndex	"IncludeCellIndex is an option that determines whether a cell's numeric index (the first cell in a notebook has an index of 1, the second an index of 2, etc.) should be included in the output."
<<EntryDelimiter>>
Optimization`MPSData`ConstraintMatrix	"mpsData@ConstraintMatrix extracts the constraint matrix and return as an sparse array."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfPartitions	"NumberOfPartitions[n] counts the number of integer partitions of n."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`KSubsetGroup	"KSubsetGroup[pg, s] returns the group induced by a permutation group pg on the set s of k-subsets of [n], where n is the index of pg. The optional argument Type can be Ordered or Unordered and depending on the value of Type s is treated as a set of k-subsets or k-tuples."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RevealCycles	"RevealCycles[p] unveils the canonical hidden cycle structure of permutation p."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`Open	"Open is a value for the QuadratureType option of NewtonCotesWeights and NewtonCotesError."
<<EntryDelimiter>>
NumericalMath`CauchyPrincipalValue`CauchyPrincipalValue	"CauchyPrincipalValue[f[x], {x, a, {b, eps}, c}, options] gives the Cauchy principal value of NIntegrate[f[x], {x, a, c}, options] with a singularity at x == b. This is accomplished as NIntegrate[f[x], {x, a, b-eps, b, b+eps, c}, options], where the portion NIntegrate[f[x], {x, b-eps, b, b+eps}, options] is evaluated as NIntegrate[f[b+t] + f[b-t], {t, 0, eps}, options]. If eps does not appear, a default value will be used. More generally, CauchyPrincipalValue[f[x], {x, x0, ..., xi, ..., {xj}, ..., xn}] gives the integral along the path {x0, ..., xi, ..., xj, ..., xn} using the Cauchy principle value at those abscissas enclosed in {}, any of which may include a user-specified eps."
<<EntryDelimiter>>
DocumentationSearch`CreateSpellIndex	"CreateSpellIndex[indexDir, spellIndexDir] takes the words from indexDir and creates a spelling index at spellIndexDir."
<<EntryDelimiter>>
NumberTheory`PrimitiveElement`PrimitiveElement	"PrimitiveElement[z, {a1,...,an}] returns a pair {r, {f1,...,fn}}, where r is a primitive element for the extension of rationals by algebraic numbers a1,...,an, and f1,...,fn are polynomials in z such that ai==fi/.z->r for 1<=i<=n."
<<EntryDelimiter>>
AuthorTools`StyleTools`PathToStylesheet	"PathToStylesheet[nbObj] returns the full path to the file being used as the stylesheet for the given notebook object. If the path cannot be determined, $Failed is returned; if the notebook has a private stylesheet, None is returned."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectFiles	"ProjectFiles[file] returns the list of notebooks that make up the project, as specified by the project file."
<<EntryDelimiter>>
Algebra`FiniteFields`PowerList	"PowerList[f] returns a list of the data parts of the non-zero elements of the field f. The first element in the list represents the multiplicative identity. The second element represents a primitive element of the field. The rest of the list represents successive powers of the primitive element."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BrelazColoring	"BrelazColoring[g] returns a vertex coloring in which vertices are greedily colored with the smallest available color in decreasing order of vertex degree."
<<EntryDelimiter>>
NumericalMath`InterpolateRoot`ShowProgress	"ShowProgress is an option to InterpolateRoot, which takes values of True or False and specifies whether progress is to be monitored."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Cycle	"Cycle[n] constructs the cycle on n vertices, the 2-regular connected graph. An option Type that takes on values Directed or Undirected is allowed. The default setting is Type -> Undirected."
<<EntryDelimiter>>
Geometry`Rotations`RotationMatrix2D	"RotationMatrix2D[theta] gives the matrix for rotation by angle theta in two dimensions."
<<EntryDelimiter>>
NumericalMath`NLimit`EulerSum	"EulerSum[expr, range] uses Euler's transformation to numerically evaluate the sum of expr over the specified range."
<<EntryDelimiter>>
Miscellaneous`Dictionary`DictionaryWordQ	"DictionaryWordQ[\"word\"] returns True if \"word\" is in the dictionary $Dictionary. DictionaryWordQ[patt] returns True if a word matching the string pattern patt is in the dictionary."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NecklacePolynomial	"NecklacePolynomial[n, c, Cyclic] returns a polynomial in the colors in c whose coefficients represent numbers of ways of coloring an n-bead necklace with colors chosen from c, assuming that two colorings are equivalent if one can be obtained from the other by a rotation. NecklacePolynomial[n, c, Dihedral] is different in that it considers two colorings equivalent if one can be obtained from the other by a rotation or a flip or both."
<<EntryDelimiter>>
LinearAlgebra`FourierTrig`FourierSin	"FourierSin[list] computes the discrete sine transform of a list of real numbers."
<<EntryDelimiter>>
DiscreteMath`RSolve`MakeReal	"MakeReal is an obsolete option of RSolve and SeriesTerm. RSolve and SeriesTerm automatically try to replace pairs of conjugate complex quantities with double their real parts."
<<EntryDelimiter>>
Graphics`Arrow`HeadCenter	"HeadCenter is an obsolete option for the Arrow primitive.  It is used when HeadShape -> Automatic.  It describes the location of the center of the  base of the arrowhead along the length of the arrow, as a factor of the  length of the arrowhead.  That is, if HeadCenter -> 0, the arrow will be  two lines; if HeadCenter -> 1, the arrowhead will be a perfect triangle;  otherwise, the arrowhead will be four-sided."
<<EntryDelimiter>>
DiscreteMath`RSolve`DiscreteMath`RSolve`ExponentialGeneratingFunction	"ExponentialGeneratingFunction[eqn, a[n], n, z] gives the exponential generating functions Sum[a[n] z^n / n!, {n, n0, Infinity}] for the functions a[n] solving eqn, with independent variable n. ExponentialGeneratingFunction[{eqn1, eqn2, ...}, {a1[n], a2[n], ...}, n, z] gives the exponential generating functions Sum[ai[n] z^n / n!, {n, n0, Infinity}] for the functions ai[n] solving eqn1, eqn2, ..., with independent variable n. Here n0 denotes the least value of n such that a[n] (or ai[n]) appears in the equation(s)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PairGroup	"PairGroup[g] returns the group induced on 2-sets by the permutation group g. PairGroup[g, Ordered] returns the group induced on ordered pairs with distinct elements by the permutation group g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MeredithGraph	"MeredithGraph returns a 4-regular, 4-connected graph that is not Hamiltonian, providing a counterexample to a conjecture by C. St. J. A. Nash-Williams."
<<EntryDelimiter>>
AuthorTools`Experimental`SearchInResults	"SearchInResults is an option to NotebookSearch which confines the given search space to the notebooks or browser items found by the immediately preceeding search."
<<EntryDelimiter>>
ClusterIntegration`XGRID`XGRIDLaunchComputeKernels	"Internal function of ClusterIntegration. Use LaunchKernels to launch remote kernels on Xgrid clusters."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionDerivativeOrder	"InterpolatingFunctionDerivativeOrder[ifun] gives the derivative of the interpolated function which will be computed at args when ifun[args] is evaluated for the InterpolatingFunction object ifun."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Contract	"Contract[g, {x, y}] gives the graph resulting from contracting the pair of vertices {x, y} of graph g."
<<EntryDelimiter>>
Security`LoadSecurityData	"LoadSecurityData[ dir,file] returns the security data for the given file. It returns $Failed on any error."
<<EntryDelimiter>>
NumericalMath`Butcher`SymbolicTable	"SymbolicTable is an alternative to Table that allows symbolic ranges."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Weak	"Weak is an option to ConnectedQ that seeks to determine if a directed graph is weakly connected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Distances	"Distances[g, v] returns the distances in nondecreasing order from vertex v to all vertices in g, treating g as an unweighted graph."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherRowSum	"ButcherRowSum is an option to RungeKuttaOrderConditions stating whether the row-sum conditions for the c[i] should be added to the list of order conditions. ButcherRowSum may be set to True or False."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CyclicGroupIndex	"CyclicGroupIndex[n, x] returns the cycle index of the cyclic group on n symbols, expressed as a polynomial in x[1], x[2], ..., x[n]."
<<EntryDelimiter>>
Parallel`Kernels``receive0	"receive0[kernel] returns a result from kernel and $notReady if no result is available immediately or no evaluation is pending.\r\n\tThe result received is wrapped in HoldComplete."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`FinalSolutions	"FinalSolutions[sys, sols] gives the end point solutions sols for the system\r\nsys specified as an NDSolveProblem."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TreeToCertificate	"TreeToCertificate[t] returns a binary string that is a certificate for the tree t such that trees have the same certificate if and only if they are isomorphic."
<<EntryDelimiter>>
Geometry`Polytopes`CircumscribedRadius	"CircumscribedRadius[polytope] gives the radius of a circumscribed circle/sphere of polytope, when the edges of polytope have unit length."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HighlightedEdgeColors	"HighlightedEdgeColors is an option to Highlight that determines which colors are used for the highlighted edges."
<<EntryDelimiter>>
Parallel`V2``RemoteEvaluate	"RemoteEvaluate[] has been superseded by ParallelEvaluate[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ApproximateVertexCover	"ApproximateVertexCover[g] produces a vertex cover of graph g whose size is guaranteed to be within twice the optimal size."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CycleIndex	"CycleIndex[pg, x] returns the polynomial in x[1], x[2], ..., x[index[g]] that is the cycle index of the permutation group pg. Here index[pg] refers to the length of each permutation in pg."
<<EntryDelimiter>>
SubKernels`LocalKernels`localKernel	"localKernel[..] is a local subkernel."
<<EntryDelimiter>>
Geometry`Polytopes`Dual	"Dual[p] gives the dual of polytope p (if it exists)."
<<EntryDelimiter>>
Algebra`FiniteFields`FunctionOfCode	"FunctionOfCode[g] is a value of the option FormatType, used to specify the format g[c] for an element in field f, where c is the integer code for the element. g can be any symbol."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextBinarySubset	"NextBinarySubset[l, s] constructs the subset of l following subset s in the order obtained by interpreting subsets as binary string representations of integers."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeZerosInterval	"BesselJPrimeZerosInterval[nu, {zmin, zmax}] gives a list of the zeros of the derivative of the order nu BesselJ function that lie in the interval zmin to zmax."
<<EntryDelimiter>>
Miscellaneous`Music`HertzToCents	"HertzToCents[flist] converts a list of frequencies measured in Hertz to a list of intervals measured in cents."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SymmetricQ	"SymmetricQ[r] tests if a given square matrix r represents a symmetric relation. SymmetricQ[g] tests if the edges of a given graph represent a symmetric relation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfPermutationsByCycles	"NumberOfPermutationsByCycles[n, m] gives the number of permutations of length n with exactly m cycles."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RealizeDegreeSequence	"RealizeDegreeSequence[s] constructs a semirandom graph with degree sequence s."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetPartitions	"SetPartitions[set] returns the list of set partitions of set. SetPartitions[n] returns the list of set partitions of {1, 2, ..., n}. If all set partitions with a fixed number of subsets are needed use KSetPartitions."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankPermutation	"RankPermutation[p] gives the rank of permutation p in lexicographic order."
<<EntryDelimiter>>
Miscellaneous`Music`Scale	"Scale[ilist, freq, dur] creates a Sound object corresponding to ilist, a list of intervals measured in cents, starting at freq Hertz and lasting dur seconds. Pre-defined interval lists are PythagoreanChromatic, PythagoreanMajor, JustMajor, JustMinor, MeanChromatic, MeanMajor, MeanMinor, TemperedChromatic, TemperedMajor, TemperedMinor, QuarterTone, and SixthTone."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SignaturePermutation	"SignaturePermutation[p] gives the signature of permutation p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HeapSort	"HeapSort[l] performs a heap sort on the items of list l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnitransitiveGraph	"UnitransitiveGraph returns a 20-vertex, 3-unitransitive graph discovered by Coxeter, that is not isomorphic to a 4-cage or a 5-cage."
<<EntryDelimiter>>
AuthorTools`Experimental`SelectedItems	"SelectedItems is an option to NotebookSearch that can be set to All or a list of patterns indicating Help Browser locations to search."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`FromBilateral	"FromBilateral[cell] returns a list of the constituent cells from the given bilateral cell. FromBilateral[cellList] returns the list with each bilateral cell so expanded."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GridGraph	"GridGraph[n, m] constructs an n*m grid graph, the product of paths on n and m vertices. GridGraph[p, q, r] constructs a p*q*r grid graph, the product of GridGraph[p, q] and a path of length r."
<<EntryDelimiter>>
AuthorTools`Pagination`NotebookPaginationCache	"NotebookPaginationCache[nb] reads nb's tagging rules and returns the pagination cache, or None if none exists."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`Truncation	"Truncation is a choice for the option RoundingRule of SetArithmetic. It specifies that the ``rounding '' is to simply discard excess digits, as Floor does for positive numbers."
<<EntryDelimiter>>
AuthorTools`Experimental`$DefaultSearchNotebooks	"$DefaultSearchNotebooks is the default list of notebooks scanned by NotebookSearch."
<<EntryDelimiter>>
DiscreteMath`RSolve`HypergeometricF	"HypergeometricF[{a1, a2, ...}, {b1, b2, ...}, z] is obsolete. It is superseded by HypergeometricPFQ[{a1, a2, ...}, {b1, b2, ...}, z]."
<<EntryDelimiter>>
NumericalMath`Butcher`\[Theta]	"\\[Theta] is the symbol used in continuous output for Runge-Kutta methods."
<<EntryDelimiter>>
Algebra`FiniteFields`FunctionOfCoefficients	"FunctionOfCoefficients[g] is a value of the option FormatType, used to specify the format g[c0, c1, ...] for an element in field f, where c0, c1, ... are the coefficients in the polynomial representation of the element. g can be any symbol."
<<EntryDelimiter>>
DiscreteMath`RSolve`SeriesTerm	"SeriesTerm[f, {z, z0, n}, opts] gives the coefficient of the term (z-z0)^n in the Laurent series expansion for f about the point z = z0."
<<EntryDelimiter>>
NumberTheory`Rationalize`ProjectiveRationalize	"ProjectiveRationalize[{x0,x1,...,xn}] returns a list of integers {s0,s1,...,sn} so that the ratios si/sj approximate the ratios xi/xj well for each pair 0 <= i,j <= n. ProjectiveRationalize[{x0,x1,...,xn}, prec] allows a tolerance of 10^-prec. The numbers xi must be real."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Index	"Index[p] gives the index of permutation p, the sum of all subscripts j such that p[j] is greater than p[j+1]."
<<EntryDelimiter>>
DiscreteMath`RSolve`Gf	"Gf[a][z] is used by PowerSum to denote Sum[a[n] z^n, {n, 0, Infinity}]."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Spherical	"Spherical represents the spherical coordinate system with default variables Rr, Ttheta, and Pphi. Spherical[r, theta, phi] represents the spherical coordinate system with variables r, theta, and phi. The coordinate system is defined using the convention from physics, where r is the radius (distance from the origin), theta is the angle with respect to the vertical axis, and phi is the azimuth in the horizontal plane."
<<EntryDelimiter>>
Calculus`VariationalMethods`VariationalD	"VariationalD[f, u[x], x] or VariationalD[f, u[x,y,...], {x,y,...}] returns the first variational derivative of the functional defined by the integrand f which is a function of u, its derivatives, and x,y,....  VariationalD[f, {u[x,y,...], v[x,y,...],...}, {x,y,...}] gives a list of first variational derivatives with respect to u, v, ... ."
<<EntryDelimiter>>
Parallel`Palette``getProfiled	""
<<EntryDelimiter>>
LightweightGridClient`RemoteServicesAgentInformation	"RemoteServicesAgentInformation[\"agent\"] returns information about agent.\r\nRemoteServicesAgentInformation[] returns information about agents on the local network."
<<EntryDelimiter>>
Miscellaneous`WorldNames`MiddleEast	"MiddleEast contains the names of the countries of the Middle East defined in the WorldData database."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TravelingSalesman	"TravelingSalesman[g] finds an optimal traveling salesman tour in graph g."
<<EntryDelimiter>>
Parallel`Kernels``$kernels	"$kernels is the raw list of open subkernels."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetCategoryStyles	"StylesheetCategoryStyles[nb, cat] returns a list of style names for those cells in the given stylesheet containing the specified cell tag."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TranslateVertices	"TranslateVertices[v, {x, y}] adds the vector {x, y} to the vertex embedding location of each vertex in list v. TranslateVertices[g, {x, y}] translates the embedding of the graph g by the vector {x, y}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UndirectedQ	"UndirectedQ[g] yields True if graph g is undirected."
<<EntryDelimiter>>
Miscellaneous`WorldNames`World	"The symbol World contains the names of all the countries in the WorldData database."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`ComputerNumber	"ComputerNumber[sign, mantissa, exp, value, x] is a data object that represents a computer number, but its default print format is a simple number in the base specified by SetArithmetic. ComputerNumber[x] gives the complete data object representing the number x. ComputerNumber[sign, mantissa, exp] likewise gives the complete data object ComputerNumber[sign, mantissa, exp, value, x] where value and x have the value sign * mantissa * base^exp. The arithmetic with value is computer arithmetic; the arithmetic with x is ordinary high-precision arithmetic. Normal[ComputerNumber[...]] gives value."
<<EntryDelimiter>>
DiscreteMath`RSolve`IntegerFunctions	"IntegerFunctions is an option of RSolve and SeriesTerm specifying whether results will be expressed in terms of the integer functions Mod, Even, and Odd."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationToTableaux	"PermutationToTableaux[p] returns the tableaux pair that can be constructed from p using the Robinson-Schensted-Knuth correspondence."
<<EntryDelimiter>>
Parallel`Kernels``LaunchKernel	"LaunchKernel[kernel description, opts...] launches a kernel using SubKernels`New[] and initializes it for Parallel Computing Toolkit.\r\n\tLaunchKernel[kernel] clones the given kernel.\r\n\tLaunchKernel[] launches a local kernel.\r\n\tLaunchKernel[descr, n, opts...] launches n similar kernels."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Paraboloidal	"Paraboloidal represents the paraboloidal coordinate system with default variables Uu, Vv, and Pphi. Paraboloidal[u, v, phi] represents the paraboloidal coordinate system with variables u, v, and phi."
<<EntryDelimiter>>
Miscellaneous`Music`PythagoreanChromatic	"PythagoreanChromatic is an interval list that is an extension of the PythagoreanMajor scale. It has 21 notes, since the complete scale requires 7 \"natural\" notes, 7 \"flat\" notes, and 7 \"sharp\" notes."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Diameter	"Diameter[g] gives the diameter of graph g, the maximum length, among all pairs of vertices in g, of a shortest path between each pair."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`NextCorruptCell	"NextCorruptCell[nbObj] highlights the next cell in the given nbObj with cell tag \"Corrupt\""
<<EntryDelimiter>>
AuthorTools`Common`ProgressDialog	"ProgressDialog[caption, subcaption] displays caption and subcaption in a dialog-looking notebook with no buttons.  See also ProgressDialogClose, ProgressDialogSetSubcaption."
<<EntryDelimiter>>
Algebra`RootIsolation`ContractInterval	"ContractInterval[a, prec] returns an interval containing the algebraic number a which specifies a up to the decimal precision prec."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HamiltonianPath	"HamiltonianPath[g] finds a Hamiltonian path in graph g if one exists. HamiltonianPath[g, All] gives all Hamiltonian paths of graph g."
<<EntryDelimiter>>
Parallel`Palette``paletteProfiled	"paletteProfiled[name] gives the profile entry specialized for the current default evaluator."
<<EntryDelimiter>>
AuthorTools`StyleTools`ClearStyleOptions	"ClearStyleOptions[nb, sty, opts] removes the setting for the given options from a style in the stylesheet, returning an altered stylesheet."
<<EntryDelimiter>>
Algebra`PolynomialExtendedGCD`Algebra`PolynomialExtendedGCD`PolynomialExtendedGCD	"PolynomialExtendedGCD[poly1, poly2] gives the extended greatest common divisor of two univariate polynomials over the rationals. PolynomialExtendedGCD[poly1, poly2, Modulus->p] gives the extended GCD over the integers mod prime p."
<<EntryDelimiter>>
DiscreteMath`RSolve`ExponentialGeneratingFunctionConstants	"ExponentialGeneratingFunctionConstants is an option to ExponentialGeneratingFunction that determines the constants in the the returned result. The default is ExponentialGeneratingFunctionConstants -> C."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CubicalGraph	"CubicalGraph returns the graph corresponding to the cube, a Platonic solid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CliqueQ	"CliqueQ[g, c] yields True if the list of vertices c defines a clique in graph g."
<<EntryDelimiter>>
Parallel`V2``ProcessorSpeed	"ProcessorSpeed[] has been superseded by KernelSpeed[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromUnorderedPairs	"FromUnorderedPairs[l] constructs an edge list representation from a list of unordered pairs l, using a circular embedding. FromUnorderedPairs[l, v] uses v as the embedding for the resulting graph. The option Type that takes on values Undirected or Directed can be used to affect the kind of graph produced."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OddGraph	"OddGraph[n] returns the graph whose vertices are the size-(n-1) subsets of a size-(2n-1) set and whose edges connect pairs of vertices that correspond to disjoint subsets. OddGraph[3] is the Petersen graph."
<<EntryDelimiter>>
AuthorTools`Common`$AuthorToolsStyleDefinitions	"$AuthorToolsStyleDefinitions determines the style sheet used by any notebook file AuthorTools generates."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Harary	"Harary[k, n] constructs the minimal k-connected graph on n vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfPermutationsByType	"NumberOfPermutationsByTypes[l] gives the number of permutations of type l."
<<EntryDelimiter>>
Algebra`AlgebraicInequalities`Algebra`AlgebraicInequalities`SemialgebraicComponents	"SemialgebraicComponents[{I1,...,In},{x1,...,xm}] gives at least one point in each connected component of the open semialgebraic set defined by inequalities {I1,...,In}. Both sides of each inequality are polynomials in variables {x1,...,xm} with rational coefficients."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GrayCode	"GrayCode[l] constructs a binary reflected Gray code on set l. GrayCode is obsolete, so use GrayCodeSubsets instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Normal	"Normal is a value that options VertexStyle, EdgeStyle, and PlotRange can take on in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BooleanAlgebra	"BooleanAlgebra[n] gives a Hasse diagram for the Boolean algebra on n elements. The function takes two options: Type and VertexLabel, with default values Undirected and False, respectively. When Type is set to Directed, the function produces the underlying directed acyclic graph. When VertexLabel is set to True, labels are produced for the vertices."
<<EntryDelimiter>>
AuthorTools`Common`ProgressDialogSetRange	"ProgressDialogSetRange[nb, range] sets desired range of the given progress dialog."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Directed	"Directed is an option value for Type."
<<EntryDelimiter>>
Parallel`V2``ConnectSlave	"ConnectSlave[] has been superseded by LaunchKernel[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Undirected	"Undirected is an option to inform certain functions that the graph is undirected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MakeDirected	"MakeDirected[g] constructs a directed graph from a given undirected graph g by replacing each undirected edge in g by two directed edges pointing in opposite directions. The local options associated with edges are not inherited by the corresponding directed edges. Calling the function with the tag All, as MakeDirected[g, All], ensures that local options associated with each edge are inherited by both corresponding directed edges."
<<EntryDelimiter>>
Utilities`Package`FindPackages	"FindPackages[path] finds all .m files on the given path. FindPackages[path, \"pattern\"] finds all packages matching the given string pattern on the path. FindPackages[] finds all packages on $Path. The path can be specified as a directory or a list of directories."
<<EntryDelimiter>>
DifferentialEquations`NDSolveProblems`NDSolveProblem	"NDSolveProblem is a data structure containing an example problem for use in NDSolve."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`TileAreas	"TileAreas[{{x1,y1},{x2,y2},...,{xn,yn}},{q1,q2,...,qm},val] finds the areas of the tiles centered on {xi,yi} and having vertices qj as stipulated by the vertex adjacency list val."
<<EntryDelimiter>>
Statistics`DataSmoothing`ExponentialSmoothing	"ExponentialSmoothing[datalist, a] smooths datalist using an exponentially weighted average with smoothing constant a, taking the first entry of datalist as the starting value.  ExponentialSmoothing[datalist, a, y0] smooths datalist taking the starting value to be y0.  If yt is the smoothed result at time t, then the result at time t+1 is given by yt + a*(datalist[[t+1]] - yt), where a is the smoothing constant (0 < a < 1)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Center	"Center is a value that options VertexNumberPosition, VertexLabelPosition, and EdgeLabelPosition can take on in ShowGraph."
<<EntryDelimiter>>
AuthorTools`Experimental`$HelpCategories	"$HelpCategories is a list containing the names of the top-level help categories."
<<EntryDelimiter>>
Utilities`URLTools`SetFTPProxy	"SetFTPProxy is deprecated. Use SetInternetProxy[\"FTP\", {\"host\", port}] instead."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Llambda	Set[MessageName[Mmu,"usage"],Set[MessageName[Nnu,"usage"],"{Llambda,Mmu,Nnu} are the default coordinates for the Conical, ConfocalEllipsoidal, and ConfocalParaboloidal coordinate systems."]]
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetCategories	"StylesheetCategories[nb] returns a list of style categories specified by cell tags in the given stylesheet."
<<EntryDelimiter>>
Parallel`V2``$SharedDownValues	"$SharedDownValues has been superseded by $SharedFunctions."
<<EntryDelimiter>>
Parallel`Concurrency`Scheduling	StringJoin[MessageName[Scheduling,"usage"]," Scheduling[pid] gives the scheduling info of pid."]
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Partitions	"Partitions[n] constructs all partitions of integer n in reverse lexicographic order. Partitions[n, k] constructs all partitions of the integer n with maximum part at most k, in reverse lexicographic order."
<<EntryDelimiter>>
Miscellaneous`Calendar`EasterSundayGreekOrthodox	"EasterSunday[year] computes the date of Easter Sunday according to the Greek Orthodox church. The result is given as a Gregorian date."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Degrees	"Degrees[g] returns the degrees of vertex 1, 2, 3, ... in that order."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TutteGraph	"TutteGraph returns the Tutte graph, the first known example of a 3-connected, 3-regular, planar graph that is non-Hamiltonian."
<<EntryDelimiter>>
Miscellaneous`Calendar`Jewish	"Jewish specifyies that the Jewish calendar is to be used. It is a value for the Calendar option and can be used as an argument to CalendarChange."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnionSet	"UnionSet[a, b, s] merges the sets containing a and b in union-find data structure s."
<<EntryDelimiter>>
NumberTheory`FactorIntegerECM`FactorSize	"FactorSize is an option for FactorIntegerECM. FactorSize -> q optimizes the algorithm to find factors of size at most q. The default is Automatic; q is chosen to be Sqrt[n], where n is the integer to be factored."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EmptyGraph	"EmptyGraph[n] generates an empty graph on n vertices. An option Type that can take on values Directed or Undirected is provided. The default setting is Type -> Undirected."
<<EntryDelimiter>>
Graphics`ComplexMap`CartesianMap	"CartesianMap[f, {x0, x1, (dx)}, {y0, y1, (dy)}] plots the image of the cartesian coordinate lines under the function f. The default values of dx and dy are chosen so that the number of lines is equal to the value of the option Lines."
<<EntryDelimiter>>
Parallel`Concurrency``Process	"Process[pid] gives the expression that pid is to evaluate, wrapped in HoldForm[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Spectrum	"Spectrum[g] gives the eigenvalues of graph g."
<<EntryDelimiter>>
ClusterIntegration`Palette`CIPPalette	"Integrated palette for ClusterIntegration."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GeneralizedPetersenGraph	"GeneralizedPetersenGraph[n, k] returns the generalized Petersen graph, for integers n > 1 and k > 0, which is the graph with vertices {u1, u2, ..., un} and {v1, v2, ..., vn} and edges {ui, u(i+1)}, {vi, v(i+k)}, and {ui, vi}. The Petersen graph is identical to the generalized Petersen graph with n = 5 and k = 2."
<<EntryDelimiter>>
Calculus`Pade`Pade	"Pade[func, {x, x0, m, k}] gives the Pade' approximation to func (a function of the variable x) where the constant x0 is the center of expansion and m and k are the degrees of the numerator and denominator, respectively."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherBeta	"ButcherBeta[tree] gives the number of ways of labelling the tree tree with ButcherOrder[tree]-1 distinct labels such that the root is not labelled, but every other vertex is labelled. ButcherBeta[n, tree] gives the number of ways of labelling n of the vertices of the tree with n distinct labels such that every leaf is labelled and the root is not labelled."
<<EntryDelimiter>>
Parallel`V2``SharedDownValues	"SharedDownValues[] has been superseded by SetSharedFunction[]."
<<EntryDelimiter>>
Algebra`FiniteFields`ExtensionDegree	"ExtensionDegree[f] gives the degree of the extension of the field f over its base field."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InversionPoset	"InversionPoset[n] returns a Hasse diagram of the partially ordered set on size-n permutations in which p < q if q can be obtained from p by an adjacent transposition that places the larger element before the smaller. The function takes two options: Type and VertexLabel, with default values Undirected and False, respectively. When Type is set to Directed, the function produces the underlying directed acyclic graph. When VertexLabel is set to True, labels are produced for the vertices."
<<EntryDelimiter>>
NumericalMath`Butcher`RungeKuttaMethod	"RungeKuttaMethod is an option to ButcherPhi and related functions specifying the type of method to be generated. Valid settings are Explicit, DiagonallyImplicit and Implicit."
<<EntryDelimiter>>
Parallel`Parallel``$NotReady	"$NotReady is returned by ReceiveIfReady if no result is available."
<<EntryDelimiter>>
NumericalMath`Approximations`PlotFlag	"PlotFlag is an option to MiniMaxApproximation and GeneralMiniMaxApproximation that specifies whether plots of the successive iterates in the approximation algorithm are to be drawn. Its primary use is to help understand what went wrong when the algorithm fails."
<<EntryDelimiter>>
Statistics`DataManipulation`RowJoin	"RowJoin[data1, data2, ...] joins elements in corresponding rows in the datai."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SelfLoopsQ	"SelfLoopsQ[g] yields True if graph g has self-loops."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`BoundedDiagram	"BoundedDiagram[{{a1,b1},{a2,b2},...,{ap,bp}},{{x1,y1},{x2,y2},...,{xn,yn}}] yields the bounded diagram formed by bounding the infinite Voronoi diagram of the points {{x1,y1},{x2,y2},...,{xn,yn}} by the polygon defined by the vertices {{a1,b1},{a2,b2},...,{ap,bp}}. The new bounded diagram is represented as two lists: (1) a vertex coordinate list, and (2) a a vertex adjacency list, one entry for each point in the original unbounded diagram indicating the associated bounded polygon vertices in counterclockwise order. BoundedDiagram[{{a1,b1},{a2,b2},...,{ap,bp}},{{x1,y1},{x2,y2},...,{xn,yn}},val] takes val to be the vertex adjacency list of the dual Delaunay triangulation. BoundedDiagram[{{a1,b1},{a2,b2},...,{ap,bp}},{{x1,y1},{x2,y2},...,{xn,yn}}, val,hull] takes hull to be the convex hull of the unique points."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InsertIntoTableau	"InsertIntoTableau[e, t] inserts integer e into Young tableau t using the bumping algorithm. InsertIntoTableau[e, t, All] inserts e into Young tableau t and returns the new tableau as well as the row whose size is expanded as a result of the insertion."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Bispherical	"Bispherical represents the bispherical coordinate system with default variables Uu, Vv, and Pphi and default parameter value 1. Bispherical[u, v, phi] represents the bispherical coordinate system with variables u, v, and phi and default parameter value 1. Bispherical[u, v, phi, a] represents the bispherical coordinate system with variables u, v, and phi and parameter a."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PartitionQ	"PartitionQ[p] yields True if p is an integer partition. PartitionQ[n, p] yields True if p is a partition of n."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomTree	"RandomTree[n] constructs a random labeled tree on n vertices."
<<EntryDelimiter>>
DocumentationSearch`CloseDocumentationIndex	"CloseDocumentationIndex[indexDir] closes the indexDir"
<<EntryDelimiter>>
AuthorTools`NotebookDiff`IgnoreOptionDiffs	"IgnoreOptionDiffs is an option of NotebookDiff and CellDiff which specifies whether to ignore diffs in notebook and cell options."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RGFToSetPartition	"RGFToSetPartition[rgf, set] converts the restricted growth function rgf into the corresponding set partition of set. If the optional second argument, set, is not supplied, then rgf is converted into a set partition of {1, 2, ..., Length[rgf]}."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectFileLocation	"ProjectFileLocation[nb] reads the location of the current project file as stored in the TaggingRules of nb."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`AllPoints	"Allpoints is an option of ConvexHull indicating whether all distinct points on the hull or only the minimum set of points needed to define the hull are returned."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Automorphisms	"Automorphisms[g] gives the automorphism group of the graph g."
<<EntryDelimiter>>
SubKernels`RemoteKernels`remoteKernel	"remoteKernel[..] is a remote subkernel."
<<EntryDelimiter>>
Parallel`Palette``setProfiled	""
<<EntryDelimiter>>
Parallel`V2``ProcessorName	"ProcessorName[] has been superseded by KernelName[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromOrderedPairs	"FromOrderedPairs[l] constructs an edge list representation from a list of ordered pairs l, using a circular embedding. FromOrderedPairs[l, v] uses v as the embedding for the resulting graph. The option Type that takes on values Undirected or Directed can be used to affect the kind of graph produced. The default value of Type is Directed. Type -> Undirected results in the underlying undirected graph."
<<EntryDelimiter>>
LightweightGridClient`SubKernels`RemoteServicesParallelKernel	"RemoteServicesParallelKernel is the head of an expression representing a\r\nkernel started with Remote Services and used for parallel computing."
<<EntryDelimiter>>
LightweightGridClient`RemoteKernelOpen	"RemoteKernelOpen[spec] launches a kernel with the given specification.\r\nRemoteKernelOpen[{spec1, spec2, ...}] launches kernels in parallel."
<<EntryDelimiter>>
ClusterIntegration`LSF`LSFCloseJob	"Internal function of ClusterIntegration. Use ClusterCloseSlaves to close compute nodes."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Zoom	"Zoom[{i, j, k, ...}] is a value that the PlotRange option can take on in ShowGraph. Setting PlotRange to this value zooms the display to contain the specified subset of vertices, i, j, k, ...."
<<EntryDelimiter>>
DiscreteMath`RSolve`SpecialFunctions	"SpecialFunctions is an option of RSolve and SeriesTerm specifying whether results will be expressed in terms of special functions such as Legendre polynomials."
<<EntryDelimiter>>
AuthorTools`Experimental`$BrowserLookupTable	"A cache of every item in every browser configuration file visible to the current Help Browser."
<<EntryDelimiter>>
Utilities`CleanSlate`ClearInOut	"ClearInOut[] clears the In[] and Out[] values, and resets the $Line number, so new input begins as In[1]. This can produce a modest recovery of memory, but you will no longer be able to refer to output generated previously."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ChromaticPolynomial	"ChromaticPolynomial[g, z] gives the chromatic polynomial P(z) of graph g, which counts the number of ways to color g with, at most, z colors."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AlternatingPaths	"AlternatingPaths[g, start, ME] returns the alternating paths in graph g with respect to the matching ME, starting at the vertices in the list start. The paths are returned in the form of a forest containing trees rooted at vertices in start."
<<EntryDelimiter>>
Algebra`FiniteFields`FieldInd	"FieldInd[element] gives the power to which the primitive element must be raised in order to get the specified element. FieldInd is defined only if PowerListQ has been set True for the field. FieldInd[0] gives -Infinity."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AlternatingGroupIndex	"AlternatingGroupIndex[n, x] gives the cycle index of the alternating group of size n permutations as a polynomial in the symbols x[1], x[2], ..., x[n]."
<<EntryDelimiter>>
Algebra`FiniteFields`ReduceElement	"ReduceElement[element] gives a field element in reduced form. It is applied automatically to the results of arithmetic."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionInterpolationOrder	"InterpolatingFunctionInterpolationOrder[ifun] gives the interpolation order used in each dimension for computing the interpolated function args when ifun[args] is evaluated for the InterpolatingFunction object ifun."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ConnectedComponents	"ConnectedComponents[g] gives the vertices of graph g partitioned into connected components."
<<EntryDelimiter>>
Parallel`Palette``tabPreferences	""
<<EntryDelimiter>>
ClusterIntegration`Palette`CIPConfiguredClusters	"Active cluster settings for ClusterIntegration."
<<EntryDelimiter>>
AuthorTools`MakeProject`WriteProjectData	"WriteProjectData[file, data] rewrites file as a project data file containing the given data."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPlotNodeSize	"ButcherPlotNodeSize is an option to ButcherPlot that specifies a scaling factor to be applied to the default size for nodes in the plot."
<<EntryDelimiter>>
ClusterIntegration`Palette`CIPGetConfiguration	"Get configuration for ClusterIntegration."
<<EntryDelimiter>>
Statistics`DataManipulation`QuantileForm	"QuantileForm[list] sorts the elements in list, then gives a list of the elements, paired with their quantile position."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextComposition	"NextComposition[l] constructs the integer composition that follows l in a canonical order."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetMenuStyles	"StylesheetMenuStyles[nb] returns the list of style names that appear in the Format > Style menu for the given stylesheet."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Simple	"Simple is an option value for Type."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CageGraph	"CageGraph[k, r] gives a smallest k-regular graph of girth r for certain small values of k and r. CageGraph[r] gives CageGraph[3, r]. For k = 3, r can be 3, 4, 5, 6, 7, 8, or 10. For k = 4 or 5, r can be 3, 4, 5, or 6."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeDirection	"EdgeDirection is an option that takes on values True or False allowing the user to specify whether the graph is directed or not. EdgeDirection can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
Geometry`Polytopes`Area	"Area[polygon] gives the area of polygon, when the edges of polygon have unit length.  Area[polyhedron] gives the area of a face of polyhedron, when the edges of polyhedron have unit length."
<<EntryDelimiter>>
AuthorTools`StyleTools`GlobalInheritanceList	"GlobalInheritanceList[] returns a options set at the global, session, and universal levels. GlobalInheritanceList[nb, opt] returns all parts of the inheritance that contain a setting for the given option."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ReflexiveQ	"ReflexiveQ[g] yields True if the adjacency matrix of g represents a reflexive binary relation."
<<EntryDelimiter>>
Algebra`FiniteFields`PolynomialToElement	"PolynomialToElement[f, poly] gives an element in the field f corresponding to the polynomial in one symbol with integer coefficients given by poly."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationGroupQ	"PermutationGroupQ[l] yields True if the list of permutations l forms a permutation group."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`WriteGraph	"WriteGraph[g, f] writes graph g to file f using an edge list representation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MinimumChainPartition	"MinimumChainPartition[g] partitions partial order g into a minimum number of chains."
<<EntryDelimiter>>
NumericalMath`Butcher`Explicit	"Explicit is a setting for the option RungeKuttaMethod specifying the type of Runge-Kutta method to be generated."
<<EntryDelimiter>>
Geometry`Rotations`Rotate2D	"Rotate2D[vec, theta, (pt:{0,0})] rotates the vector vec by angle theta about point pt."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToUnorderedPairs	"ToUnorderedPairs[g] constructs a list of unordered pairs representing the edges of graph g. Each edge, directed or undirected, results in a pair in which the smaller vertex appears first. An option called Type that takes on values All or Simple can be used, and All is the default value. Type -> Simple ignores multiple edges and self-loops in g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Josephus	"Josephus[n, m] generates the inverse of the permutation defined by executing every mth member in a circle of n members."
<<EntryDelimiter>>
Parallel`V2``ProcessorID	"ProcessorID[] has been superseded by KernelID[]."
<<EntryDelimiter>>
Miscellaneous`WorldNames`USStates	"USStates contains the names of the 50 United States, defined in the USData database for use with WorldPlot. Set the WorldPlot option WorldDatabase -> USData to use this list."
<<EntryDelimiter>>
DemonstrationsTools`SaveBrowseWithMemory	"Normal SaveBrowse remembers the path to previous saves, but shares this\r\nmemory with (and hence, can be trumped by an intervening) OpenBrowse.\r\nThis enhanced SaveBrowse maintains a path memory seperate from OpenBrowse\r\n(see $LastSavePath)."
<<EntryDelimiter>>
ClusterIntegration`PBS`PBSEngine	"Internal function of ClusterIntegration. Use ClusterSetEngine to set the default engine."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ExpandGraph	"ExpandGraph[g, n] expands graph g to n vertices by adding disconnected vertices. This is obsolete; use AddVertices[g, n] instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankedEmbedding	"RankedEmbedding[l] takes a set partition l of vertices {1, 2,..., n} and returns an embedding of the vertices in the plane such that the vertices in each block occur on a vertical line with block 1 vertices on the leftmost line, block 2 vertices in the next line, and so on. RankedEmbedding[g, l] takes a graph g and a set partition l of the vertices of g and returns the graph g with vertices embedded according to RankedEmbedding[l]. RankedEmbedding[g, s] takes a graph g and a set s of vertices of g and returns a ranked embedding of g in which vertices in s are in block 1, vertices at distance 1 from any vertex in block 1 are in block 2, and so on."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesUsed	"StylesUsed[expr] returns a list of the style names used by the given notebook or cell expressions."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankGrayCodeSubset	"UnrankGrayCodeSubset[n, l] gives the nth subset of list l, listed in Gray code order."
<<EntryDelimiter>>
Graphics`Colors`HLSColor	"HLSColor[h,l,s] represents a color in the HLS (hue-lightness-saturation) system."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJZerosInterval	"BesselJZerosInterval[nu, {zmin, zmax}] gives a list of the zeros of the order nu BesselJ function that lie in the interval zmin to zmax."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DegreeSequence	"DegreeSequence[g] gives the sorted degree sequence of graph g."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`PreviousPrime	"PreviousPrime[n] gives the largest prime p such that p < n."
<<EntryDelimiter>>
NumberTheory`ContinuedFractions`ContinuedFractionForm	"ContinuedFractionForm[ cf ] represents a continued fraction as given by ContinuedFraction. The representation may be converted to a rational number using Normal."
<<EntryDelimiter>>
Calculus`VectorAnalysis`CoordinateSystem	"CoordinateSystem gives the name of the default coordinate system."
<<EntryDelimiter>>
Miscellaneous`Music`JustMajor	"JustMajor is an interval list in which the ratios of the 3rd, 6th, and 7th intervals are simplified from the Pythagorean model. Whereas in the Pythagorean scale the ratios are 81/64 for a 3rd, 27/16 for a 6th, and 243/128 for a 7th, in just intonation the ratios are 5/4 for a 3rd, 5/3 for a 6th, and 15/8 for a 7th. The other intervals are the same as the Pythagorean scale. JustMajor was invented by the theorist Zarlino in the 16th century so that simultaneously sounding tones would have simple ratios."
<<EntryDelimiter>>
Parallel`Status``KernelStatus	"KernelStatus[] gives a dynamic parallel kernel status display."
<<EntryDelimiter>>
AuthorTools`MakeCategories`IndexTagFormats	"IndexTagFormats is an option for MakeBrowserCategories which specifies what format or list of formats to use for IndexTag settings in the generated browser categories. Recognized formats include \"Counters\", \"CellContents\" and \"TaggingRules\"."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`ModifiedExponential	"ModifiedExponential is an option value for the SumOfFactorsType option of AliquotSequence, AliquotCycle, and SumOfFactors, specifying that only divisors d of n except n are to be added such that if p^c is the largest power of p dividing n and p^a is the largest power of p dividing d, then either a=0 or both a divides c and a+1 divides c+1."
<<EntryDelimiter>>
Graphics`Arrow`ZeroShape	"ZeroShape is an obsolete option for the Arrow primitive; it specifies the shape of an arrow with no length (and hence no direction) in a form similar to that of the HeadShape option.  Note that the parameterized form of HeadShape is not available. The coordinate system is not rotated, but is scaled to HeadScaling.  Automatic sets the default zero arrow (a point.)"
<<EntryDelimiter>>
Geometry`Rotations`Rotate3D	"Rotate3D[vec, phi, theta, psi, (pt:{0,0,0})] rotates the vector vec by specified Euler angles about point pt."
<<EntryDelimiter>>
Miscellaneous`WorldNames`Asia	"Asia contains the names of the countries of Asia defined in the WorldData database; includes the Middle East and Russia."
<<EntryDelimiter>>
Parallel`Kernels``CloseError	"CloseError[kernel] closes a failed subkernel."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SumOfSquaresRepresentations	"SumOfSquaresRepresentations[d, n] gives the list of all representations of the positive integer n as a sum of d squares of integers."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`InvariantErrorSampleRate	"InvariantErrorSampleRate is an option of\r\nInvariantErrorPlot specifying how often points from InterpolatingFunctions\r\nare sampled."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`Exponential	"Exponential is an option value for the SumOfFactorsType option of AliquotSequence, AliquotCycle, and SumOfFactors, specifying that only divisors d of n except n are to be added such that if p^c is the largest power of p dividing n and p^a is the largest power of p dividing d, then either a=0 or a divides c."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`Hull	"Hull is an option of DelaunayTriangulation indicating whether the convex hull is to be returned in addition to the vertex adjacency list val describing the triangulation. Hull -> False implies that val is returned, and Hull -> True implies that {val,hull} is returned."
<<EntryDelimiter>>
SubKernels`LinkKernels`linkKernelObject	"linkKernelObject[method] is the local kernels class object."
<<EntryDelimiter>>
AuthorTools`Pagination`Paginate	"Paginate[projFile] sets the starting page number for each notebook file in the given project to be the page after the previous notebook finished. It caches the page numbers in each notebooks' tagging rules."
<<EntryDelimiter>>
ResourceLocator`CreateDataDirectory	"CreateDataDirectory is an option for ApplicationDataDirectory and ApplicationDataUserDirectory that states whether the data directory should be created."
<<EntryDelimiter>>
DemonstrationsTools`GetCurrentPackage	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomVertices	"RandomVertices[g] assigns a random embedding to graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TransposeTableau	"TransposeTableau[t] reflects a Young tableau t along the main diagonal, creating a different tableau."
<<EntryDelimiter>>
Parallel`Parallel``$DistributedDefinitions	"$DistributedDefinitions is the list of all symbols whose definitions have been distributed."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FindSet	"FindSet[n, s] gives the root of the set containing n in union-find data structure s."
<<EntryDelimiter>>
Miscellaneous`Music`TemperedChromatic	"TemperedChromatic is an interval list corresponding to equal-temperament in which the octave is divided into 12 equal parts.  Each part is a tempered semitone (100 cents). This is  equivalent to making 12 fifths equal to 7 octaves, so an equal-tempered  fifth is equal to 700 cents. (The just intonation and Pythagorean fifths are 702 cents, and the Mean Tone fifth is 696.6 cents.) This process guarantees equivalence between pitches, and allows intervals to be the same in all keys. However, except for the octave, none of the intervals is in tune with regard to mathematical ratios and the logic Pythagoras developed from proportional lengths of strings."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeColor	"EdgeColor is an option that allows the user to associate colors with edges. Black is the default color. EdgeColor can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EquivalenceRelationQ	"EquivalenceRelationQ[r] yields True if the matrix r defines an equivalence relation. EquivalenceRelationQ[g] tests whether the adjacency matrix of graph g defines an equivalence relation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IndependentSetQ	"IndependentSetQ[g, i] yields True if the vertices in list i define an independent set in graph g."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`FirstBilateralStyles	"FirstBilateralStyles is an option to MakeBilateral which determines which cell styles should indicate the caption of a bilateral cell. Default value is $FirstBilateralStyles."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextPermutation	"NextPermutation[p] gives the permutation following p in lexicographic order."
<<EntryDelimiter>>
NumericalMath`Butcher`b	"b[j] is the coefficient of f[Y[j, x]] in the formula for Y[x] of the Runge-Kutta method being considered. Subscript notation is used to display components of the vector b."
<<EntryDelimiter>>
Miscellaneous`Dictionary`$Dictionary	"$Dictionary contains the loaded dictionary, stored as a list of strings, used by DictionaryWordQ and FindWord."
<<EntryDelimiter>>
NumericalMath`Microscope`Ulps	"Ulps is a unit of error in machine arithmetic. An ulp is the distance between two consecutive machine numbers and varies with the size of the numbers involved."
<<EntryDelimiter>>
NumericalMath`Butcher`a	"a[i,j] is the coefficient of f[Y[j, x]] in the formula for Y[i, x] of the Runge-Kutta method being considered. Subscript notation is used to display components of the matrix a."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexCover	"VertexCover[g] returns a vertex cover of the graph g. An option Algorithm that can take on values Greedy, Approximate, or Optimum is allowed. The default setting is Algorithm -> Approximate. Different algorithms are used to compute a vertex cover depending on the setting of the option Algorithm."
<<EntryDelimiter>>
NumericalMath`Butcher`c	"c[i] is a notational convenience used to represent Sum[a[i, j], {j, 1, s}] in the order conditions for the Runge-Kutta method being considered. Subscript notation is used to display components of the vector c."
<<EntryDelimiter>>
NumericalMath`Butcher`f	"f is the elementary symbol used in the representation of Butcher trees."
<<EntryDelimiter>>
NumericalMath`Butcher`e	"e represents the vector of length s with unit components."
<<EntryDelimiter>>
AuthorTools`Experimental`ExcludedCellStyles	"ExcludedCellStyles is an option to NotebookSearch. If SelectedCellStyles is set to a list of strings, this option's setting is ignored."
<<EntryDelimiter>>
Calculus`VariationalMethods`VariationalBound	"VariationalBound[f, u[x], {x,xmin,xmax}, ut, {a,amin,amax}, {b,bmin,bmax}, ...] finds the values of parameters {a,b,...} of the trial function ut that extremize Integrate[f, {x,xmin,xmax}], returning the extremal value of the functional and the optimal parameter values. VariationalBound[f, u[x,y,...], {{x,xmin, xmax},{y,ymin,ymax},...}, ut, {a,amin,amax}, {b,bmin,bmax}, ...] finds the values of parameters of a trial function of two or more variables. VariationalBound[{f,g}, u[x], {x,xmin,xmax}, ut, {a,amin,amax}, {b,bmin,bmax}, ...] or VariationalBound[{f,g}, u[x,y,...], {{x,xmin, xmax},{y,ymin,ymax},...}, ut, {a,amin,amax}, {b,bmin,bmax}, ...] extremize the ratio Integrate[f,{x,xmin,xmax}]/Integrate[g,{x,xmin,xmax}]. Specifying {a} in place of {a,amin,amax} indicates that the parameter a may range over {-Infinity, Infinity}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CirculantGraph	"CirculantGraph[n, l] constructs a circulant graph on n vertices, meaning the ith vertex is adjacent to the (i+j)th and (i-j)th vertices, for each j in list l. CirculantGraph[n, l], where l is an integer, returns the graph with n vertices in which each i is adjacent to (i+l) and (i-l)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankKSetPartition	"RankKSetPartition[sp, s] ranks sp in the list of all k-block set partitions of s. RankSetPartition[sp] ranks sp in the list of all k-block set partitions of the set of elements that appear in any subset in sp."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IsomorphismQ	"IsomorphismQ[g, h, p] tests if permutation p defines an isomorphism between graphs g and h."
<<EntryDelimiter>>
AuthorTools`Common`FlattenCellGroups	"FlattenCellGroups[nbExpr] returns the notebook expression with all the cell groupings structures removed."
<<EntryDelimiter>>
DiscreteMath`RSolve`HSolve	"HSolve[eqn, f[z], z] gives a hypergeometric formal series solution to differential equation eqn in function f[z] with independent variable z. HSolve gives {} when it determines that there is no series solution."
<<EntryDelimiter>>
DifferentialEquations`NDSolveProblems`GetNDSolveProblem	"GetNDSolveProblem[name] returns an NDSolveProblem data structure for the problem name."
<<EntryDelimiter>>
Graphics`ArgColors`ArgColor	"ArgColor[z] gives a color value whose hue is proportional to the argument of the complex number z."
<<EntryDelimiter>>
AuthorTools`Common`SelectionMoveAfterCell	"SelectionMoveAfterCell[nb] moves the insertion point after the current cell in the given notebook. If the current selection is already between cells, the selection is unchanged."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TransposePartition	"TransposePartition[p] reflects a partition p of k parts along the main diagonal, creating a partition with maximum part k."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GetVertexWeights	"GetVertexWeights[g] returns the list of weights of vertices of g. GetVertexWeights[g, vs] returns the list of weights in graph g of the vertices in vs."
<<EntryDelimiter>>
ResourceLocator`PreferencesWrite	StringJoin["PreferencesWrite[ appname, expr] saves the preference expression for the given application.","PreferencesWrite[ appname, categeory, expr] writes the preferences for a given category."]
<<EntryDelimiter>>
Calculus`VectorAnalysis`OblateSpheroidal	"OblateSpheroidal represents the oblate spheroidal coordinate system with default variables Xxi, Eeta, and Pphi and default parameter value 1. OblateSpheroidal[xi, eta, phi] represents the oblate spheroidal coordinate system with variables xi, eta, and phi and default parameter value 1. OblateSpheroidal[xi, eta, phi, a] represents the oblate spheroidal coordinate system with variables xi, eta, and phi and parameter a."
<<EntryDelimiter>>
Miscellaneous`SIUnits`Amp	"Amp, short for Ampere, is the fundamental SI unit of electric current."
<<EntryDelimiter>>
Parallel`Concurrency``ConcurrentEvaluate	"ConcurrentEvaluate[HoldComplete[exprs..]] evaluates all exprs concurrently."
<<EntryDelimiter>>
Parallel`Concurrency``QueueRun	"QueueRun[] checks all subkernels for finished evaluations and submits waiting evaluations to available kernels."
<<EntryDelimiter>>
ClusterIntegration`Palette`ComputeKernels	"ComputeKernels[...] represents configurations for compute kernels on a cluster or grid."
<<EntryDelimiter>>
Algebra`PolynomialContinuedFractions`FromPolynomialContinuedFraction	"FromPolynomialContinuedFraction[{a0,{b1,a1},{b2,a2},...}] reconstructs a nested polynomial from the list of its continued fraction terms."
<<EntryDelimiter>>
NumericalMath`Microscope`MachineError	"MachineError[f, x -> a] gives the error involved in evaluating f at x == a using machine arithmetic."
<<EntryDelimiter>>
Utilities`MemoryConserve`MemoryConserve	"MemoryConserve will reduce memory use with the Share function when memory used has increased by $MemoryIncrement. On[MemoryConserve] will use $Pre to make this happen automatically."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UpperRight	"UpperRight is a value that options VertexNumberPosition, VertexLabelPosition, and EdgeLabelPosition can take on in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IsomorphicQ	"IsomorphicQ[g, h] yields True if graphs g and h are isomorphic. This function takes an option Invariants -> {f1, f2, ...}, where f1, f2, ... are functions that are used to compute vertex invariants. These functions are used in the order in which they are specified. The default value of Invariants is {DegreesOf2Neighborhood, NumberOf2Paths, Distances}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LNorm	"LNorm[p] is a value that the option WeightingFunction, used in the function SetEdgeWeights, can take. Here p can be any integer or Infinity."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`DiagramPlot	"DiagramPlot[{{x1,y1},{x2,y2},...,{xn,yn}}] plots the {xi,yi} and the polygons corresponding to the Voronoi diagram established by the {xi,yi}. DiagramPlot[{{x1,y1},{x2,y2},...,{xn,yn}},{q1,q2,...,qm},val] plots the polygon 'centers' {xi,yi} and polygon vertices qj as stipulated by the vertex adjacency list val."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphPower	"GraphPower[g, k] gives the kth power of graph g. This is the graph whose vertex set is identical to the vertex set of g and that contains an edge between vertices i and j if g contains a path between i and j of length, at most, k."
<<EntryDelimiter>>
Parallel`Kernels``tryRelaunch	"tryRelaunch[] tries to revive dead kernels."
<<EntryDelimiter>>
NumberTheory`ContinuedFractions`PeriodicForm	"PeriodicForm[{{d1, d2, ...,dn, {p1, p2, ..., pn}}, exp}] represents the decimal expansion of a rational in terms of the preperiodic and periodic parts as given by RealDigits. PeriodicForm[digits, b] represents the expansion in base b. The representation may be converted to a rational number using Normal."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ExactRandomGraph	"ExactRandomGraph[n, e] constructs a random labeled graph of exactly e edges and n vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`WeightingFunction	"WeightingFunction is an option to the functions SetEdgeWeights and SetVertexWeights and it tells the functions how to compute edge weights and vertex weights, respectively. The default value for this option is Random."
<<EntryDelimiter>>
NumericalMath`NLimit`NLimit	"NLimit[expr, x->x0] numerically finds the limiting value of expr as x approaches x0."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MakeGraph	"MakeGraph[v, f] constructs the graph whose vertices correspond to v and edges between pairs of vertices x and y in v for which the binary relation defined by the Boolean function f is True. MakeGraph takes two options, Type and VertexLabel. Type can be set to Directed or Undirected and this tells MakeGraph whether to construct a directed or an undirected graph. The default setting is Directed. VertexLabel can be set to True or False, with False being the default setting. Using VertexLabel -> True assigns labels derived from v to the vertices of the graph."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetSectionCells	"StylesheetSectionCells[nb, sec] returns those style prototypes that appear in the given section of the stylesheet."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPlot	"ButcherPlot[tree,options] gives a plot of the tree tree.\n ButcherPlot[{tree1, tree2, ...},options] gives an array of plots of the various trees.  Valid options are ButcherPlotColumns, ButcherPlotNodeSize, ButcherPlotRootSize and ButcherPlotLabel."
<<EntryDelimiter>>
AuthorTools`StyleTools`CellInheritanceList	"CellInheritanceList[nb] returns a list of style prototypes that affect the display of the currently selected cell in the given notebook. CellInheritanceList[nb, opt] returns all parts of the inheritance that contain a setting for the given option."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomGraph	"RandomGraph[n, p] constructs a random labeled graph on n vertices with an edge probability of p. An option Type is provided, which can take on values Directed and Undirected, and whose default value is Undirected. Type->Directed produces a corresponding random directed graph. The usages Random[n, p, Directed], Random[n, p, range], and Random[n, p, range, Directed] are all obsolete. Use SetEdgeWeights to set random edge weights."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`ShowProgress	"ShowProgress is an option to AliquotSequence and AliquotCycle. When set to True, the result of each iteration is printed out before the final sequence or cycle is output. The default value is False."
<<EntryDelimiter>>
ClusterIntegration`HPC`HPCMathBatchJob	"Internal functions. Use the Batch Submission Job palette to submit batch jobs."
<<EntryDelimiter>>
NumericalMath`Approximations`GeneralMiniMaxApproximation	"GeneralMiniMaxApproximation[{x, y, (g)}, {t, {t0, t1}, m, k}, xvar, (opts)] finds the mini-max approximation to the function y[x] on the interval t0 < t < t1 where x and y are functions of t, which parametrically define y[x], m and k are the degrees of the numerator and denominator, respectively, and xvar is the variable to be used for x in the approximation. The optional g is also a function of t, and the error to be minimized is (y[x[t]] - approx[x[t]])/g[t]. The answer returned is {AbscissaList, {Approximation, MaxError}}, where AbscissaList is a list of the abscissas (values of t) where the maximum error occurs. Approximation is the rational approximation desired, and MaxError is the value of the mini-max error. GeneralMiniMaxApproximation[{x, y, (g)}, approx, {t, {t0, t1}, m, k}, xvar, (opts)] is a form that allows the user to start the iteration from a known approximation. Here approx must be in the form of an answer returned by GeneralMiniMaxApproximation."
<<EntryDelimiter>>
NumericalMath`NLimit`ExtraTerms	"ExtraTerms is an option to EulerSum. It specifies the number of terms to be used in the extrapolation process after Terms terms are explicitly included. ExtraTerms must be at least 2."
<<EntryDelimiter>>
Graphics`ComplexMap`$Lines	"$Lines is the default of the option Lines. The value should be either a positive integer or a list of two positive integers."
<<EntryDelimiter>>
NumericalMath`Approximations`RationalInterpolation	"RationalInterpolation[func, {x, m, k}, {x1, x2, ..., xn}, (opts)], (n = m+k+1), gives the rational interpolant to func (a function of the variable x), where m  and k are the degrees of the numerator and denominator, respectively, and {x1, x2, ..., xn} is a list of m+k+1 abscissas of the interpolation points. An alternative form is RationalInterpolation[func, {x, m, k}, {x, x0, x1}, (opts)], which specifies the list of abscissas implicitly: the abscissas come from the interval (x0,x1). The function func must be Listable."
<<EntryDelimiter>>
LightweightGridClient`RemoteServicesAgent	"RemoteServicesAgent[properties] contains a list of properties for a Lightweight Grid Agent running on a networked computer."
<<EntryDelimiter>>
Graphics`ParametricPlot3D`CylindricalPlot3D	"CylindricalPlot3D[z, {r, rmin, rmax}, {phi, phimin, phimax}, (options)] plots z as a function of r and phi. CylindricalPlot3D[{z, style},  ...] uses style to render each surface patch."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`PasteBilateralTemplate	"PasteBilateralTemplate[nb] pastes a properly formatted cell with some placeholders into nb."
<<EntryDelimiter>>
Algebra`PolynomialPowerMod`PolynomialPowerMod	"PolynomialPowerMod[poly1, n, {poly2, p}] gives the polynomial poly1^n reduced modulo poly2 and p, where in n is an integer and p is a prime."
<<EntryDelimiter>>
NumberTheory`FactorIntegerECM`CurveNumber	"CurveNumber is an option for FactorIntegerECM. CurveNumber -> b specifies that the algorithm will use b curves at a time  for each iteration of the algorithm. This number must be a power of 2. The default is Automatic; b is chosen to be either 2, 4, or 8 (increasing with n, the integer to be factored)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Compositions	"Compositions[n, k] gives a list of all compositions of integer n into k parts."
<<EntryDelimiter>>
Parallel`Kernels``$InitCode	"ReleaseHold[$InitCode] is run on every new subkernel for user initialization."
<<EntryDelimiter>>
Geometry`Polytopes`InscribedRadius	"InscribedRadius[polytope] gives the radius of an inscribed circle/sphere of polytope, when the edges of polytope have unit length."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`Arithmetic	"Arithmetic[ ] gives a list containing the number of digits, the base, the rounding rule, and the exponent range that are currently in effect."
<<EntryDelimiter>>
AuthorTools`MakeIndex`IndexFileName	"IndexFileName is an option to MakeIndex that specifies the name of the generated index file."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EncroachingListSet	"EncroachingListSet[p] constructs the encroaching list set associated with permutation p."
<<EntryDelimiter>>
Calculus`VectorAnalysis`DotProduct	"DotProduct[v1, v2] gives the dot product (sometimes called inner product or scalar product) of the two vectors v1, v2 in three space in the default coordinate system. DotProduct[v1, v2, coordsys] gives the dot product of v1 and v2 in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IncidenceMatrix	"IncidenceMatrix[g] returns the (0, 1)-matrix of graph g, which has a row for each vertex and a column for each edge and (v, e) = 1 if and only if vertex v is incident upon edge e. For a directed graph, (v, e) = 1 if edge e is outgoing from v."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ExtractCycles	"ExtractCycles[g] gives a maximal list of edge-disjoint cycles in graph g."
<<EntryDelimiter>>
NumericalMath`Butcher`$RungeKuttaMethod	"$RungeKuttaMethod is a global environment setting, specifying the type of method to be generated by ButcherPhi and related functions. Valid settings are Explicit, DiagonallyImplicit and Implicit."
<<EntryDelimiter>>
Parallel`V2``Processor	"Processor[] has been superseded by KernelFromID[]."
<<EntryDelimiter>>
SubKernels`Client`receive	"receive[kernel, h:Identity] returns an evaluation result wrapped in h."
<<EntryDelimiter>>
Parallel`Concurrency``created	"created is a process state indicating that the process has been created."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeConnectivity	"EdgeConnectivity[g] gives the minimum number of edges whose deletion from graph g disconnects it. EdgeConnectivity[g, Cut] gives a set of edges of minimum size whose deletion disconnects the graph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PetersenGraph	"PetersenGraph returns the Petersen graph, a graph whose vertices can be viewed as the size-2 subsets of a size-5 set with edges connecting disjoint subsets."
<<EntryDelimiter>>
Parallel`Kernels``$notReady	"$notReady is returned by receive if no result is available."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationGraph	"PermutationGraph[p] gives the permutation graph for the permutation p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CircularVertices	"CircularVertices[n] constructs a list of n points equally spaced on a circle. CircularVertices[g] embeds the vertices of g equally spaced on a circle. This function is obsolete; use CircularEmbedding instead."
<<EntryDelimiter>>
Graphics`Arrow`HeadWidth	"HeadWidth is an obsolete option for the Arrow primitive.  It is used when HeadShape -> Automatic.  It describes the width of the arrowhead, relative to the length of the arrowhead (specified by HeadLength.)"
<<EntryDelimiter>>
NumericalMath`EquationTrekker`InitializeGenerator	"InitializeGenerator is a function called to initialize a generator for trek points.  To define a generator with name gen, you should define rules so that InitializeGenerator[gen, eqns, vars, {ivar, begin, end}] returns gen[data], where data includes whatever data is needed to generate trek points."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomHeap	"RandomHeap[n] constructs a random heap on n elements."
<<EntryDelimiter>>
AuthorTools`ExportNotebook`ExtractionMethod	"ExtractionMethod is an option for ExportNotebook that determines how the information is read from the notebook. The default setting of Automatic will use \"NotebookGet\" or \"Get\". Settings of \"NotebookGet\" or \"Get\" are oftentimes more time-efficient, and \"NotebookRead\" or \"NotebookLookup\" are more memory-efficient. The memory-efficient methods are not available for all exports."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShowGraph	"ShowGraph[g] displays the graph g. ShowGraph[g, options] modifies the display using the given options. ShowGraph[g, Directed] is obsolete and it is currently identical to ShowGraph[g]. All options that affect the look of a graph can be specified as options in ShowGraph. The list of options is: VertexColor, VertexStyle, VertexNumber, VertexNumberColor, VertexNumberPosition, VertexLabel, VertexLabelColor, VertexLabelPosition, EdgeColor, EdgeStyle, EdgeLabel, EdgeLabelColor, EdgeLabelPosition, LoopPosition, and EdgeDirection. In addition, options of the Mathematica function Plot can also be specified here. If an option specified in ShowGraph differ from options explicitly set within a graph object, then options specified inside the graph object are used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ListNecklaces	"ListNecklaces[n, c, Cyclic] returns all distinct necklaces whose beads are colored by colors from c. Here c is a list of n, not necessarily distinct colors, and two colored necklaces are considered equivalent if one can be obtained by rotating the other. ListNecklaces[n, c, Dihedral] is similar except that two necklaces are considered equivalent if one can be obtained from the other by a rotation or a flip."
<<EntryDelimiter>>
Parallel`V2``WaitOne	"WaitOne[] has been superseded by WaitNext[]."
<<EntryDelimiter>>
Graphics`ComplexMap`Lines	"Lines -> {lx, ly} is an option of CartesianMap and PolarMap that gives the number of lines to draw."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankBinarySubset	"UnrankBinarySubset[n, l] gives the nth subset of list l, listed in increasing order of integers corresponding to the binary representations of the subsets."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnweightedQ	"UnweightedQ[g] yields True if all edge weights are 1 and False otherwise."
<<EntryDelimiter>>
AuthorTools`StyleTools`RemoveStyles	"RemoveStyles[nb, sty] removes the given styles from the stylesheet, returning an altered stylesheet."
<<EntryDelimiter>>
Algebra`RootIsolation`RealRootIntervals	"RealRootIntervals[pp] computes isolating intervals for all real roots of pp. pp is a rational univariate polynomial or a list of such polynomials."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Cyclic	"Cyclic is an argument to the Polya-theoretic functions ListNecklaces, NumberOfNecklace, and NecklacePolynomial, which count or enumerate distinct necklaces. Cyclic refers to the cyclic group acting on necklaces to make equivalent necklaces that can be obtained from each other by rotation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TopologicalSort	"TopologicalSort[g] gives a permutation of the vertices of directed acyclic graph g such that an edge (i, j) implies that vertex i appears before vertex j."
<<EntryDelimiter>>
DemonstrationsTools`DemonstrationTestMask	"Opens a transparent notebook with a window for testing the size of demonstration\r\npage objects."
<<EntryDelimiter>>
DocumentationSearch`$NumberOfExtraPages	"$NumberOfExtraPages sets the number of pages on either side of the current page in the searh results navigation"
<<EntryDelimiter>>
NumericalMath`Approximations`PrintFlag	"PrintFlag is an option to MiniMaxApproximation and GeneralMiniMaxApproximation that specifies whether data from the successive iterates in the approximation algorithm are to be shown. Its primary use is to help understand what went wrong when the algorithm fails."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherSimplify	"ButcherSimplify is an option to RungeKuttaOrderConditions specifying whether to apply Butcher's row and column simplifying conditions. The conditions reduce the set of necessary and sufficient trees for an order p method with s stages. This is especially useful for deriving high order methods. The form of the simplifying assumptions used depends upon whether the method is implicit or explicit. For Implicit methods, all trees are reduced to quadrature type together with subsidiary row and column simplifying conditions (which are sufficient but by no means necessary for order p). For explicit methods, the restriction b[2]==0 for p>=5 implies positivity of the weights b[i]. If simplification is to be performed the number of stages must be a number. Valid settings are True and False (standard order conditions)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EulerianQ	"EulerianQ[g] yields True if graph g is Eulerian, meaning there exists a tour that includes each edge exactly once."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LowerLeft	"LowerLeft is a value that options VertexNumberPosition, VertexLabelPosition, and EdgeLabelPosition can take on in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AcyclicQ	"AcyclicQ[g] yields True if graph g is acyclic."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FirstLexicographicTableau	"FirstLexicographicTableau[p] constructs the first Young tableau with shape described by partition p."
<<EntryDelimiter>>
AuthorTools`ExportNotebook`ExportNotebookDriver	"ExportNotebookDriver is an internal function."
<<EntryDelimiter>>
DemonstrationsTools`DemonstrationTemplateOpen	"Download and open template file from web, or open local file if there \r\nis no web connection or the file is missing online."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InduceSubgraph	"InduceSubgraph[g, s] constructs the subgraph of graph g induced by the list of vertices s."
<<EntryDelimiter>>
DiscreteMath`RSolve`Info	"Info[n] is obsolete. It is superseded by the use of the Assumptions option in SeriesTerm to specify information about n."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetCategoryCells	"StylesheetCategoryCells[nb, cat] returns a list of style prototypes for those cells in the given stylesheet containing the specified cell tag."
<<EntryDelimiter>>
Parallel`Parallel``ReceiveIfReady	"ReceiveIfReady[kernel] returns a waiting result and $NotReady if nothing is waiting.\r\n\tReceiveIfReady[kernel, h] wraps the result in h before returning it."
<<EntryDelimiter>>
Miscellaneous`Calendar`Wednesday	"Wednesday is a day of the week."
<<EntryDelimiter>>
AuthorTools`StyleTools`AddStylesToSection	"AddStylesToSection is an option to AddStyles that determines in what section new styles are added."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MinimumVertexColoring	"MinimumVertexColoring[g] returns a minimum vertex coloring of g. MinimumVertexColoring[g, k] returns a k-coloring of g, if one exists."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphCenter	"GraphCenter[g] gives a list of the vertices of graph g with minimum eccentricity."
<<EntryDelimiter>>
DiscreteMath`RSolve`HSolveConstants	"HSolveConstants is an option to HSolve that determines the constants in the the returned result. The default is HSolveConstants -> C."
<<EntryDelimiter>>
Statistics`DataManipulation`CategoryCounts	"CategoryCounts[{x1, x2, ...}, {e1, e2, ...}] gives a list containing the number of elements in the data {x1, x2, ...} that match each of the ei. CategoryCounts[{x1, x2, ...}, {{e11, e12, ...}, {e21, e22, ...}, ...}] gives a list of the number of elements in the data {x1, x2, ...} that match any of the elements in each list {ei1, ei2, ...}. CategoryCounts[{{x1, y1}, {x2, y2},  ...}, {xe1, xe2, ...}, {ye1, ye2, ...}] and CategoryCounts[{{x1, y1}, {x2, y2}, ...}, {{xe11, xe12, ...}, {xe21, xe22, ...}, ...}, {{ye11, ye12, ...}, {ye21, ye22, ...}, ...}] both give 2-dimensional arrays of category counts for the bivariate data {{x1, y1}, {x2, y2}, ...}. In general, CategoryCounts gives a p-dimensional array of category counts for p-variate data."
<<EntryDelimiter>>
ResourceLocator`ResourcesLocate	"ResourcesLocate[type] returns a list of locations of resources of type found in in Mathematica applications."
<<EntryDelimiter>>
AuthorTools`Common`NotebookFolder	"NotebookFolder[nb] returns the path to the directory containing nb, or $Failed if there is no such directory."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CostOfPath	"CostOfPath[g, p] sums up the weights of the edges in graph g defined by the path p."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherSigma	"ButcherSigma[tree] gives the order of the symmetry group of isomorphisms of the tree tree with itself."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetPartitionToRGF	"SetPartitionToRGF[sp, set] converts the set partition sp of set into the corresponding restricted growth function. If the optional argument set is not specified, then it is assumed that Mathematica knows the underlying order on the set for which sp is a set partition."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CodeToLabeledTree	"CodeToLabeledTree[l] constructs the unique labeled tree on n vertices from the Prufer code l, which consists of a list of n-2 integers between 1 and n."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RobertsonGraph	"RobertsonGraph returns a 19-vertex graph that is the unique (4, 5)-cage graph."
<<EntryDelimiter>>
Parallel`V2``Wait	"Wait[] has been superseded by WaitAll[]."
<<EntryDelimiter>>
Graphics`Colors`AllColors	"AllColors is a list of the names of colors defined symbolically, as strings."
<<EntryDelimiter>>
LightweightGridClient`RemoteKernelClose	"RemoteKernelClose[kernel] closes a Lightweight Grid kernel."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DistinctPermutations	"DistinctPermutations[l] gives all permutations of the multiset described by list l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexLabel	"VertexLabel is an option that can take on values True or False, allowing the user to set and display vertex labels. By default, there are no vertex labels. VertexLabel can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfNecklaces	"NumberOfNecklaces[n, nc, Cyclic] returns the number of distinct ways in which an n-bead necklace can be colored with nc colors, assuming that two colorings are equivalent if one can be obtained from the other by a rotation. NumberOfNecklaces[n, nc, Dihedral] returns the number of distinct ways in which an n-bead necklace can be colored with nc colors, assuming that two colorings are equivalent if one can be obtained from the other by a rotation or a flip."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`SetArithmetic	"SetArithmetic[dig] evaluates certain global constants used in the package ComputerArithmetic.m to make the arithmetic work properly with dig digits precision. The value of dig must be an integer between 1 and 10, inclusive, and the default value is 4. SetArithmetic[dig, base] causes the arithmetic to be dig digits in base base. The value of base must be an integer between 2 and 16, and the default is 10. Changing the arithmetic and then attempting to refer to ComputerNumbers that were defined prior to the change can lead to unpredictable results."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexWeight	"VertexWeight is an option that allows the user to associate weights with vertices. 0 is the default weight. VertexWeight can be set as part of the graph data structure."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AddVertex	"AddVertex[g] adds one disconnected vertex to graph g. AddVertex[g, v] adds to g a vertex with coordinates specified by v."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TransitiveClosure	"TransitiveClosure[g] finds the transitive closure of graph g, the supergraph of g that contains edge {x, y} if and only if there is a path from x to y."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Edge	"Edge is an optional argument to inform certain functions to work with edges instead of vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GreedyVertexCover	"GreedyVertexCover[g] returns a vertex cover of graph g constructed using the greedy algorithm. This is a natural heuristic for constructing a vertex cover, but it can produce poor vertex covers."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Thick	"Thick is a value that the option EdgeStyle can take on in the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LoopPosition	"LoopPosition is an option to ShowGraph whose values tell ShowGraph where to position a loop around a vertex. This option can take on values UpperLeft, UpperRight, LowerLeft, and LowerRight."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomKSubset	"RandomKSubset[l, k] gives a random subset of set l with exactly k elements."
<<EntryDelimiter>>
Utilities`Package`FullPath	"FullPath is an option to the FindPackages function. When set to False (the default), FindPackages returns file names in context form. When True, full path names are returned."
<<EntryDelimiter>>
Miscellaneous`Geodesy`GeodeticToAuthalic	"GeodeticToAuthalic[{lat,long},e] returns the latitude and longitude of a point on an authalic sphere based on a spheroid of eccentricity e, where lat and long are the geodetic coordinates of that point on the spheroid."
<<EntryDelimiter>>
AuthorTools`StyleTools`EmbedStylesheet	"EmbedStylesheet[nb] embeds a private copy of the shared stylesheet used by the notebook file or object. If the notebook already uses a private stylesheet, this has no effect."
<<EntryDelimiter>>
AuthorTools`StyleTools`StyleCategories	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DominationLattice	"DominationLattice[n] returns a Hasse diagram of the partially ordered set on integer partitions of n in which p < q if q dominates p. The function takes two options: Type and VertexLabel, with default values Undirected and False, respectively. When Type is set to Directed, the function produces the underlying directed acyclic graph. When VertexLabel is set to True, labels are produced for the vertices."
<<EntryDelimiter>>
AuthorTools`Common`SetOptionsDialog	"SetOptionsDialog[function, option] allows the user to set the specified option in a dialog-like window."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPlotColumns	"ButcherPlotColumns is an option to ButcherPlot that specifies the number of columns in the GraphicsArray plot of a list of trees."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Involutions	"Involutions[l] gives the list of involutions of the elements in the list l. Involutions[l, Cycles] gives the involutions in their cycle representation. Involution[n] gives size-n involutions. Involutions[n, Cycles] gives size-n involutions in their cycle representation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomComposition	"RandomComposition[n, k] constructs a random composition of integer n into k parts."
<<EntryDelimiter>>
Graphics`Arrow`Relative	"Relative is a possible value for the HeadScaling option to Arrow. It specifies that the coordinate system in which the arrowhead is rendered should be scaled to the length of the arrow, where {0,0} is at the head of the arrow and {-1,0} is at the tail of the arrow."
<<EntryDelimiter>>
SubKernels`Client`readyQ	"readyQ[kernel] is True if input is available from kernel."
<<EntryDelimiter>>
DiscreteMath`RSolve`ExponentialPowerSum	"ExponentialPowerSum[expr, {z, n, n0:0}] gives Sum[expr z^n / n!, {n, n0, Infinity}]. If a[n] is a  sequence, the name EGf[a][z] is used by ExponentialPowerSum to denote Sum[a[n] z^n / n!, {n, 0, Infinity}]. ExponentialPowerSum is threaded over lists and equations."
<<EntryDelimiter>>
SubKernels`Client`send	"send[kernel, expr] sends expr (unevaluated) to kernel for evaluation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeColoring	"EdgeColoring[g] uses Brelaz's heuristic to find a good, but not necessarily minimal, edge coloring of graph g."
<<EntryDelimiter>>
AuthorTools`Common`ExtractCells	"ExtractCells[nb,{cells}] returns the cell expresssions corresponding to the list of cell summaries extracted from the notebook file outline."
<<EntryDelimiter>>
Miscellaneous`Calendar`Calendar	"Calendar is an option for calendar functions indicating which calendar system to use: Gregorian, Julian, Islamic, or Jewish. If set to Automatic, the Julian calendar is used before 2 September 1752, and the Gregorian calendar afterwards."
<<EntryDelimiter>>
ResourceLocator`ApplicationDataDirectory	"ApplicationDataDirectory[ appname, opts] returns an area for an application to store data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CoarserSetPartitionQ	"CoarserSetPartitionQ[a, b] yields True if set partition b is coarser than set partition a, that is, every block in a is contained in some block in b."
<<EntryDelimiter>>
Parallel`V2``TestAndSet	"TestAndSet[] is obsolete."
<<EntryDelimiter>>
Statistics`DataManipulation`DropNonNumericColumn	"DropNonNumericColumn[data] drops columns that contain non-numeric elements in data."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPlotLabel	"ButcherPlotLabel is an option to ButcherPlot that specifies a list of plot labels, which should be the same length as the list of trees to be plotted."
<<EntryDelimiter>>
Parallel`Concurrency``ProcessResult	"ProcessResult[pid] gives the result of an evaluation, wrapped in HoldComplete,\r\n\tor $Failed if not available."
<<EntryDelimiter>>
NumericalMath`PolynomialFit`FittingPolynomial	"FittingPolynomial[<>, n] represents a polynomial of degree n. It is returned by PolynomialFit."
<<EntryDelimiter>>
Calculus`VectorAnalysis`CoordinateRanges	"CoordinateRanges[ ] gives the intervals over which each of the coordinates in the default coordinate system may range. CoordinateRanges[coordsys] gives the ranges for each of the coordinates in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LowerRight	"LowerRight is a value that options VertexNumberPosition, VertexLabelPosition, and EdgeLabelPosition can take on in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexNumberPosition	"VertexNumberPosition is an option that can be used in ShowGraph to display a vertex number in a certain position relative to the vertex. By default, vertex numbers are positioned to the lower left of vertices. VertexNumberPosition can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HamiltonianCycle	"HamiltonianCycle[g] finds a Hamiltonian cycle in graph g if one exists. HamiltonianCycle[g, All] gives all Hamiltonian cycles of graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Cycles	"Cycles is an optional argument for the function Involutions."
<<EntryDelimiter>>
Parallel`Parallel``identity	"identity[___] is an identity that can handle Sequence and other ugly things."
<<EntryDelimiter>>
AuthorTools`Common`NotebookName	"NotebookName[nb] returns the file name, not the full path, for the specified notebook, and returns \"Untitled-n\" if nb is not yet saved."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DihedralGroup	"DihedralGroup[n] returns the dihedral group on n symbols. Note that the order of this group is 2n."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`DelaunayTriangulation	"DelaunayTriangulation[{{x1,y1},{x2,y2},...,{xn,yn}}] yields the (planar) Delaunay triangulation of the points. The triangulation is represented as a vertex adjacency list, one entry for each unique point in the original coordinate list indicating the adjacent vertices in counterclockwise order."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Cartesian	"Cartesian represents the Cartesian coordinate system with default variables Xx, Yy, and Zz. Cartesian[x, y, z] represents the Cartesian coordinate system with variables x, y, and z."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InvolutionQ	"InvolutionQ[p] yields True if permutation p is its own inverse."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToAdjacencyLists	"ToAdjacencyLists[g] constructs an adjacency list representation for graph g. It allows an option called Type that takes on values All or Simple. Type -> All is the default setting of the option, and this permits self-loops and multiple edges to be reported in the adjacency lists. Type -> Simple deletes self-loops and multiple edges from the constructed adjacency lists. ToAdjacencyLists[g, EdgeWeight] returns an adjacency list representation along with edge weights."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BreadthFirstTraversal	"BreadthFirstTraversal[g, v] performs a breadth-first traversal of graph g starting from vertex v, and gives the breadth-first numbers of the vertices. BreadthFirstTraversal[g, v, Edge] returns the edges of the graph that are traversed by breadth-first traversal. BreadthFirstTraversal[g, v, Tree] returns the breadth-first search tree. BreadthFirstTraversal[g, v, Level] returns the level number of the vertices."
<<EntryDelimiter>>
Parallel`Kernels``KernelID	"KernelID[kernel] gives the ID number of kernel, its value of $KernelID."
<<EntryDelimiter>>
NumericalMath`PolynomialFit`PolynomialFit	"PolynomialFit[data, n] gives the least squares polynomial fit to data much as Fit[data,{1,x,x^2,...,x^n}, x] would do, except that the calculation is done in a way that is numerically stable and the result is given as a FittingPolynomial that is numerically stable. Changing the form of the result is NOT advised for reasons of numerical stability."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NoMultipleEdges	"NoMultipleEdges is an option value for Type."
<<EntryDelimiter>>
Graphics`Colors`HSBColor	"HSBColor[h,s,b] is an obsolete function, superseded by Hue."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HighlightedVertexColors	"HighlightedVertexColors is an option to Highlight that determines which colors are used for the highlighted vertices."
<<EntryDelimiter>>
AuthorTools`Common`NotebookRevert	"NotebookRevert[nb] opens a fresh copy of nb, discarding any changes that have not been saved.  NotebookRevert[nb, Interactive->True] first asks the user if they wish to save the changes."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`LabelPoints	"LabelPoints is an option of the plotting functions within ComputationalGeometry.m. LabelPoints -> True means that the points will be labeled according to their position in the input list.  Repeated instances of a point will be plotted once and labeled according to the position of the first instance in the list."
<<EntryDelimiter>>
AuthorTools`Common`NotebookLookup	"NotebookLookup[nb,obj] looks up in notebook nb the objects specified by obj, which can be any one of {\"CellOutline\", \"CellIndex\", \"CellExpression\", \"CellPage\"}.  NotebookLookup[nb,obj,pat] returns only those objects whose summary cell matches the given pattern."
<<EntryDelimiter>>
Utilities`ShowTime`ShowTime	"On[ShowTime] turns timing information on. Off[ShowTime] turns it off again. The time taken for each command is printed before the result (if any)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SamenessRelation	"SamenessRelation[l] constructs a binary relation from a list l of permutations, which is an equivalence relation if l is a permutation group."
<<EntryDelimiter>>
AuthorTools`MakeContents`MakeContents	"MakeContents[nb|proj, format] writes a table of contents for the specified notebook or project in the given format."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`ExcludeCellsWithTag	"ExcludeCellsWithTag is an option of NotebookDiff which specifies that cells with these tags that are excluded from the NotebookDiff."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`ConvexHull	"ConvexHull[{{x1,y1},{x2,y2},...,{xn,yn}}] yields the (planar) convex hull of the n points, represented as a list of point indices arranged in counterclockwise order."
<<EntryDelimiter>>
ClusterIntegration`SGE`SGENewComputeKernels	"Internal function. Use LaunchKernels to launch compute kernels."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphSum	"GraphSum[g1, g2, ...] constructs the graph resulting from joining the edge lists of graphs g1, g2, and so forth."
<<EntryDelimiter>>
NumberTheory`FactorIntegerECM`FactorIntegerECM	"FactorIntegerECM[n] finds a single factor of the composite number n using Lenstra's Elliptic Curve Method."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DurfeeSquare	"DurfeeSquare[p] gives the number of rows involved in the Durfee square of partition p, the side of the largest-sized square contained within the Ferrers diagram of p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FunctionalGraph	"FunctionalGraph[f, v] takes a set v and a function f from v to v and constructs a directed graph with vertex set v and edges (x, f(x)) for each x in v. FunctionalGraph[f, v], where f is a list of functions, constructs a graph with vertex set v and edge set (x, fi(x)) for every fi in f. An option called Type that takes on the values Directed and Undirected is allowed. Type -> Directed is the default, while Type -> Undirected returns the corresponding underlying undirected graph. FunctionalGraph[f, n] takes a nonnegative integer n and a function f from {0,1,..., n-1} onto itself and produces the directed graph with vertex set {0, 1,..., n-1} and edge set {x, f(x)} for each vertex x."
<<EntryDelimiter>>
Parallel`Parallel``Receive	"Receive[kernel] waits for a result from the given kernel or list of kernels and returns it.\r\n\tReceive[kernel, h] wraps the result in h before returning it."
<<EntryDelimiter>>
Miscellaneous`Dictionary`Anagrams	"Anagrams[\"word\"] lists all combinations of words in $Dictionary which are anagrams of \"word\". Anagrams[\"word\", n] only lists combinations with at most n words. Only the English letters a-z and A-Z are taken into account when forming the anagrams."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EmptyQ	"EmptyQ[g] yields True if graph g contains no edges."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NonLineGraphs	"NonLineGraphs returns a graph whose connected components are the 9 graphs whose presence as a vertex-induced subgraph in a graph g makes g a nonline graph."
<<EntryDelimiter>>
Calculus`DSolveIntegrals`CompleteIntegral	"CompleteIntegral[eqn, u[x, y, ...], {x, y, ...}] builds a complete integral for the nonlinear first-order differential equation eqn in the unknown function u with independent variables x, y, ... ."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteVertices	"DeleteVertices[g, vList] deletes vertices in vList from graph g. vList has the form {i, j, ...}, where i, j, ... are vertex numbers."
<<EntryDelimiter>>
AuthorTools`StyleTools`RemoveEnvironments	"RemoveEnvironments[nb, env] removes the given style environment from the indicated stylesheet."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ChvatalGraph	"ChvatalGraph returns a smallest triangle-free, 4-regular, 4-chromatic graph."
<<EntryDelimiter>>
ClusterIntegration`SubKernels`ComputeKernelObject	"ComputeKernelObject[...] is the cluster kernels class object."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeBruijnGraph	"DeBruijnGraph[m, n] constructs the n-dimensional De Bruijn graph with m symbols for integers m > 0 and n > 1. DeBruijnGraph[alph, n] constructs the n-dimensional De Bruijn graph with symbols from alph. Here alph is nonempty and n > 1 is an integer. In the latter form, the function accepts an option VertexLabel, with default value False, which can be set to True, if users want to associate strings on alph to the vertices as labels."
<<EntryDelimiter>>
DocumentationSearch`AddDocumentationNotebook	"AddDocumentationNotebook[indexer, notebook] adds a notebook to the index."
<<EntryDelimiter>>
Algebra`FiniteFields`GF	"GF[p, ilist][elist] represents an element of a finite field (Galois field) with prime characteristic p and where the coefficients of the irreducible polynomial are given by ilist (constant term listed first). The particular element is specified by elist, the list of coefficients of the polynomial representation of the element. GF[p, d], p prime and d a positive integer, is a special form giving a Galois field that is a degree d extension of the prime field of p elements. The resulting field has p^d elements."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TetrahedralGraph	"TetrahedralGraph returns the graph corresponding to the the Tetrahedron, a Platonic solid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfPermutationsByInversions	"NumberOfPermutationsByInversions[n, k] gives the number of permutations of length n with exactly k inversions. NumberOfPermutationsByInversions[n] gives a table of the number of length-n permutations with k inversions, for all k."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FruchtGraph	"FruchtGraph returns the smallest 3-regular graph whose automorphism group consists of only the identity."
<<EntryDelimiter>>
AuthorTools`StyleTools`$UserStylesheetDirectory	"$UserStylesheetDirectory gives the location for user defined stylesheets."
<<EntryDelimiter>>
Parallel`Kernels``$seQ	"$seQ is True, if no kernels are available."
<<EntryDelimiter>>
ClusterIntegration`SubKernels`ComputeKernel	"ComputeKernel[...] is a compute subkernel on a cluster or grid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`StableMarriage	"StableMarriage[mpref, fpref] finds the male optimal stable marriage defined by lists of permutations describing male and female preferences."
<<EntryDelimiter>>
Graphics`Colors`YIQColor	"YIQColor[y,i,q] represents a color in the YIQ (NTSC video form) system."
<<EntryDelimiter>>
Parallel`V2``$ProcessorID	"$ProcessorID has been superseded by $KernelID."
<<EntryDelimiter>>
Graphics`ParametricPlot3D`PointParametricPlot3D	"PointParametricPlot3D[{x,y,z}, {u,u0,u1,(du)}, (options)] plots a one-parameter set of points in space. PointParametricPlot3D[{x,y,z}, {u,u0,u1,(du)}, {v,v0,v1,(dv)}, (options)] plots a two-parameter set of points in space. Options are passed to Show."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OutDegree	"OutDegree[g, n] returns the out-degree of vertex n in directed graph g. OutDegree[g] returns the sequence of out-degrees of the vertices in directed graph g."
<<EntryDelimiter>>
ResourceLocator`PreferencesRead	StringJoin["PreferencesRead[ appname] returns the preference expression for the given application.","PreferencesRead[ appname, categeory] returns the preferences for a given category."]
<<EntryDelimiter>>
Utilities`Benchmark`$Benchmarks	"$Benchmarks is list of benchmarks that can be run by this package."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselYPrimeZerosInterval	"BesselYPrimeZerosInterval[nu, {zmin, zmax}] gives a list of the zeros of the derivative of the order nu BesselY function that lie in the interval zmin to zmax."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RemoveMultipleEdges	"RemoveMultipleEdges[g] returns the graph obtained by deleting multiple edges from g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MaximalMatching	"MaximalMatching[g] gives the list of edges associated with a maximal matching of graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexStyle	"VertexStyle is an option that allows the user to associate different sizes and shapes to vertices. A disk is the default shape. VertexStyle can be set as part of the graph data structure and it can be used in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankRGF	"RankRGF[f] returns the rank of a restricted growth function (RGF) f in the lexicographic order of all RGFs."
<<EntryDelimiter>>
LightweightGridClient`ClosedKernel	"ClosedKernel[\"linkname\"] represents a Lightweight Grid kernel that was successfully closed."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HighlightedVertexStyle	"HighlightedVertexStyle is an option to Highlight that determines how the highlighted vertices are drawn."
<<EntryDelimiter>>
Miscellaneous`Music`JustMinor	"JustMinor is an interval list giving the minor version of the JustMajor scale."
<<EntryDelimiter>>
Parallel`Evaluate``$ParallelCommands	"$ParallelCommands is a list of functions that can be automatically parallelized with Parallelize[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankKSubset	"UnrankKSubset[m, k, l] gives the mth k-subset of set l, listed in lexicographic order."
<<EntryDelimiter>>
AuthorTools`MakeCategories`IndexTagPrefix	"IndexTagPrefix is an option for MakeBrowserCategories which specifies the start of the strings used in your items' IndexTag settings.  This tag needs to be unique among all other tags in the help browser, so this option should be set to something unique to your project. The default value of Automatic uses the project name."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphIntersection	"GraphIntersection[g1, g2, ...] constructs the graph defined by the edges that are in all the graphs g1, g2, ...."
<<EntryDelimiter>>
Miscellaneous`Calendar`Sunday	"Sunday is a day of the week."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfCompositions	"NumberOfCompositions[n, k] counts the number of distinct compositions of integer n into k parts."
<<EntryDelimiter>>
LightweightGridClient`RemoteServices	"RemoteServices[agent] is a description of a subkernel to be launched on agent by the Wolfram Lightweight Grid Manager\r\nRemoteServices[{\"Agent\" -> agent, \"KernelCount\" -> count, options}] is a description of count kernels to be launched on agent with options passed to RemoteKernelOpen.."
<<EntryDelimiter>>
ResourceLocator`ApplicationDirectoryAdd	"ApplicationDirectoryAdd[ dir] adds dir to the list of directories that are searched for Mathematica applications."
<<EntryDelimiter>>
AuthorTools`MakeIndex`AddIndexEntry	"AddIndexEntry[nb, {main, sub}] adds an index entry with the given main and sub entry to the currently selected cells in nb."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`PoincareSection	"PoincareSection is a value for the option TrekGenerator which allows you to show Poincare sections for differential equations"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MaximumAntichain	"MaximumAntichain[g] gives a largest set of unrelated vertices in partial order g."
<<EntryDelimiter>>
AuthorTools`ExportNotebook`ExportFormat	"ExportFormat is an option that determines the file format for files created by the AuthorTools export palette."
<<EntryDelimiter>>
AuthorTools`ExportNotebook`ExportNotebook	"ExportNotebook[nb, \"style\", \"fmt\"] creates image files of format fmt in the notebook's directory for each cell of the indicated style. ExportNotebook[nb, {elem, data}, \"fmt\"] extracts cells See also: ExtractionMethod."
<<EntryDelimiter>>
NumericalMath`NSeries`Radius	"Radius is an option to NSeries that specifies the radius of the circle around which the function is to be sampled."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Edges	"Edges[g] gives the list of edges in g. Edges[g, All] gives the edges of g along with the graphics options associated with each edge. Edges[g, EdgeWeight] returns the list of edges in g along with their edge weights."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Grad	"Grad[f] gives the gradient of the scalar function f in the default coordinate system. Grad[f, coordsys] gives the gradient of f in the coordinate system coordsys."
<<EntryDelimiter>>
AuthorTools`Pagination`StartingPages	"StartingPages is an option to Paginate which specifies a list {p1, p2, ..., pn} where pk is the starting page number for the kth notebook in the project. Values can be integers, Inherited, \"Next\", \"Even\", or \"Odd\"."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`RoundToInfinity	"RoundToInfinity is a choice for the option RoundingRule of SetArithmetic. It specifies that the rounding is to be to the nearest representable number and, in the case of a tie, round away from 0."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphPolynomial	"GraphPolynomial[n, x] returns a polynomial in x in which the coefficient of x^m is the number of nonisomorphic graphs with n vertices and m edges. GraphPolynomial[n, x, Directed] returns a polynomial in x in which the coefficient of x^m is the number of nonisomorphic directed graphs with n vertices and m edges."
<<EntryDelimiter>>
Miscellaneous`WorldNames`Oceania	"Oceania contains the names of the countries of the South Pacific defined in the WorldData database."
<<EntryDelimiter>>
Miscellaneous`WorldNames`ContiguousUSStates	"ContiguousUSStates contains the names of the 48 contiguous United States, defined in the USData database for use with WorldPlot. Set the WorldPlot option WorldDatabase -> USData to use this list."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ResidualFlowGraph	"ResidualFlowGraph[g, flow] returns the directed residual flow graph for graph g with respect to flow."
<<EntryDelimiter>>
DiscreteMath`RSolve`DiscreteMath`RSolve`GeneratingFunction	"GeneratingFunction[eqn, a[n], n, z] gives the ordinary generating functions Sum[a[n] z^n, {n, n0, Infinity}] for the functions a[n] solving eqn, with independent variable n. GeneratingFunction[{eqn1, eqn2, ...}, {a1[n], a2[n], ...}, n, z] gives the ordinary generating functions Sum[ai[n] z^n, {n, n0, Infinity}] for the functions ai[n] solving eqn1, eqn2, ..., with independent variable n. Here n0 denotes the least value of n such that a[n] (or ai[n]) appears in the equation(s)."
<<EntryDelimiter>>
Parallel`Preferences`prefs	"prefs[method][...] implements the preference system methods."
<<EntryDelimiter>>
NumericalMath`Microscope`MicroscopicError	"MicroscopicError[f, {x, a}] plots the error incurred by using machine arithmetic to evaluate the expression f (which is supposed to contain a single variable x) in a small neighborhood of a. MicroscopicError[f, {x, a, n}] plots the error from a - n ulps to a + n ulps. The scale on the vertical axis represents ulps in the result."
<<EntryDelimiter>>
Statistics`DataManipulation`BooleanSelect	"BooleanSelect[list, sel] keeps elements of list for which the corresponding element of sel is True."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextPartition	"NextPartition[p] gives the integer partition following p in reverse lexicographic order."
<<EntryDelimiter>>
Graphics`Colors`CMYColor	"CMYColor[c,m,y] represents a color in the CMY (cyan-magenta-yellow) system."
<<EntryDelimiter>>
Utilities`URLTools`FetchURL	"FetchURL[ url, new] copies the file referenced by url to the file new on the local machine. FetchURL[ url ] copies the file creating a new filename. FetchURL returns the name of the temporary file used on the local machine."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextSubset	"NextSubset[l, s] constructs the subset of l following subset s in canonical order."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PartitionLattice	"PartitionLattice[n] returns a Hasse diagram of the partially ordered set on set partitions of 1 through n in which p < q if q is finer than p, that is, each block in q is contained in some block in p. The function takes two options: Type and VertexLabel, with default values Undirected and False, respectively. When Type is set to Directed, the function produces the underlying directed acyclic graph. When VertexLabel is set to True, labels are produced for the vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NoPerfectMatchingGraph	"NoPerfectMatchingGraph returns a connected graph with 16 vertices that contains no perfect matching."
<<EntryDelimiter>>
NumberTheory`FactorIntegerECM`CurveCountLimit	"CurveCountLimit is an option for FactorIntegerECM. CurveCountLimit->c limits the total number of curves the algorithm will use to c. This allows the user to abort the algorithm after a given number of iterations. The default is 10^4 curves. FactorIntegerECM[n, CurveCountLimit->c] returns n if no nontrivial factor has been found."
<<EntryDelimiter>>
Parallel`Kernels``clearAutolaunch	"clearAutolaunch[] clears autolaunching for all symbols declared with declareAutolaunch[]"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HideCycles	"HideCycles[c] canonically encodes the cycle structure c into a unique permutation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TableauQ	"TableauQ[t] yields True if and only if t represents a Young tableau."
<<EntryDelimiter>>
AuthorTools`StyleTools`StyleOptions	"StyleOptions[nb, sty] returns the list of options set for the given style in the stylesheet."
<<EntryDelimiter>>
AuthorTools`Experimental`HelpNotebooks	"HelpNotebooks[category1, category2, ...] returns a list of all notebooks used in the given Help Browser categories. HelpNotebooks[] lists notebooks in all categories."
<<EntryDelimiter>>
Parallel`V2``$RecoveryMode	"$RecoveryMode has been superseded by the RecoveryMode system option."
<<EntryDelimiter>>
AuthorTools`StyleTools`RelatedStyles	"RelatedStyles[nb, sty] returns a list of styles related to the given style."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphJoin	"GraphJoin[g1, g2, ...] constructs the join of graphs g1, g2, and so on. This is the graph obtained by adding all possible edges between different graphs to the graph union of g1, g2, ...."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HighlightedEdgeStyle	"HighlightedEdgeStyle is an option to Highlight that determines how the highlighted edges are drawn."
<<EntryDelimiter>>
Geometry`Polytopes`Vertices	"Vertices[polytope] gives a list of the vertex coordinates of polytope.  To get the number of vertices of polytope use NumberOfVertices[polytope].  Edges are not necessarily normalized to unit length."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfTableaux	"NumberOfTableaux[p] uses the hook length formula to count the number of Young tableaux with shape defined by partition p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`KSubsetGroupIndex	"KSubsetGroupIndex[g, s, x] returns the cycle index of the k-subset group on s expressed as a polynomial in x[1], x[2], .... This function also takes the optional argument Type that tells the function whether the elements of s should be treated as sets or tuples."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TravelingSalesmanBounds	"TravelingSalesmanBounds[g] gives upper and lower bounds on a minimum cost traveling salesman tour of graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOf2Paths	"NumberOf2Paths[g, v] returns a sorted list that contains the number of paths of length 2 to different vertices of g from v."
<<EntryDelimiter>>
Parallel`Kernels``KernelFromID	"KernelFromID[id] gives the kernel with the given ID.\r\n\tKernelFromID[ids] gives the list of kernels with the given list of IDs."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CyclicGroup	"CyclicGroup[n] returns the cyclic group of permutations on n symbols."
<<EntryDelimiter>>
Miscellaneous`Music`SixthTone	"SixthTone is an interval list in which each semitone (100 cents) is split in three."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SymmetricGroup	"SymmetricGroup[n] returns the symmetric group on n symbols."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetVertexWeights	"SetVertexWeights[g] assigns random real weights in the range [0, 1] to vertices in g. SetVertexWeights accepts options WeightingFunction and WeightRange. WeightingFunction can take values Random, RandomInteger, or any pure function that takes two arguments, an integer as the first argument and a pair {number, number} as the second argument. WeightRange can be an integer range or a real range. The default value for WeightingFunction is Random and the default value for WeightRange is [0, 1]. SetVertexWeights[g, w] assigns the weights in the weight list w to the vertices of g. SetVertexWeights[g, vs, w] assigns the weights in the weight list w to the vertices in the vertex list vs."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`Parameter	"Parameter[name, value] specifies a variable which can be modified interactively."
<<EntryDelimiter>>
DiscreteMath`RSolve`EGf	"EGf[a][z] is used by ExponentialPowerSum to denote Sum[a[n] z^n / n!, {n, 0, Infinity}]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeChromaticNumber	"EdgeChromaticNumber[g] gives the fewest number of colors necessary to color each edge of graph g, so that no two edges incident on the same vertex have the same color."
<<EntryDelimiter>>
SubKernels`Client`eval	"eval[kernel, expr] evaluates expr on kernel."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EquivalenceClasses	"EquivalenceClasses[r] identifies the equivalence classes among the elements of matrix r."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Graph	"Graph[e, v, opts] represents a graph object where e is the list of edges annotated with graphics options, v is a list of vertices annotated with graphics options, and opts is a set of global graph options. e has the form {{{i1, j1}, opts1}, {{i2, j2}, opts2},...}, where {i1, j1}, {i2, j2},... are edges of the graph and opts1, opts2,... are options that respectively apply to these edges. v has the form {{{x1, y1}, opts1}, {{x2, y2}, opts2},...}, where {x1, y1}, {x2, y2},... respectively denote the coordinates in the plane of vertex 1, vertex 2,... and opts1, opts2,... are options that respectively apply to these vertices. Permitted edge options are EdgeWeight, EdgeColor, EdgeStyle, EdgeLabel, EdgeLabelColor, and EdgeLabelPosition. Permitted vertex options are VertexWeight, VertexColor, VertexStyle, VertexNumber, VertexNumberColor, VertexNumberPosition, VertexLabel, VertexLabelColor, and VertexLabelPosition. The third item in a Graph object is opts, a sequence of zero or more global options that apply to all vertices or all edges or to the graph as a whole. All of the edge options and vertex options can be used as global options also. If a global option and a local edge option or vertex option differ, then the local edge or vertex option is used for that particular edge or vertex. In addition to these options, the following two options can also be specified as part of the global options: LoopPosition and EdgeDirection. Furthermore, all the options of the Mathematica function Plot can be used as global options in a Graph object. These can be used to specify how the graph looks when it is drawn. These can be used to affect the look of arrows that represent directed edges. See the usage message of individual options to find out more about values these options can take on. Whether a graph is undirected or directed is given by the option EdgeDirection. This has default value False. For undirected graphs, the edges {i1, j1}, {i2, j2},... have to satisfy i1 <= j1, i2 <= j2,... and for directed graphs the edges {i1, j1}, {i2, j2},... are treated as ordered pairs, each specifying the direction of the edge as well."
<<EntryDelimiter>>
Calculus`Pade`EconomizedRationalApproximation	"EconomizedRationalApproximation[func, {x, {x0, x1}, m, k}] gives the economized rational approximation to func (a function of the variable x) where (x0, x1) is the interval for which the approximation is to be good and m and k are the degrees of the numerator and denominator, respectively."
<<EntryDelimiter>>
AuthorTools`Common`RememberOpenNotebooks	"RememberOpenNotebooks[] caches the currently open notebooks for NotebookCloseIfNecessary."
<<EntryDelimiter>>
Algebra`FiniteFields`PerfectPowerQ	"PerfectPowerQ[element, n] returns True if element is a perfect nth power in its field. Otherwise it returns False."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Orbits	"Orbits[pg, x] returns the orbits of x induced by the action of the group pg on x. pg is assumed to be a set of permutations on the first n natural numbers and x is a set of functions whose domain is the first n natural numbers. Each function in x is specified as an n-tuple."
<<EntryDelimiter>>
Miscellaneous`Calendar`CalendarChange	"CalendarChange[date, calendar1, calendar2] converts a date in calendar1 to a date in calendar2."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Tableaux	"Tableaux[p] constructs all tableaux having a shape given by integer partition p."
<<EntryDelimiter>>
NumberTheory`Frobenius`FrobeniusF	"FrobeniusF[{a1, ..., an}] gives the Frobenius number of {a1, ..., an}."
<<EntryDelimiter>>
Parallel`V2``RemoteNeeds	"RemoteNeeds[] has been superseded by ParallelNeeds[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Cofactor	"Cofactor[m, {i, j}] calculates the (i, j)th cofactor of matrix m."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SumOfSquaresR	"SumOfSquaresR[d, n] gives the number of representations of a nonnegative integer n as a sum of d squares of integers; standard notation for this is r[d, n]."
<<EntryDelimiter>>
Algebra`FiniteFields`Successor	"Successor[element] gives the next element in a canonical ordering of the field elements. This function does not wrap. The largest element has no successor."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`Automatic	"Automatic is the default value of the SumOfFactorsType option to AliquotSequence, AliquotCycle, and SumOfFactors, specifying to sum all factors of the number except the number itself."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectName	"ProjectName[file] returns the name of the project as stored in the project file."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfInvolutions	"NumberOfInvolutions[n] counts the number of involutions on n elements."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Inversions	"Inversions[p] counts the number of inversions in permutation p."
<<EntryDelimiter>>
Parallel`Kernels``ClearKernels	"ClearKernels[] resets all subkernels and clears all exported definitions and shared variables."
<<EntryDelimiter>>
AuthorTools`StyleSheetDiff`StyleSheetDiff	"StyleSheetDiff[nb1, nb2] creates a report of the differences between the style sheets nb1 and nb2."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Bridges	"Bridges[g] gives a list of the bridges of graph g, where each bridge is an edge whose removal disconnects the graph."
<<EntryDelimiter>>
Parallel`Kernels``doAutolaunch	"doAutolaunch[True/False] launches default kernels with optional feedback."
<<EntryDelimiter>>
Utilities`FilterOptions`FilterOptions	"FilterOptions is an obsolete function superseded by the kernel function OptionValue."
<<EntryDelimiter>>
NumericalMath`Butcher`DiagonallyImplicit	"DiagonallyImplicit is a setting for the option RungeKuttaMethod specifying the type of Runge-Kutta method to be generated."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherColumnConditions	"ButcherColumnConditions[p, s] gives the column simplifying conditions up to and including order p for s stages. ButcherColumnConditions[p] gives the column simplifying conditions in stage-independent tensor notation. The option RungeKuttaMethod controls the form of the result."
<<EntryDelimiter>>
SubKernels`LinkKernels`linkKernel	"linkKernel[..] is a link subkernel."
<<EntryDelimiter>>
AuthorTools`MakeContents`MakeContentsNotebook	"MakeContentsNotebook[nb|proj, format] returns a Notebook expression containing a table of contents for the specified notebook or project in the given format."
<<EntryDelimiter>>
Algebra`FiniteFields`ElementToPolynomial	"ElementToPolynomial[element, s] gives a polynomial in the symbol s corresponding to the specified field element. ElementToPolynomial[f, s] gives the irreducible polynomial in s of the field f."
<<EntryDelimiter>>
Miscellaneous`Music`TemperedMinor	"TemperedMinor is an interval list derived from the TemperedChromatic scale."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ReverseEdges	"ReverseEdges[g] flips the directions of all edges in a directed graph."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherOrder	"ButcherOrder[tree] gives the order r of the tree tree."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`FundamentalDiscriminantQ	"FundamentalDiscriminantQ[d] returns True if d is the discriminant of a quadratic number field, otherwise it returns False."
<<EntryDelimiter>>
AuthorTools`Common`AddCellTags	"AddCellTags[nbObj,tags] adds the string or list of strings to the cell tags of the currently selected cell(s) in nbObj. AddCellTags[nbObj,tags,n] adds the tags to the nth cell. AddCellTags[nbObj,{tags1,...,tagsk},{n1,...,nk}] adds tagsi to the ni-th cell."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AddEdge	"AddEdge[g, e] returns a graph g with the new edge e added. e can have the form {a, b} or the form {{a, b}, options}."
<<EntryDelimiter>>
Parallel`V2``$Slaves	"$Slaves has been superseded by Kernels[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteFromTableau	"DeleteFromTableau[t, r] deletes the last element of row r from Young tableaux t."
<<EntryDelimiter>>
Parallel`Palette`masterConfig	"masterConfig is the configuration object (compatible with the one from SubKernels`) of PCT."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionCoordinates	"InterpolatingFunctionCoordinates[ifun] gives the list of coordinates in each dimension for an InterpolatingFunction object ifun."
<<EntryDelimiter>>
DemonstrationsTools`DemonstrationExampleOpen	"Download and open example file from web, or open local file if there \r\nis no web connection or the file is missing online."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SpringEmbedding	"SpringEmbedding[g] beautifies the embedding of graph g by modeling the embedding as a system of springs. SpringEmbedding[g, step, increment] can be used to refine the algorithm. The value of step tells the function for how many iterations to run the algorithm. The value of increment tells the function the distance to move the vertices at each step. The default values are 10 and 0.15 for step and increment, respectively."
<<EntryDelimiter>>
AuthorTools`StyleTools`AddRelatedStyles	""
<<EntryDelimiter>>
Parallel`Parallel``Send	"Send[kernel,cmd] sends cmd for evaluation to the given remote kernel or list of kernels."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ChangeVertices	"ChangeVertices[g, v] replaces the vertices of graph g with the vertices in the given list v. v can have the form {{x1, y1}, {x2, y2}, ...} or the form {{{x1, y1}, gr1}, {{x2, y2}, gr2}, ...}, where {x1, y1}, {x2, y2}, ... are coordinates of points and gr1, gr2, ... are graphics information associated with vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeLabelColor	"EdgeLabelColor is an option that allows the user to associate different colors to edge labels. Black is the default color. EdgeLabelColor can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphOptions	"GraphOptions[g] returns the display options associated with g. GraphOptions[g, v] returns the display options associated with vertex v in g. GraphOptions[g, {u, v}] returns the display options associated with edge {u, v} in g."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`QuadratureType	"QuadratureType is an option of NewtonCotesWeights and NewtonCotesError, which can be Open or Closed."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselYPrimeZeros	"BesselYPrimeZeros[nu, n] gives a list of the first n zeros of the derivative of the order nu BesselY function, for nu >= -1/2. BesselYPrimeZeros[nu, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
NumericalMath`Approximations`MiniMaxApproximation	"MiniMaxApproximation[func, {x, {x0, x1}, m, k}, (opts)] finds the mini-max approximation to func (a function of the variable x) on the interval (x0, x1), where m and k are the degrees of the numerator and denominator, respectively. The answer returned is {AbscissaList, {Approximation, MaxError}}, where AbscissaList is a list of the abscissas where the maximum error occurs, Approximation is the rational approximation desired, and MaxError is the value of the mini-max error. The function func must be Listable. MiniMaxApproximation[f, approx, {x, {x0, x1}, m, k}, (opts)] is a form that allows the user to start the iteration from a known approximation. Here approx must be in the form of an answer returned by MiniMaxApproximation."
<<EntryDelimiter>>
AuthorTools`Pagination`NotebookPageNumbers	"NotebookPageNumbers[nb] asks the front end to calculate page numbers for nb, and returns a list of integers, one page number for each cell in nb."
<<EntryDelimiter>>
DocumentationSearch`AddDocumentationDirectory	"AddDocumentationDirectory[indexer, directory] adds a directory of notebooks to the index."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetStyles	"StylesheetStyles[nb] returns a list of style names defined in the given stylesheet. StylesheetStyles[nb, sty] returns just those style names matching the given style name pattern"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankRGF	"UnrankRGF[r, n] returns a restricted growth function defined on the first n natural numbers whose rank is r."
<<EntryDelimiter>>
AuthorTools`Experimental`$NotebookSearchFormats	"$NotebookSearchFormats is a list containing all formats available to NotebookSearch."
<<EntryDelimiter>>
DocumentationSearch`CloseDocumentationNotebookIndexer	"CloseDocumentationNotebookIndexer[indexer] closes the notebook indexer object."
<<EntryDelimiter>>
ClusterIntegration`PBS`PBSNewComputeKernels	"Internal function of ClusterIntegration. Use ClusterLaunchSlaves to launch remote kernels."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ArcLengthFactor	"ArcLengthFactor[pt, t] gives the derivative of the arc length of a curve given by pt with respect to the parameter t in the default coordinate system. ArcLengthFactor[pt, t, coordsys] gives the derivative of the arc length of a curve given by pt with respect to the parameter t in the coordinate system coordsys. If pt is not given, the default coordinate variables are used."
<<EntryDelimiter>>
Parallel`Concurrency``ProcessID	"ProcessID[pid] gives the integer process id of pid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ArticulationVertices	"ArticulationVertices[g] gives a list of all articulation vertices in graph g. These are vertices whose removal will disconnect the graph."
<<EntryDelimiter>>
Algebra`FiniteFields`ToElementCode	"ToElementCode[element] gives a non-negative integer code, less than the field size, associated with the specified field element."
<<EntryDelimiter>>
Miscellaneous`Geodesy`ToDMS	"ToDMS[deg] takes a coordinate in degrees and converts it to a degree-minute-second format, to the nearest second. The coordinates are within [-180,180] degrees."
<<EntryDelimiter>>
AuthorTools`DiffReport`DiffReport	"DiffReport[list1, list2] returns a set of rules that indicate the differences between list1 and list2."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`DiffRecursionDepth	"DiffRecursionDepth is an option of NotebookDiff which specifies how many levels of subdirectories to process when comparing two directories."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`LeastPrimeFactor	"LeastPrimeFactor[n] returns the least prime factor of n for integer n with |n| > 1."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Type	"Type is an option for many functions that transform graphs. Depending on the functions it is being used in, it can take on values such as Directed, Undirected, Simple, etc."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`EquationTrekker	"EquationTrekker[eqn, {x,y}, {t, tmin, tmax}] brings up a window and then plots the solution of the second order differential equation, eqn, such that {x[0], y[0]} is the point at the mouse cursor. EquationTrekker[eqn, x, {t, tmin, tmax}] brings up a window and then plots the solution of the first order differential equation, eqn, such that {t0, x[t0]} is the point at the mouse cursor. If you drag the mouse with the button down, the solution is updated continuously. If the equation is a second order equation, x' is considered as the y variable."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`QuadraticRepresentation	"QuadraticRepresentation[d, n] gives {x, y}, where x^2 + d y^2 = n for positive d and odd n."
<<EntryDelimiter>>
DifferentialEquations`NDSolveProblems`T	"T is the default symbol used for independent variables in NDSolveProblem objects."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetSectionStyles	"StylesheetSectionStyles[nb, sec] returns those style names whose prototypes appear in the given section of the stylesheet."
<<EntryDelimiter>>
Parallel`Parallel``ParallelDispatch	"ParallelDispatch[cmds, kernels] sends each of the cmdi to the corresponding kerneli and returns the list of results.\r\n\tParallelDispatch[cmds] is equivalent to ParallelDispatch[cmds, Kernels[]]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetEdgeLabels	"SetEdgeLabels[g, l] assigns the labels in l to edges of g. If l is shorter than the number of edges in g, then labels get assigned cyclically. If l is longer than the number of edges in g, then the extra labels are ignored."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Xxi	Set[MessageName[Eeta,"usage"],"{Xxi,Eeta,Pphi} are the default coordinates for the ProlateSpheroidal and OblateSpheroidal coordinate systems."]
<<EntryDelimiter>>
AuthorTools`Experimental`HighlightSearchStrings	"HighlightSearchStrings is an option to NotebookSearch that indicates whether to reformat cell expressions with the search strings highlighted."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AddEdges	"AddEdges[g, edgeList] gives graph g with the new edges in edgeList added. edgeList can have the form {a, b} to add a single edge {a, b} or the form {{a, b}, {c, d}, ...}, to add edges {a, b}, {c, d}, ... or the form { {{a, b}, x}, {{c, d}, y}, ...}, where x and y can specify graphics information associated with {a, b} and {c, d}, respectively."
<<EntryDelimiter>>
AuthorTools`Experimental`SortByHitCount	"SortByHitCount is an option to NotebookSearch which indicates how the resutls should be sorted."
<<EntryDelimiter>>
AuthorTools`Common`PageString	"PageString is an internal symbol."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ReadGraph	"ReadGraph[f] reads a graph represented as edge lists from file f and returns a graph object."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DihedralGroupIndex	"DihedralGroupIndex[n, x] returns the cycle index of the dihedral group on n symbols, expressed as a polynomial in x[1], x[2], ..., x[n]."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherBetaBar	"ButcherBetaBar[tree] gives the number of ways of labelling the tree tree with ButcherOrder[tree] distinct labels such that every vertex is labelled. ButcherBetaBar[n, tree] gives the number of ways of labelling n of the vertices of the tree with n distinct labels such that every leaf is labelled."
<<EntryDelimiter>>
AuthorTools`StyleTools`AddStyleCategories	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfKPaths	"NumberOfKPaths[g, v, k] returns a sorted list that contains the number of paths of length k to different vertices of g from v. NumberOfKPaths[al, v, k] behaves identically, except that it takes an adjacency list al as input."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectDataQ	"ProjectDataQ[file] returns True if file exists and contains valid information about a project, and returns False otherwise."
<<EntryDelimiter>>
NumericalMath`NLimit`Terms	"Terms is an option of EulerSum, NLimit, and ND. In EulerSum it specifies the number of terms to be included explicitly before the extrapolation process begins. In NLimit and ND it specifies the total number of terms to be used."
<<EntryDelimiter>>
DemonstrationsTools`MsgToConsole	"Utility function for sending messages to the Messages notebook."
<<EntryDelimiter>>
Parallel`Kernels``declareAutolaunch	"declareAutolaunch[s1,...] declares the si as symbols whose first use causes kernel autolaunching."
<<EntryDelimiter>>
ClusterIntegration`SGE`SGECloseJob	"Internal function. Use CloseKernels to close compute kernels."
<<EntryDelimiter>>
Miscellaneous`Geodesy`SpheroidalDistance	"SpheroidalDistance[pt1,pt2] gives the distance between two points on the Earth in km, using the spheroidal model of the planet. Coordinates are expressed as in SphericalDistance. Note that the model is an approximation formula that only employs machine precision computation. It is fairly accurate to distances of up to 10000 kilometers on the standard model of the Earth."
<<EntryDelimiter>>
AuthorTools`MakeContents`CellTagPrefix	"CellTagPrefix is an option for MakeContents which specifies the string that will start all cell tags added by MakeContents."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Isomorphism	"Isomorphism[g, h] gives an isomorphism between graphs g and h if one exists. Isomorphism[g, h, All] gives all isomorphisms between graphs g and h. Isomorphism[g] gives the automorphism group of g. This function takes an option Invariants -> {f1, f2, ...}, where f1, f2, ... are functions that are used to compute vertex invariants. These functions are used in the order in which they are specified. The default value of Invariants is {DegreesOf2Neighborhood, NumberOf2Paths, Distances}."
<<EntryDelimiter>>
Utilities`CleanSlate`CleanSlateExcept	"CleanSlateExcept[\"Context1`\",\"Context2`\"] purges all symbols and their values in all contexts that have been added to the context search path ($ContextPath) since the CleanSlate package was read in, except for the listed contexts. It also removes most, but possibly not all, of the additional rules for System symbols that purged packages may have defined. It also clears the In[] and Out[] values, and resets the $Line number, so new input begins as In[1]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InDegree	"InDegree[g, n] returns the in-degree of vertex n in directed graph g. InDegree[g] returns the sequence of in-degrees of the vertices in directed graph g."
<<EntryDelimiter>>
Parallel`Kernels``$kernelsIdle	"$kernelsIdle is True, if kernels are idle."
<<EntryDelimiter>>
Statistics`DataManipulation`ColumnJoin	"ColumnJoin[data1, data2, ...] joins elements in corresponding columns in the datai."
<<EntryDelimiter>>
AuthorTools`Common`ProgressDialogSetValue	"ProgressDialogSetValue[nb, value] sets the current value for the given progress dialog."
<<EntryDelimiter>>
AuthorTools`Common`SelectionRemoveCellTags	"SelectionRemoveCellTags[nbObj,tags] removes the string or list of strings from the cell tags of the currently selected cell(s) in nbObj. SelectionRemoveCellTags[nbObj,All] removes all cell tags from the current selection."
<<EntryDelimiter>>
Integration`NIntegrateUtilities`NIntegrateProfileWithExact	"NIntegrateProfile[NIntegrate[___], ntimes_?IntegerQ:10] gives the numerical integration result, the relative error compared with the exact integral, the number of integrand evaluations, and time to compute the the integral. The integration is done ntimes."
<<EntryDelimiter>>
Integration`NIntegrateUtilities`NIntegrateProfile	"NIntegrateProfile[NIntegrate[___], ntimes_?IntegerQ:10] gives the numerical integration result, the number of integrand evaluations, and time to compute the the integral. The integration is done ntimes."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MaximumIndependentSet	"MaximumIndependentSet[g] finds a largest independent set of graph g."
<<EntryDelimiter>>
AuthorTools`Experimental`ItemLookup	"ItemLookup[str] displays links to those Help Browser items whose item name contains the given string. ItemLookup[str, True] also looks in category names."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextTableau	"NextTableau[t] gives the tableau of shape t, following t in lexicographic order."
<<EntryDelimiter>>
Parallel`Kernels``poll	"poll[kernel] checks for a callback from a kernel. It returns True if one was serviced. It puts back any evaluation result received."
<<EntryDelimiter>>
LightweightGridClient`RemoteKernelCloseAll	"RemoteKernelCloseAll[] closes all kernels returned by RemoteServicesLinks[]."
<<EntryDelimiter>>
Miscellaneous`Music`MeanMajor	"MeanMajor is an interval list derived from the MeanChromatic scale."
<<EntryDelimiter>>
DifferentialEquations`NDSolveProblems`Y	"Y is the default symbol used for dependent variables in NDSolveProblem objects."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectDirectory	"ProjectDirectory[file] returns the location of the project files as specified by the project file."
<<EntryDelimiter>>
DifferentialEquations`NDSolveProblems`X	"X is the default symbol used for spatial variables in NDSolveProblem objects."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BinarySearch	"BinarySearch[l, k] searches sorted list l for key k and gives the position of l containing k, if k is present in l. Otherwise, if k is absent in l, the function returns (p + 1/2) where k falls between the elements of l in positions p and p+1. BinarySearch[l, k, f] gives the position of k in the list obtained from l by applying f to each element in l."
<<EntryDelimiter>>
Graphics`ArgColors`ArgShade	"ArgShade[z] gives a gray level proportional to the argument of the complex number z."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`NaN	"NaN is the symbol used in ComputerArithmetic.m to represent a nonrepresentable number. NaN stands for Not-a-Number."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankKSetPartition	"UnrankSetPartition[r, s, k] finds a k-block set partition of s with rank r. UnrankSetPartition[r, n, k] finds a k-block set partition of {1, 2,..., n} with rank r."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DodecahedralGraph	"DodecahedralGraph returns the graph corresponding to the dodecahedron, a Platonic solid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NormalDashed	"NormalDashed is a value that the option EdgeStyle can take on in the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankKSubset	"RankKSubset[s, l] gives the rank of k-subset s of set l in the lexicographic ordering of the k-subsets of l."
<<EntryDelimiter>>
LightweightGridClient`RemoteKernelServices	"RemoteKernelServices[] returns a list of services provided by Lightweight Grid Managers"
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`ClassList	"ClassList[d] gives a list of inequivalent quadratic forms of discriminant d, where d < 0 is a fundamental discriminant, and a quadratic form a x^2 + b x y + c y^2 is represented as {a, b, c}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankGraph	"RankGraph[g, l] partitions the vertices into classes based on the shortest geodesic distance to a member of list l."
<<EntryDelimiter>>
AuthorTools`MakeCategories`CopyTagPrefix	"CopyTagPrefix is an option for MakeBrowserCategories which specifies the start of the string used in CopyTag and CellTags settings."
<<EntryDelimiter>>
AuthorTools`Common`ProgressDialogClose	"ProgressDialogClose[nbobj] closes the given progress dialog."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`Infinitary	"Infinitary is an option value for the SumOfFactorsType option of AliquotSequence, AliquotCycle, and SumOfFactors, specifying that only divisors d of n except n are to be added such that if p^c is the largest power of p dividing n and p^a is the largest power of p dividing d, then all corresponding binary digits of c that are zero are also zero for a."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SumOfFactorsType	"SumOfFactorsType is an option to SumOfFactors which specifies which type of divisor sum to use. The default type is Automatic, which is just the usual divisor sum. The other types are Unitary, Biunitary, Infinitary, Exponential, and ModifiedExponential."
<<EntryDelimiter>>
Parallel`V2``Queue	"Queue[] has been superseded by ParallelSubmit[]."
<<EntryDelimiter>>
ClusterIntegration`Library`RunCommand	"RunCommand[cmd] runs cmd as an external operating system command."
<<EntryDelimiter>>
AuthorTools`StyleTools`RemoveRelatedStyles	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Value	"Value is an option for the function NetworkFlow that makes the function return the value of the maximum flow."
<<EntryDelimiter>>
Miscellaneous`Dictionary`FindWords	"FindWords[patt] finds all words in the dictionary $Dictionary matching the string pattern patt. FindWords[patt, n] returns at most n results. FindWords[patt, IgnoreCase -> True] treats upper and lower case as equivalent. FindWords[\"word\", SpellingCorrection -> True] finds words matching up to a small spelling correction."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Star	"Star[n] constructs a star on n vertices, which is a tree with one vertex of degree n-1."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CompleteKPartiteGraph	"CompleteKPartiteGraph[a, b, c, ...] creates a complete k-partite graph of the prescribed shape, provided the k arguments a, b, c, ... are positive integers. An option Type that takes on the values Directed or Undirected is allowed. The default setting for this option is Type -> Undirected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InitializeUnionFind	"InitializeUnionFind[n] initializes a union-find data structure for n elements."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`StirlingFirst	"StirlingFirst[n, k] returns a Stirling number of the first kind. This is obsolete. Use the built-in Mathematica function StirlingS1 instead."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`DivideBilateral	"DivideBilateral[NotebookSelection[nb]] replaces any bilateral cells in the current selection with their constituent cells. DivideBilateral[nb] does so for the entire notebook."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`NotebookRestore	"NotebookRestore[file.nb] recreates the given notebook by salvaging individual cells out of file.nb and writing them, one by one as they are found, into a new notebook window."
<<EntryDelimiter>>
AuthorTools`Common`NotebookFilePath	"NotebookFilePath[nbObj] returns the full path to the given notebook object as specified by NotebookInformation."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`ToBilateral	"ToBilateral[cellList] returns the bilateral cell form of the given cells."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPhi	"ButcherPhi[tree, s] gives the left-hand side of the order condition imposed by tree of an s-stage Runge-Kutta method. ButcherPhi[tree] gives the weight function in stage-independent tensor notation involving dot products and scalar multiplications. Using this notation, a is an s by s matrix, b and c are vectors of length s, and e is the length-s vector with unit components.  The option RungeKuttaMethod controls the form of the result."
<<EntryDelimiter>>
Geometry`Polytopes`Schlafli	"Schlafli[p] gives the Schlafli symbol for polytope p."
<<EntryDelimiter>>
DocumentationSearch`ExportSearchResults	"ExportSearchResults[results, format] exports the search results to the specified format."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetSections	"StylesheetSections[nb] returns a list of section headins from the given stylesheet."
<<EntryDelimiter>>
Algebra`InequalitySolve`InequalitySolve	"InequalitySolve[expr, x] gives the solution set of an expression containing logical connectives and univariate polynomial equations and inequalities in the variable x. InequalitySolve[expr, {x1, ..., xn}] gives the solution set of an expression containing logical connectives and linear equations and inequalities in the variables {x1, ..., xn}."
<<EntryDelimiter>>
Algebra`FiniteFields`FieldExp	"FieldExp[f, n] gives the value of the discrete exponential function associated with the field f for integer n. The value of this function depends on the choice of primitive element, which depends on the choice of irreducible polynomial. FieldExp is defined only if PowerListQ has been set True for the field. FieldExp[f, 1] gives the primitive element used by the function. FieldExp[f, -Infinity] gives 0."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherAlpha	"ButcherAlpha[tree] gives the number of ways of labeling the vertices of the tree tree with a totally ordered set of labels such that if (m, n) is an edge, then m < n."
<<EntryDelimiter>>
Parallel`V2``ResetSlaves	"ResetSlaves[] has been superseded by AbortKernels[]."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselYZerosInterval	"BesselYZerosInterval[nu, {zmin, zmax}] gives a list of the zeros of the order nu BesselY function that lie in the interval zmin to zmax."
<<EntryDelimiter>>
AuthorTools`Pagination`OpenAllCellGroups	"OpenAllCellGroups is an option to Paginate that determines whether to open all the cell groups in each notebook before calculating page breaks."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NetworkFlowEdges	"NetworkFlowEdges[g, source, sink] returns the edges of the graph with positive flow, showing the distribution of a maximum flow from source to sink in graph g. This is obsolete, and NetworkFlow[g, source, sink, Edge] should be used instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Vertices	"Vertices[g] gives the embedding of graph g, that is, the coordinates of each vertex in the plane. Vertices[g, All] gives the embedding of the graph along with graphics options associated with each vertex."
<<EntryDelimiter>>
Parallel`V2``ClearShared	"ClearShared[] has been superseded by UnsetShared[]."
<<EntryDelimiter>>
AuthorTools`MakeIndex`IndexCellOnSelection	"IndexCellOnSelection[nb] reads in the selected text or cell, and adds that text as an index entry for the cell."
<<EntryDelimiter>>
NumberTheory`Rationalize`AffineRationalize	"AffineRationalize[{x1,...,xn}] returns rational numbers {u1,...,un} so that ui approximates xi well for each 1 <= i <= n, and so the least common denominator of the ui's is small. AffineRationalize[{x0,x1,...,xn}, prec] allows a tolerance of 10^-prec. The numbers xi must be real."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToCanonicalSetPartition	"ToCanonicalSetPartition[sp, set] reorders sp into a canonical order with respect to set. In the canonical order, the elements of each subset of the set partition are ordered as they appear in set, and the subsets themselves are ordered by their first elements. ToCanonicalSetPartition[sp] reorders sp into canonical order, assuming that Mathematica knows the underlying order on the set for which sp is a set partition."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PartialOrderQ	"PartialOrderQ[g] yields True if the binary relation defined by edges of the graph g is a partial order, meaning it is transitive, reflexive, and antisymmetric. PartialOrderQ[r] yields True if the binary relation defined by the square matrix r is a partial order."
<<EntryDelimiter>>
LinearAlgebra`Orthogonalization`Householder	"Householder[vecs] is an obsolete function. Use Orthogonalize[vecs, Method -> \"Householder\"] instead."
<<EntryDelimiter>>
ClusterIntegration`CCS`CCSNewComputeKernels	"Internal function. Use NewKernels to launch remote kernels."
<<EntryDelimiter>>
NumericalMath`NLimit`ND	"ND[expr, x, x0] gives a numerical approximation to the derivative of expr with respect to x at the point x0. ND[expr, {x, n}, x0] gives a numerical approximation to the n-th derivative of expr with respect to x at the point x0. With the method EulerSum, ND attempts to evaluate expr at x0. If this fails, ND fails."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Hypercube	"Hypercube[n] constructs an n-dimensional hypercube."
<<EntryDelimiter>>
Calculus`DSolveIntegrals`IntegralConstants	"IntegralConstants is obsolete, please use GeneratedParameters instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`McGeeGraph	"McGeeGraph returns the unique (7, 3)-cage, a 3-regular graph with girth 7."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RotateVertices	"RotateVertices[v, theta] rotates each vertex position in list v by theta radians about the origin (0, 0). RotateVertices[g, theta] rotates the embedding of the graph g by theta radians about the origin (0, 0)."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GetEdgeWeights	"GetEdgeWeights[g] returns the list of weights of the edges of g. GetEdgeWeights[g, es] returns the list of weights in graph g of the edges in es."
<<EntryDelimiter>>
Miscellaneous`Calendar`Islamic	"Islamic specifyies that the Islamic calendar is to be used. It is a value for the Calendar option and can be used as an argument to CalendarChange. This calendar began on {622, 7, 16} Julian, or {1, 1, 1} in the Islamic calendar (the Hejira)."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`TermIncrement	"TermIncrement is an option for AliquotSequence and AliquotCycle which specifies the amount by which each term in the Aliquot sequence is to be incremented from its standard value (the sum of factors of the previous term). The value of this option may be any integer. The default value is 0. "
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankGrayCodeSubset	"RankGrayCodeSubset[l, s] gives the rank of subset s of set l in the Gray code ordering of the subsets of l."
<<EntryDelimiter>>
ResourceLocator`TextResourceLoad	"TextResourceLoad[ appName, appRoot] loads text resources for the application rooted at appRoot. It returns a TextResourceFunction."
<<EntryDelimiter>>
Miscellaneous`RealOnly`Nonreal	"Nonreal is a symbol that replaces a calculation result that involves an unavoidable complex number."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IdentityPermutation	"IdentityPermutation[n] gives the size-n identity permutation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteEdges	"DeleteEdges[g, edgeList] gives graph g minus the list of edges edgeList. If g is undirected, then the edges in edgeList are treated as undirected edges, or otherwise they are treated as directed edges. If there are multiple edges that qualify, then only one edge is deleted. DeleteEdges[g, edgeList, All] will delete all edges that qualify. If only one edge is to be deleted, then edgeList can have the form {s, t}, or otherwise it has the form {{s1, t1}, {s2, t2}, ...}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PlanarQ	"PlanarQ[g] yields True if graph g is planar, meaning it can be drawn in the plane so no two edges cross."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeYJYPrimeZerosInterval	"BesselJPrimeYJYPrimeZerosInterval[nu, l, {zmin, zmax}] gives a list of the zeros of BesselJ'[nu, z] BesselY[nu, l z] - BesselJ[nu, l z] BesselY'[nu, z] that lie in the interval zmin to zmax."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Girth	"Girth[g] gives the length of a shortest cycle in a simple graph g."
<<EntryDelimiter>>
Utilities`Benchmark`$BenchmarkSystems	"$BenchmarkSystems is a collection of systems for which benchmark data is available."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetEdgeWeights	"SetEdgeWeights[g] assigns random real weights in the range [0, 1] to edges in g. SetEdgeWeights accepts options WeightingFunction and WeightRange. WeightingFunction can take values Random, RandomInteger, Euclidean, or LNorm[n] for nonnegative n, or any pure function that takes two arguments, each argument having the form {Integer, {Number, Number}}. WeightRange can be an integer range or a real range. The default value for WeightingFunction is Random and the default value for WeightRange is [0, 1]. SetEdgeWeights[g, e] assigns edge weights to the edges in the edge list e. SetEdgeWeights[g, w] assigns the weights in the weight list w to the edges of g. SetEdgeWeights[g, e, w] assigns the weights in the weight list w to the edges in edge list e."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PseudographQ	"PseudographQ[g] yields True if graph g is a pseudograph, meaning it contains self-loops."
<<EntryDelimiter>>
NumberTheory`Ramanujan`RamanujanTauDirichletSeries	"RamanujanTauDirichletSeries[s] gives the Ramanujan Dirichlet L-function L(s)."
<<EntryDelimiter>>
DocumentationSearch`DocumentationSpellIndexes	"DocumentationSpellIndexes[] returns the spell index directories of documentation."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`Ray	"Ray[{x1,y1},{x2,y2}] is a means of representing the infinite rays found in diagrams containing open polygons. Here {x1,y1} indicates the head of the ray (a polygon vertex), and {x2,y2} indicates a point along the ray."
<<EntryDelimiter>>
ResourceLocator`ApplicationAdd	"ApplicationAdd[dir] adds an application."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Uniquely3ColorableGraph	"Uniquely3ColorableGraph returns a 12-vertex, triangle-free graph with chromatic number 3 that is uniquely 3-colorable."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Pphi	"{Rr,Ttheta,Pphi} are the default Spherical coordinates; {Uu,Vv,Pphi} are the default coordinates for the Paraboloidal, Bispherical, and Toroidal coordinate systems; {Xxi,Eeta,Pphi} are the default coordinates for the Prolate Spheroidal and Oblate Spheroidal coordinate systems."
<<EntryDelimiter>>
LightweightGridClient`RemoteServicesAgents	"RemoteServicesAgents[] returns a list of URLs for Lightweight Grid Managers discovered on the local network.\r\nRemoteServicesAgents[\"agent\"] returns a list of URLs for agents known to agent."
<<EntryDelimiter>>
Miscellaneous`WorldNames`NorthAmerica	"NorthAmerica contains the names of the countries of North and Central America defined in the WordData database."
<<EntryDelimiter>>
Graphics`ComplexMap`PolarMap	"PolarMap[f, {r0:0, r1, (dr)}, {phi0, phi1, (dphi)}] plots the image of the polar coordinate lines under the function f. The default for the phi range is {0, 2Pi}. The default values of dr and dphi are chosen so that the number of lines is equal to the value of the option Lines."
<<EntryDelimiter>>
AuthorTools`StyleTools`OverwriteStylesheet	"OverwriteStylesheet is an option to InstallStylesheet that determines whether to automatically overwrite a stylesheet with the same name."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CompleteBinaryTree	"CompleteBinaryTree[n] returns a complete binary tree on n vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DilateVertices	"DilateVertices[v, d] multiplies each coordinate of each vertex position in list v by d, thus dilating the embedding. DilateVertices[g, d] dilates the embedding of graph g by the factor d."
<<EntryDelimiter>>
Parallel`V2``SharedVariables	"SharedVariables[] has been superseded by SetSharedVariable[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromAdjacencyMatrix	"FromAdjacencyMatrix[m] constructs a graph from a given adjacency matrix m, using a circular embedding. FromAdjacencyMatrix[m, v] uses v as the embedding for the resulting graph. An option Type that takes on the values Directed or Undirected can be used to affect the type of graph produced. The default value of Type is Undirected. FromAdjacencyMatrix[m, EdgeWeight] interprets the entries in m as edge weights, with infinity representing missing edges, and from this constructs a weighted graph using a circular embedding. FromAdjacencyMatrix[m, v, EdgeWeight] uses v as the embedding for the resulting graph. The option Type can be used along with the EdgeWeight tag."
<<EntryDelimiter>>
Parallel`Kernels``$sortedkernels	"$sortedkernels is $kernels sorted by speed."
<<EntryDelimiter>>
DocumentationSearch`DocumentationNotebookIndexer	"DocumentationNotebookIndexer[...] contains the notebook indexer object."
<<EntryDelimiter>>
AuthorTools`Common`NotebookSaveWarning	"NotebookSaveWarning[nb, func] issues a warning message if the given notebook isn't saved before being passed to the specified function."
<<EntryDelimiter>>
AuthorTools`StyleTools`AddStylesheetSection	"Lou!"
<<EntryDelimiter>>
NumericalMath`EquationTrekker`TrekGenerator	"TrekGenerator is an option to EquationTrekker specifying the system of trek generation."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`TriangularSurfacePlot	"TriangularSurfacePlot[{{x1,y1,z1},...,{xn,yn,zn}}] plots the zi according to the planar Delaunay triangulation established by the {xi,yi}. TriangularSurfacePlot[{{x1,y1,z1},...,{xn,yn,zn}},val] plots the zi according to the planar triangulation of the {xi,yi} stipulated by the vertex adjacency list val."
<<EntryDelimiter>>
DiscreteMath`RSolve`MethodEGF	"MethodEGF is a possible value for the Method option of RSolve. It denotes the method of exponential generating functions."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SelectionSort	"SelectionSort[l, f] sorts list l using ordering function f."
<<EntryDelimiter>>
AuthorTools`Experimental`NotebookSearch	"NotebookSearch[str] searches the notebooks from the Help Browser and opens a new notebook with links to any cell containing the given string pattern. NotebookSearch[list, str] searches the given list of notebook objects, files, and directories. NotebookSearch[list, str, format] returns the results in the given format."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GetVertexLabels	"GetVertexLabels[g] returns the list of labels of vertices of g. GetVertexLabels[g, vs] returns the list of labels in graph g of the vertices specified in list vs."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OrbitInventory	"OrbitInventory[ci, x, w] returns the value of the cycle index ci when each formal variable x[i] is replaced by w. OrbitInventory[ci, x, weights] returns the inventory of orbits induced on a set of functions by the action of a group with cycle index ci. It is assumed that each element in the range of the functions is assigned a weight in list weights."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexColor	"VertexColor is an option that allows the user to associate colors with vertices. Black is the default color. VertexColor can be set as part of the graph data structure and it can be used in ShowGraph."
<<EntryDelimiter>>
NumericalMath`Approximations`Brake	"Brake is an option to MiniMaxApproximation and GeneralMiniMaxApproximation. A valid choice for Brake is a list of two nonnegative integers that control how the changes from one iteration to the next are to be restricted. The first integer indicates the number of iterations that are to be restricted and the second indicates the magnitude of the first restriction. The restrictions decrease to 0 as the algorithm  proceeds."
<<EntryDelimiter>>
AuthorTools`Experimental`$CacheOffsetsQ	"$CacheOffsetsQ determines whether to cache byte offset information for notebook searches run in the current kernel session."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AlternatingGroup	"AlternatingGroup[n] generates the set of even-size n permutations, the alternating group on n symbols. AlternatingGroup[l] generates the set of even permutations of the list l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FolkmanGraph	"FolkmanGraph returns a smallest graph that is edge-transitive but not vertex-transitive."
<<EntryDelimiter>>
Parallel`Palette``menuStatus	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TableauClasses	"TableauClasses[p] partitions the elements of permutation p into classes according to their initial columns during Young tableaux construction."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectInformation	"ProjectInformation[file] returns a list of information about the project which was in the given project file."
<<EntryDelimiter>>
Statistics`DataManipulation`RangeCounts	"RangeCounts[{x1, x2, ...}, {c1, c2, ..., cm}] gives a list of the number of elements in the data {x1, x2, ...} that lie between successive cutoffs. The range boundaries are {x < c1, c1 <= x < c2, ..., x >= cm}. RangeCounts[{{x1, y1}, {x2, y2}, ...}, {xc1, xc2, ..., xcm}, {yc1, yc2, ..., ycn}] gives a 2-dimensional array of range counts for the bivariate data {{x1, y1}, {x2, y2}, ...}. In general, RangeCounts gives a p-dimensional array of range counts for p-variate data."
<<EntryDelimiter>>
NumericalMath`Butcher`Implicit	"Explicit is a setting for the option RungeKuttaMethod specifying the type of Runge-Kutta method to be generated."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJZeros	"BesselJZeros[nu, n] gives a list of the first n zeros of the order nu BesselJ function. BesselJZeros[nu, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextLexicographicSubset	"NextLexicographicSubset[l, s] gives the lexicographic successor of subset s of set l."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`MakeBilateral	"MakeBilateral[NotebookSelection[nb]] replaces the selected cells with a single bilateral cell, whose left column contains the first cell, and whose right column contains the remaining cells. MakeBilateral[nb] replaces all sequences of cells indicated by FirstBilateralStyles and RestBilateralStyles."
<<EntryDelimiter>>
Parallel`Concurrency``DoneQ	"DoneQ[eid] returns True if the given concurrent evaluation has finished."
<<EntryDelimiter>>
AuthorTools`Experimental`MultiWordSearch	"MultiWordSearch is an option for NotebookSearch that determines whether to return cells that contain any (Or) or all (And) of the given search strings. Default: Or"
<<EntryDelimiter>>
AuthorTools`StyleTools`AddStyles	"AddStyles[nb, cells] adds the given style prototypes to the stylesheet, returning an altered stylesheet."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`IdealDivide	"IdealDivide[x, y] gives the correctly rounded result of x divided by y. The default `/' division operator in Mathematica is, in fact, multiplication by the reciprocal, involves two rounding errors, and can result in an incorrectly rounded quotient. IdealDivide is also an option to SetArithmetic that can be set to True or False indicating whether $PreRead should be used to translate the default `/' division operator to use IdealDivide."
<<EntryDelimiter>>
NumericalMath`Approximations`Derivatives	"Derivatives is an option to MiniMaxApproximation and GeneralMiniMaxApproximation. It can be Automatic or an expression that evaluates to a list containing the function, the first derivative, and the second derivative evaluated at the variable."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankSetPartition	"UnrankSetPartition[r, set] finds a set partition of set with rank r. UnrankSetPartition[r, n] finds a set partition of {1, 2, ..., n} with rank r."
<<EntryDelimiter>>
Graphics`Arrow`HeadScaling	"HeadScaling is an obsolete option for the Arrow primitive; it specifies the scaling used in the coordinate system for drawing the arrowhead.  Automatic scales the system to the graphic, where {0,0} is at the head of the arrow, and the system is rotated along the arrow, and the distance between 0 and 1 is equivalent to the width of the graphic.  Relative scales the coordinates of the arrowhead so that {0,0} is at the head of the arrow, {-1,0} at the tail. Absolute scales to the same coordinate system used in the device coordinate system, rotated along the arrow, with {0,0} at the head."
<<EntryDelimiter>>
DiscreteMath`RSolve`UseMod	"UseMod is an obsolete option of RSolve and SeriesTerm, superseded by IntegerFunctions."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ScalarTripleProduct	"ScalarTripleProduct[v1, v2, v3] gives the scalar triple product of the three vectors v1, v2, and v3 in three space in the default coordinate system. ScalarTripleProduct[v1, v2, v3, coordsys] gives the scalar triple product of v1, v2, and v3 in the coordinate system coordsys."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherTreeCount	"ButcherTreeCount[p] gives a list of the number of trees through order p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TransitiveReduction	"TransitiveReduction[g] finds a smallest graph that has the same transitive closure as g."
<<EntryDelimiter>>
AuthorTools`Experimental`ShowResultsInBrowser	"ShowResultsInBrowser is an option to NotebookSearch that indicates whether to open a new notebook with the results, or open the results as a help browser item."
<<EntryDelimiter>>
ClusterIntegration`LSF`LSFNewComputeKernels	"Internal function of ClusterIntegration. Use ClusterLaunchSlaves to launch remote kernels."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`TrimPoints	"TrimPoints is an option of DiagramPlot indicating the order of the diagram outlier vertex that lies on the PlotRange limit. The default TrimPoints -> 0 implies that all diagram vertices lie within PlotRange. TrimPoints -> n implies that PlotRange is such that the nth largest outlier vertex lies on the PlotRange limit."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Parent	"Parent is a tag used as an argument to the function AllPairsShortestPath in order to inform this function that information about parents in the shortest paths is also wanted."
<<EntryDelimiter>>
Algebra`FiniteFields`SetFieldFormat	"SetFieldFormat[f] sets the output form of elements in field f. The default (FormatType -> Subscripted) is to set the OutputForm to be a subscripted vector. FormatType -> FullForm sets the OutputForm to FullForm. SetFieldFormat can also be used to set the input form. FormatType -> FunctionOfCoefficients[g] sets both input and output to have the functional notation g[c0, c1, ...] where c0, c1, ... are the coefficients in the polynomial representation of an element. FormatType -> FunctionOfCode[g] sets both input and output to have the functional notation g[c] where c is the integer code specifying an element."
<<EntryDelimiter>>
ResourceLocator`ApplicationDataUserDirectory	"ApplicationDataUserDirectory[ appname, opts] returns an area for an application to store data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`WeaklyConnectedComponents	"WeaklyConnectedComponents[g] gives the weakly connected components of directed graph g as lists of vertices."
<<EntryDelimiter>>
AuthorTools`Experimental`RebuildBrowserLookupTable	"RebuildBrowserLookupTable[] refreshes the value of $BrowserLookupTable based on the currently available browser category files."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Wheel	"Wheel[n] constructs a wheel on n vertices, which is the join of CompleteGraph[1] and Cycle[n-1]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankSetPartition	"RankSetPartition[sp, s] ranks sp in the list of all set partitions of set s. RankSetPartition[sp] ranks sp in the list of all set partitions of the set of elements that appear in any subset in sp."
<<EntryDelimiter>>
AuthorTools`MakeCategories`StartingCounterValues	"StartingCounterValues is an option for MakeBrowserCategories which determines how the chapters, sections, etc. will be numbered.  The default {0,0,0,0} numbers everything starting at zero.  A setting of {1,0,1,0} for example will number the chapters starting at 1, sections starting at 0, subsections starting at 1, etc."
<<EntryDelimiter>>
Calculus`VariationalMethods`FirstIntegral	"FirstIntegral[u] represents the first integral associated with the variable u. It appears in the output of the function FirstIntegrals."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToCycles	"ToCycles[p] gives the cycle structure of permutation p as a list of cyclic permutations."
<<EntryDelimiter>>
ResourceLocator`ApplicationDirectoriesLocate	"ApplicationDirectoriesLocate[ ] returns a list of the applications directories."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`PlanarGraphPlot	"PlanarGraphPlot[{{x1,y1},{x2,y2},...,{xn,yn}}] plots the planar graph corresponding to the Delaunay triangulation established by the {xi,yi}. PlanarGraphPlot[{{x1,y1},{x2,y2},...,{xn,yn}},list] plots the planar graph of the {xi,yi} as stipulated by list; list may have the form {{l1,{l11,l12,...}, ...,{ln,{ln1,ln2,...}}} (vertex adjacency list) or {l1,...,ln} (representing a single circuit) where li is the position of the ith unique point in the input list."
<<EntryDelimiter>>
LinearAlgebra`Orthogonalization`Normalized	"Normalized is an obsolete option."
<<EntryDelimiter>>
LightweightGridClient`RemoteService	"RemoteService[{properties}] contains a list of properties about a service provided by a Lightweight Grid Manager."
<<EntryDelimiter>>
AuthorTools`MakeCategories`CategoriesFileName	"CategoriesFileName is an option to MakeBrowserCategories that specifies the name of the generated browser categories file."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Cylindrical	"Cylindrical represents the cylindrical coordinate system with default variables Rr, Ttheta, and Zz. Cylindrical[r, theta, z] represents the cylindrical coordinate system with variables r, theta, and z."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteEdge	"DeleteEdge[g, e] gives graph g minus e. If g is undirected, then e is treated as an undirected edge, otherwise it is treated as a directed edge. If there are multiple edges between the specified vertices, only one edge is deleted. DeleteEdge[g, e, All] will delete all edges between the specified pair of vertices. Using the tag Directed as a third argument in DeleteEdge is now obsolete."
<<EntryDelimiter>>
ResourceLocator`ResourceAdd	"ResourceAdd[ dir, type] adds a resource of type. ResourceAdd[ dir, type, app] associates the resource with an application."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PairGroupIndex	"PairGroupIndex[g, x] returns the cycle index of the pair group induced by g as a polynomial in x[1], x[2], .... PairGroupIndex[ci, x] takes the cycle index ci of a group g with formal variables x[1], x[2], ..., and returns the cycle index of the pair group induced by g. PairGroupIndex[g, x, Ordered] returns the cycle index of the ordered pair group induced by g as a polynomial in x[1], x[2], .... PairGroupIndex[ci, x, Ordered] takes the cycle index ci of a group g with formal variables x[1], x[2], ..., and returns the cycle index of the ordered pair group induced by g."
<<EntryDelimiter>>
Parallel`Palette``clearProfiled	""
<<EntryDelimiter>>
AuthorTools`Common`MessageDisplay	"MessageDisplay[symbol::tag, e1, e2, ...] displays the indicated message in a dialog-like notebook if the evaluation began from a button click, and through the normal message stream otherwise."
<<EntryDelimiter>>
NumericalMath`NSeries`NSeries	"NSeries[f, {x, x0, n}] gives a numerical approximation to the series expansion of f about the point x == x0 through (x-x0)^n. It does this by sampling f at points around on a circle centered at x0 and using Fourier. The option Radius specifies the radius of the circle."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ChromaticNumber	"ChromaticNumber[g] gives the chromatic number of the graph, which is the fewest number of colors necessary to color the graph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeWeight	"EdgeWeight is an option that allows the user to associate weights with edges. 1 is the default weight. EdgeWeight can be set as part of the graph data structure."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`InvariantDimensions	"InvariantDimensions is an option of\r\nInvariantErrorPlot specifying the dimensions of the invariants."
<<EntryDelimiter>>
Parallel`Configuration``$InitCode	"ReleaseHold[$InitCode] is run on every new remote kernel for user initialization."
<<EntryDelimiter>>
AuthorTools`Common`SelectedCellStyles	"SelectedCellStyles is an option that determines what cells from the user's notebook are itemized when building a table of contents or browser categories.  It can be set to a list of style names."
<<EntryDelimiter>>
Parallel`VirtualShared`sharedSystemDownValue	"sharedSystemDownValue[s] declares s as a shared internal function."
<<EntryDelimiter>>
Algebra`FiniteFields`IrreduciblePolynomial	"IrreduciblePolynomial[s, p, d] finds an irreducible polynomial in the symbol s of degree d over the integers mod prime p."
<<EntryDelimiter>>
Miscellaneous`Calendar`Tuesday	"Tuesday is a day of the week."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`IgnoreGraphicsCells	"IgnoreGraphicsCells is an option that determines whether NotebookRestore and SalvageCells should check the syntax of graphics cells or discard them without checking."
<<EntryDelimiter>>
SubKernels`RemoteKernels`RemoteMachine	"RemoteMachine[host, (template), (n), opts...] is a description of an available remote machine.\r\n\tThe host, template, and n are the arguments to LaunchRemote; the default template is $RemoteCommand."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ThinDashed	"ThinDashed is a value that the option EdgeStyle can take on in the graph data structure or in ShowGraph."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`RestBilateralStyles	"RestBilateralStyles is an option to MakeBilateral which determines which cell styles should indicate the content of a bilateral cell. Default value is $RestBilateralStyles."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`CellDiff	"CellDiff[cell1, cell2] prints cell1 and cell2 with differences highlighted and a comparison of cellstyles and options."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPlotRootSize	"ButcherPlotRootSize is an option to ButcherPlot that specifies a scaling factor to be applied to the default size for encircling of tree roots in the plot. The root is not highlighted if the value is zero."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphComplement	"GraphComplement[g] gives the complement of graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`StronglyConnectedComponents	"StronglyConnectedComponents[g] gives the strongly connected components of directed graph g as lists of vertices."
<<EntryDelimiter>>
AuthorTools`Experimental`$DefaultSearchFormat	"$DefaultSearchFormat is the default format generated by NotebookSearch."
<<EntryDelimiter>>
SubKernels`LocalKernels`LocalMachine	"LocalMachine[(template), (n), opts...] is a description of n kernels on the local machine.\r\n\tThe template and options are arguments to LaunchLocal.\r\n\t\tThe default template is $mathkernel.\r\n\t\tThe default number of kernels is 1."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomPermutation1	"RandomPermutation1 is now obsolete. Use RandomPermutation instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomPermutation2	"RandomPermutation2 is now obsolete. Use RandomPermutation instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BiconnectedQ	"BiconnectedQ[g] yields True if graph g is biconnected. If g is directed, the underlying undirected graph is used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MakeSimple	"MakeSimple[g] gives the undirected graph, free of multiple edges and self-loops derived from graph g."
<<EntryDelimiter>>
Parallel`Concurrency``$LoadFactor	"$LoadFactor determines the maximum number of pending processes on a kernel. Values larger than 1 implement latency hiding."
<<EntryDelimiter>>
AuthorTools`MakeProject`ReadProjectDialog	"ReadProjectDialog[nb] reads the data currently in the project dialog nb and returns a list of rules, just as would be stored in a project file."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BellmanFord	"BellmanFord[g, v] gives a shortest-path spanning tree and associated distances from vertex v of graph g. The shortest-path spanning tree is given by a list in which element i is the predecessor of vertex i in the shortest-path spanning tree. BellmanFord works correctly even when the edge weights are negative, provided there are no negative cycles."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RegularGraph	"RegularGraph[k, n] constructs a semirandom k-regular graph on n vertices, if such a graph exists."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeYPrimeJPrimeYPrimeZerosInterval	"BesselJPrimeYPrimeJPrimeYPrimeZerosInterval[nu, l, {zmin, zmax}] gives a list of the zeros of BesselJ'[nu, z] BesselY'[nu, l z] - BesselJ'[nu, l z] BesselY'[nu, z] that lie in the interval zmin to zmax."
<<EntryDelimiter>>
DiscreteMath`RSolve`RealQ	"'RealQ[x] = True' serves to declare that x is real."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToInversionVector	"ToInversionVector[p] gives the inversion vector associated with permutation p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ThomassenGraph	"ThomassenGraph returns a hypotraceable graph, a graph G that has no Hamiltonian path but whose subgraph G-v for every vertex v has a Hamiltonian path."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HeawoodGraph	"HeawoodGraph returns a smallest (6, 3)-cage, a 3-regular graph with girth 6."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BinarySubsets	"BinarySubsets[l] gives all subsets of l ordered according to the binary string defining each subset. For any positive integer n, BinarySubsets[n] gives all subsets of {1, 2,.., n} ordered according to the binary string defining each subset."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Highlight	"Highlight[g, p] displays g with elements in p highlighted. The second argument p has the form {s1, s2,...}, where the sis are disjoint subsets of vertices and edges of g. The options, HighlightedVertexStyle, HighlightedEdgeStyle, HighlightedVertexColors, and HighlightedEdgeColors are used to determine the appearance of the highlighted elements of the graph. The default settings of the style options are HighlightedVertexStyle->Disk[Large] and HighlightedEdgeStyle->Thick. The options HighlightedVertexColors and HighlightedEdgeColors are both set to {Black, Red, Blue, Green, Yellow, Purple, Brown, Orange, Olive, Pink, DeepPink, DarkGreen, Maroon, Navy}. The colors are chosen from the palette of colors with color 1 used for s1, color 2 used for s2, and so on. If there are more parts than colors, then the colors are used cyclically. The function permits all the options that SetGraphOptions permits, for example, VertexColor, VertexStyle, EdgeColor, and EdgeStyle. These options can be used to control the appearance of the non-highlighted vertices and edges."
<<EntryDelimiter>>
AuthorTools`Pagination`PaginationFunction	"PaginationFunction is an option to Paginate that specifies a function to apply to each notebook object after page numbers are calculated but before the notebook is closed."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`RoundToEven	"RoundToEven is a choice for the option RoundingRule of SetArithmetic. It specifies that the rounding is to be to the nearest representable number and, in the case of a tie, round to the one represented by an even mantissa."
<<EntryDelimiter>>
DiscreteMath`Tree`TreeFind	"TreeFind[treelist, x] finds the largest element smaller than or equal to x in the list from which treelist was constructed."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphProduct	"GraphProduct[g1, g2, ...] constructs the product of graphs g1, g2, and so forth."
<<EntryDelimiter>>
Integration`NIntegrateUtilities`NIntegrateRangesToHyperCube	"NIntegrateRangesToHyperCube[ranges, cubeSides] gives the transformation and its Jacobian of ranges to a hypercube with sides specified by cubeSides."
<<EntryDelimiter>>
AuthorTools`StyleTools`Stylesheet	"Stylesheet[nb] returns the stylesheet notebook expression for the given notebook file or object. If nb itself is a stylesheet, its expression is returned."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MycielskiGraph	"MycielskiGraph[k] returns a triangle-free graph with chromatic number k, for any positive integer k."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`WhichRootOfUnity	"WhichRootOfUnity[a] returns {n,k} if a = Exp(2 Pi I k / n) for a (unique) pair of nonnegative coprime integers k and n with k<n, otherwise returns unevaluated."
<<EntryDelimiter>>
Parallel`V2``ExportEnvironment	"ExportEnvironment[] has been superseded by DistributeDefinitions[]."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`IgnoreCellStyleDiffs	"IgnoreCellStyleDiffs is an option of NotebookDiff and CellDiff which specifies whether to ignore diffs in cell styles."
<<EntryDelimiter>>
ResourceLocator`ApplicationsLocate	"ApplicationsLocate[ ] returns a list of applications."
<<EntryDelimiter>>
Parallel`V2``CloseSlaves	"CloseSlaves[] has been superseded by CloseKernels[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MultipleEdgesQ	"MultipleEdgesQ[g] yields True if g has multiple edges between pairs of vertices. It yields False otherwise."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NthPermutation	"NthPermutation[n, l] gives the nth lexicographic permutation of list l. This function is obsolete; use UnrankPermutation instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphicQ	"GraphicQ[s] yields True if the list of integers s is a graphic sequence, and thus represents a degree sequence of some graph."
<<EntryDelimiter>>
Graphics`Arrow`HeadShape	"HeadShape is an obsolete option for the Arrow primitive; it specifies the shape of the arrow's head by Automatic, which specifies that the shape is described by the parameters HeadLength, HeadCenter, and HeadWidth, or it can be a list of a subset of the Mathematica graphics primitives, drawn in the coordinate system scaled by HeadScaling.  The coordinate system is centered at the head of the arrow, with the negative direction moving towards the tail of the arrow."
<<EntryDelimiter>>
Statistics`DataManipulation`RangeLists	"RangeLists[{x1, x2, ...}, {c1, c2, ..., cm}] gives lists of the elements in the data {x1, x2, ...} that lie between successive cutoffs. RangeLists[{{x1, y1}, {x2, y2}, ...}, {xc1, xc2, ...}, {yc1, yc2, ...}] gives a 2-dimensional array of range lists for the bivariate data {{x1, y1}, {x2, y2}, ...}. In general, RangeLists gives a p-dimensional array of range lists for p-variate data."
<<EntryDelimiter>>
SubKernels`RemoteKernels`$RemoteUserName	"$RemoteUserName is the default user (or login) name on a remote machine. Its default is $UserName."
<<EntryDelimiter>>
Parallel`Kernels``EvaluationCount	"EvaluationCount[kernel] is the number of pending evaluations on kernel.\r\n\tEvaluationCount[] is the total number of evaluations on all kernels."
<<EntryDelimiter>>
ClusterIntegration`XGRID`XGRIDCloseKernels	"Internal function of ClusterIntegration. Use CloseKernels to close compute kernels on Xgrid clusters."
<<EntryDelimiter>>
AuthorTools`DiffReport`Linear	"Linear is a value for the Method option of DiffReport and NotebookDiff. With Method->Linear, a linear difference routine finds the differences."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GrayGraph	"GrayGraph returns a 3-regular, 54-vertex graph that is edge-transitive but not vertex-transitive; the smallest known such example."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`RungeKuttaLinearStabilityFunction	"RungeKuttaLinearStabilityFunction[amat, bvec, z] gives the linear\r\nstability function of the Runge Kutta method with coefficient matrix\r\namat and weight vector bvec in the variable z."
<<EntryDelimiter>>
NumericalMath`IntervalRoots`IntervalBisection	"IntervalBisection[f, x, int, eps] uses the interval bisection method to find subintervals of the given interval int of length less than eps (possibly) containing roots of the expression f."
<<EntryDelimiter>>
Algebra`FiniteFields`Characteristic	"Characteristic[f] gives the characteristic of field f. The characteristic must be prime."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Permute	"Permute[l, p] permutes list l according to permutation p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`WaltherGraph	"WaltherGraph returns the Walther graph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankSubset	"UnrankSubset[n, l] gives the nth subset of list l, listed in some canonical order."
<<EntryDelimiter>>
AuthorTools`MakeIndex`MakeIndex	"MakeIndex[nb|proj, format] creates a new index file for the given notebook or project in the specified format, and opens it in the front end."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherPrincipalError	"ButcherPrincipalError[p, s] calculates the principal error for a method of order p with s stages. ButcherPrincipalError[p] gives the principal error using stage-independent tensor notation. The result is a list of the order p+1 terms appearing in a Taylor series expansion of the error. The option RungeKuttaMethod controls the form of the result."
<<EntryDelimiter>>
AuthorTools`Common`NotebookCellTags	"NotebookCellTags[nb] returns a list of the cell tags present in nb."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Optimum	"Optimum is a value that the option Algorithm can take on when used in functions VertexColoring and VertexCover."
<<EntryDelimiter>>
Algebra`Horner`Horner	"Horner[p] gives the polynomial or rational function of polynomials p in Horner or nested form with respect to the default variables Variables[p].  Horner[p, v] gives p in Horner form with respect to the variable or variable list v.  Horner[p1/p2, v1, v2] gives the rational function of polynomials p1/p2 in Horner form using the variables or variable lists v1 and v2 for p1 and p2 respectively."
<<EntryDelimiter>>
Parallel`Concurrency``finished	"finished[result] is a process state indicating that the process is finished with the given result."
<<EntryDelimiter>>
NumericalMath`IntervalRoots`IntervalNewton	"IntervalNewton[f, x, int, eps] uses an interval Newton method to find subintervals of the given interval int of length less than eps (possibly) containing roots of the expression f."
<<EntryDelimiter>>
Statistics`DataManipulation`ColumnDrop	"ColumnDrop[data, spec] drops the specified columns in data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CubeConnectedCycle	"CubeConnectedCycle[d] returns the graph obtained by replacing each vertex in a d-dimensional hypercube by a cycle of length d. Cube-connected cycles share many properties with hypercubes but have the additional desirable property that for d > 1 every vertex has degree 3."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Eccentricity	"Eccentricity[g] gives the eccentricity of each vertex v of graph g, the maximum length among all shortest paths from v."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Neighborhood	"Neighborhood[g, v, k] returns the subset of vertices in g that are at a distance of k or less from vertex v. Neighborhood[al, v, k] behaves identically, except that it takes as input an adjacency list al."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Radius	"Radius[g] gives the radius of graph g, the minimum eccentricity of any vertex of g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LabeledTreeToCode	"LabeledTreeToCode[g] reduces the tree g to its Prufer code."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Ordered	"Ordered is an option to the functions KSubsetGroup and KSubsetGroupIndex that tells the functions whether they should treat the input as sets or tuples."
<<EntryDelimiter>>
SubKernels`RemoteKernels`$RemoteCommand	"$RemoteCommand is the template for launching a kernel on a remote machine.\r\n\tIt should be a string template suitable for use in LinkLaunch or Run.\r\n\tThe first slot `1` is replaced by the name of the remote machine.\r\n\tFor connection type LinkCreate, the second slot `2` is replaced by the address to which to connect, the third slot `3` is replaced by the user name, and the fourth slot `4` is the link protocol specification."
<<EntryDelimiter>>
AuthorTools`MakeCategories`WriteBrowserCategories	"WriteBrowserCategories[path, expr] writes the browser categories expression to a file with the specified full path."
<<EntryDelimiter>>
AuthorTools`Printing`HeadersDialog	"HeadersDialog[nb] opens a dialog for changing header-related and footer-related options for nb."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomPartition	"RandomPartition[n] constructs a random partition of integer n."
<<EntryDelimiter>>
Miscellaneous`Dictionary`$DefaultDictionaryFile	"$DefaultDictionaryFile is the file name specification for the default dictionary file."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CartesianProduct	"CartesianProduct[l1, l2] gives the Cartesian product of lists l1 and l2."
<<EntryDelimiter>>
NumberTheory`Recognize`Recognize	"Recognize[x, n, t] finds a polynomial of degree at\r\nmost n in the variable t, which is approximately satisfied by the\r\nnumber x. Recognize[x, n, t, k] also finds a polynomial of degree at\r\nmost n in the variable t, but with a penalty of weight k against\r\nhigher degree polynomials. k must be a nonnegative integer."
<<EntryDelimiter>>
AuthorTools`Common`NotebookWriteTemplateCell	"NotebookWriteTemplateCell[nb, args] writes TemplateCell[args] after the current cell in the given notebook."
<<EntryDelimiter>>
Utilities`CleanSlate`System`Verbose	"Verbose is an option for CleanSlate and CleanSlateExcept that specifies whether they print diagnostic output. It can be set to True or False. The default is Verbose->True."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`TrekParameters	"TrekParameters is an option to EquationTrekker specifying the dynamic parameter objects."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EulerianCycle	"EulerianCycle[g] finds an Eulerian cycle of g if one exists."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IdenticalQ	"IdenticalQ[g, h] yields True if graphs g and h have identical edge lists, even though the associated graphics information need not be the same."
<<EntryDelimiter>>
Parallel`Kernels``ConnectKernel	"ConnectKernel[subkernel] connects to an open subkernel.\r\n\tConnectKernel[subkernel, KernelID->id] sets the new kernel's ID to id if possible."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LastLexicographicTableau	"LastLexicographicTableau[p] constructs the last Young tableau with shape described by partition p."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ListGraphs	"ListGraphs[n, m] returns all nonisomorphic undirected graphs with n vertices and m edges. ListGraphs[n, m, Directed] returns all nonisomorphic directed graphs with n vertices and m edges. ListGraphs[n] returns all nonisomorphic undirected graphs with n vertices. ListGraphs[n, Directed] returns all nonisomorphic directed graphs with n vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TreeIsomorphismQ	"TreeIsomorphismQ[t1, t2] yields True if the trees t1 and t2 are isomorphic. It yields False otherwise."
<<EntryDelimiter>>
AuthorTools`Common`NotebookCloseIfNecessary	"NotebookCloseIfNecessary[nbObj] closes the given notebook if it was not open the last time RememberOpenNotebooks was called."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FiniteGraphs	"FiniteGraphs produces a convenient list of all the interesting, finite, parameterless graphs built into Combinatorica."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`VoronoiDiagram	"VoronoiDiagram[{{x1,y1},{x2,y2},...,{xn,yn}}] yields the (planar) Voronoi diagram of the points. The diagram is represented as two lists: (1) a Voronoi vertex coordinate list, and (2) a vertex adjacency list, one entry for each unique point in the original coordinate list indicating the associated Voronoi polygon vertices in counterclockwise order. VoronoiDiagram[{{x1,y1},{x2,y2}, ...,{xn,yn}},val] takes val to be the vertex adjacency list of the dual Delaunay triangulation. VoronoiDiagram[{{x1,y1},{x2,y2},...,{xn,yn}},val,hull] takes hull to be the convex hull of the unique points."
<<EntryDelimiter>>
Calculus`VectorAnalysis`JacobianMatrix	"JacobianMatrix[pt] gives the Jacobian matrix of the transformation from the default coordinate system to the Cartesian coordinate system at the point pt. JacobianMatrix[pt, coordsys] gives the Jacobian matrix of the transformation from the coordinate system coordsys to the Cartesian coordinate system at the point pt. If pt is not given, the default coordinate variables are used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomKSetPartition	"RandomKSetPartition[set, k] returns a random set partition of set with k blocks. RandomKSetPartition[n, k] returns a random set partition of the first n natural numbers into k blocks."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`InvariantErrorFunction	"InvariantErrorFunction is an option of\r\nInvariantErrorPlot specifying how errors should be computed."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexColoring	"VertexColoring[g] uses Brelaz's heuristic to find a good, but not necessarily minimal, vertex coloring of graph g. An option Algorithm that can take on the values Brelaz or Optimum is allowed. The setting Algorithm -> Brelaz is the default, while the setting Algorithm -> Optimum forces the algorithm to do an exhaustive search to find an optimum vertex coloring."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`V	"V[g] gives the order or number of vertices of the graph g."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Rr	Set[MessageName[Ttheta,"usage"],"{Rr,Ttheta,Zz} are the default Cylindrical coordinates; {Rr,Ttheta,Pphi} are the default Spherical coordinates."]
<<EntryDelimiter>>
Miscellaneous`WorldNames`Europe	"Europe contains the names of all the countries of Europe defined in the WorldData database; includes Russia."
<<EntryDelimiter>>
Parallel`Concurrency``running	"running[kernel] is a process state indicating that the process is running on kernel."
<<EntryDelimiter>>
AuthorTools`Common`NotebookFileOutline	"NotebookFileOutline[nb] returns the notebook file outline cache for the saved notebook nb."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Conical	"Conical represents the conical coordinate system with default variables Llambda, Mmu, and Nnu and default parameter values 1 and 2. Conical[lambda, mu, nu] represents the conical coordinate system with variables lambda, mu, and nu and default parameter values 1 and 2. Conical[lambda, mu, nu, a, b] represents the conical coordinate system with variables lambda, mu, and nu and parameters a and b."
<<EntryDelimiter>>
Optimization`MPSData`ToLinearProgrammingData	"mpsData@ToLinearProgrammingData[] converts an MPS data object MPSData\r\nto a linear programming problem described by a list {c, m, b, bound}. The linear programming problem is solved by LinearProgramming[c, m, b, bound] "
<<EntryDelimiter>>
DiscreteMath`Combinatorica`M	"M[g] gives the number of edges in the graph g. M[g, Directed] is obsolete because M[g] works for directed as well as undirected graphs."
<<EntryDelimiter>>
NumericalMath`IntervalRoots`IntervalSecant	"IntervalSecant[f, x, int, eps] uses an interval secant method to find subintervals of the given interval int of length less than eps (possibly) containing roots of the expression f."
<<EntryDelimiter>>
NumericalMath`Butcher`RungeKuttaOrderConditions	"RungeKuttaOrderConditions[p, s] gives a list of lists of the order conditions that any s-stage Runge-Kutta method of order p must satisfy. The inner lists group the conditions by order. The conditions are expressed in terms of the global variables a, b, c, and the resulting Runge-Kutta method is\n\nY[i,x] = y[x0] + (x - x0) Sum[a[i,j] f[Y[j,x]], {j, 1, s}], i = 1, ..., s\n\nY[x] = y[x0] + (x - x0) Sum[b[j] f[Y[j,x]], {j, 1, s}]\n\nwhere the row-sum conditions c[i] == Sum[a[i, j], {j, 1, s}] are usually assumed to hold. RungeKuttaOrderConditions[p] expresses the order conditions using stage-independent tensor notation. In this notation, a is an s by s matrix, b and c are vectors of length s, and e is the length-s vector with unit components. The options ButcherRowSum, ButcherSimplify, and RungeKuttaMethod control the form of the result."
<<EntryDelimiter>>
Miscellaneous`Calendar`Julian	"Julian specifyies that the Julian calendar is to be used. It is a value for the Calendar option and can be used as an argument to CalendarChange. This calendar is only valid starting {4, 3, 1}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ParentsToPaths	"ParentsToPaths[l, i, j] takes a list of parents l and returns the path from i to j encoded in the parent list. ParentsToPaths[l, i] returns the paths from i to all vertices."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SumOfFactors	"SumOfFactors[n] returns the sum of the factors of n other than n itself. This is equal to DivisorSigma[1,n]-n. The option SumOfFactorsType may be used with this function, specifying the type of factor sum to use."
<<EntryDelimiter>>
Miscellaneous`Calendar`DaysBetween	"DaysBetween[{y1,m1, d1}, {y2,m2,d2}] gives the number of days between the dates {y1, m1, d1} and {y2, m2, d2}. The default calendar is the usual American calendar, but can be changed with the Calendar option. Dates can also be given in {y, m, d, h, m, s} form."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeLabel	"EdgeLabel is an option that can take on values True or False, allowing the user to associate labels to edges. By default, there are no edge labels. The EdgeLabel option can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
AuthorTools`Common`NotebookCacheValidQ	"NotebookCacheValidQ[nb] returns true if the given notebook contains what appears to be valid cache data, and false otherwise."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TwoColoring	"TwoColoring[g] finds a two-coloring of graph g if g is bipartite. It returns a list of the labels 1 and 2 corresponding to the vertices. This labeling is a valid coloring if and only the graph is bipartite."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UnrankPermutation	"UnrankPermutation[r, l] gives the rth permutation in the lexicographic list of permutations of list l. UnrankPermutation[r, n] gives the rth permutation in the lexicographic list of permutations of {1, 2,..., n}."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Parameters	"Parameters[ ] gives a list of the default parameters of the default coordinate system. Parameters[coordsys] gives a list of the default parameters in the coordinate system coordsys. (Many of the coordinate systems do not have parameters.)"
<<EntryDelimiter>>
Calculus`VectorAnalysis`Uu	Set[MessageName[Vv,"usage"],"{Uu,Vv,Zz} are the default coordinates for the ParabolicCylindrical, EllipticCylindrical, and Bipolar coordinate systems; {Uu,Vv,Pphi} are the default coordinates for the Paraboloidal, Bispherical, and Toroidal coordinate systems."]
<<EntryDelimiter>>
DiscreteMath`RSolve`GeneratingFunctionConstants	"GeneratingFunctionConstants is an option to GeneratingFunction that determines the constants in the the returned result. The default is GeneratingFunctionConstants -> C."
<<EntryDelimiter>>
NumericalMath`Microscope`Microscope	"Microscope[f, {x, a}] plots the expression f (which is supposed to contain a single variable x) in a small neighborhood of a. Microscope[f, {x, a, n}] plots f from a - n ulps to a + n ulps."
<<EntryDelimiter>>
Parallel`VirtualShared`sharedSystemVariable	"sharedSystemVariable[s] declares s as a shared internal variable."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`KSubsets	"KSubsets[l, k] gives all subsets of set l containing exactly k elements, ordered lexicographically."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetPartitionListViaRGF	"SetPartitionListViaRGF[n] lists all set partitions of the first n natural numbers, by first listing all restricted growth functions (RGFs) on these and then mapping the RGFs to corresponding set partitions. SetPartitionListViaRGF[n, k] lists all RGFs on the first n natural numbers whose maximum element is k and then maps these RGFs into the corresponding set partitions, all of which contain exactly k blocks."
<<EntryDelimiter>>
NumericalMath`NLimit`WynnDegree	"WynnDegree is an option to NLimit that specifies the degree used with Wynn's epsilon algorithm for approximating the limit of a sequence."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJYJYZerosInterval	"BesselJYJYZerosInterval[nu, l, {zmin, zmax}] gives a list of the zeros of BesselJ[nu, z] BesselY[nu, l z] - BesselJ[nu, l z] BesselY[nu, z] that lie in the interval zmin to zmax."
<<EntryDelimiter>>
AuthorTools`Common`IncludeCellTags	"IncludeCellTags is an option that determines whether the list of cell tags from a cell should be included in the output."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ParabolicCylindrical	"ParabolicCylindrical represents the parabolic cylindrical coordinate system with default variables Uu, Vv, and Zz. ParabolicCylindrical[u, v, z] represents the parabolic cylindrical coordinate system with variables u, v, and z."
<<EntryDelimiter>>
NumericalMath`ListIntegrate`ListIntegrate	"ListIntegrate[{y0, y1, ..., yn}, h, k] is an obsolete function that uses an InterpolatingFunction object of order k to give an approximation to the integral of a function with values equal to  y0,...,yn at points equally spaced a distance h apart."
<<EntryDelimiter>>
Miscellaneous`Calendar`JewishNewYear	"JewishNewYear[y] gives the date of the Jewish New Year occurring in Christian year y, 1900 <= y < 2100. Add 3761 to Christian year y to get the corresponding new Jewish Year."
<<EntryDelimiter>>
LightweightGridClient`RemoteServicesKernel	"RemoteServicesKernel[{properties}] contains a list of properties about a currently open Lightweight Grid kernel."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteCycle	"DeleteCycle[g, c] deletes a simple cycle c from graph g. c is specified as a sequence of vertices in which the first and last vertices are identical. g can be directed or undirected. If g does not contain c, it is returned unchanged; otherwise g is returned with c deleted."
<<EntryDelimiter>>
AuthorTools`Common`TemplateCell	"TemplateCell[\"Styled\", style] returns a template cell expression with the given cell style. TemplateCell[\"Styled\", style, content] uses the given content for the template cell."
<<EntryDelimiter>>
ClusterIntegration`SGE`SGEEngine	"Internal function of ClusterIntegration."
<<EntryDelimiter>>
Algebra`FiniteFields`PowerListQ	"PowerListQ[f] gives True if the list representing the powers of a primitive element of the field is used to do field arithmetic, False otherwise. Setting PowerListQ[f] = True computes the list if it does not yet exist, and enables arithmetic based on FieldExp and FieldInd. Setting PowerListQ[f] = False disables this arithmetic, but does not destroy the definitions of FieldExp and FieldInd."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RootedEmbedding	"RootedEmbedding[g, v] constructs a rooted embedding of graph g with vertex v as the root. RootedEmbedding[g] constructs a rooted embedding with a center of g as the root."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextGrayCodeSubset	"NextGrayCodeSubset[l, s] constructs the successor of s in the Gray code of set l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MinimumSpanningTree	"MinimumSpanningTree[g] uses Kruskal's algorithm to find a minimum spanning tree of graph g."
<<EntryDelimiter>>
Utilities`URLTools`UncompressGZIPFile	"UncompressGZIPFile[ old, new] unformats the gzip file old into new."
<<EntryDelimiter>>
Utilities`URLTools`RemoveFTPProxy	"RemoveFTPProxy[ ] is deprecated. Use SetInternetProxy[\"FTP\", {}] to disable use of an FTP proxy."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LongestIncreasingSubsequence	"LongestIncreasingSubsequence[p] finds the longest increasing scattered subsequence of permutation p."
<<EntryDelimiter>>
Parallel`Concurrency``dequeued	"dequeued[result] is a process state indicating that the process has been removed from the output queue."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ParameterRanges	"ParameterRanges[ ] gives the intervals over which each the of the parameters (if any) in the default coordinate system may range. ParameterRanges[coordsys] gives the ranges for each of the parameters in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfDerangements	"NumberOfDerangements[n] counts the derangements on n elements, that is, the permutations without any fixed points."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`ExcludeCellsOfStyles	"ExcludeCellsOfStyles is an option of NotebookDiff which specifies that cells with these styles are excluded from the NotebookDiff."
<<EntryDelimiter>>
DiscreteMath`RSolve`UseApart	"UseApart is an obsolete option of RSolve and SeriesTerm. It was used to control the application of Apart prior to power series expansion. MethodGF automatically uses Apart without a second argument and MethodEGF does not use Apart at all."
<<EntryDelimiter>>
Miscellaneous`Calendar`DayOfWeek	"DayOfWeek[{y, m, d}] gives the day of the week for year y, month m, and day d. The default calendar is the usual American calendar, but can be changed with the Calendar option. The date can also be given in {y, m, d, h, m, s} form."
<<EntryDelimiter>>
Miscellaneous`Calendar`Saturday	"Saturday is a day of the week."
<<EntryDelimiter>>
Parallel`Kernels``AppendInitCode	"AppendInitCode[code] is for load-time setup of init code."
<<EntryDelimiter>>
AuthorTools`Printing`ModifyPrintingOption	"ModifyPrintingOption[nb, str] changes the printing option corresponding to str for nb, where each allowed value of str has a rule written for it in the package."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LeviGraph	"LeviGraph returns the unique (8, 3)-cage, a 3-regular graph whose girth is 8."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`IgnoreTypesetCells	"IgnoreTypesetCells is an option that determines whether NotebookRestore and SalvageCells functions should check the syntax of typeset cells or discard them without checking."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexLabelPosition	"VertexLabelPosition is an option that allows the user to place a vertex label in a certain position relative to the vertex. The default position is upper right. VertexLabelPosition can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`NotebookDiff	"NotebookDiff[nb1, nb2] creates a report of the differences between nb1 and nb2."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`EquationTrekkerNonModal	"EquationTrekkerNonModal is the non-modal dialog version of EquationTrekker."
<<EntryDelimiter>>
NumericalMath`InterpolateRoot`InterpolateRoot	"InterpolateRoot[lhs == rhs, {x, x0, x1}] searches for a numerical solution to the equation lhs == rhs, starting with x == x0 and x == x1. It assumes that lhs and rhs are analytic in a region containing x0, x1, and the simple root being sought. InterpolateRoot[f, {x, x0, x1}] searches for a numerical solution to the equation f == 0, starting with x == x0 and x == x1. The option MaxIterations is the maximum number of iterations that will be performed. AccuracyGoal refers to the accuracy of the root rather than the magnitude of the residual at the root. AccuracyGoal -> Automatic means 20 digits less than the value of WorkingPrecision. WorkingPrecision is a suggested upper bound on the precision to use in evaluating the function at values near the root, but greater precision may be used if necessary to achieve the AccuracyGoal. The option ShowProgress (True or False) allows progress to be monitored."
<<EntryDelimiter>>
AuthorTools`Pagination`PaginationNumerals	"PaginationNumerals is an option to Paginate that specifies what kind of numbering to use for the given notebooks. Possible values are Automatic, \"RomanNumerals\", and \"CapitalRomanNumerals\"."
<<EntryDelimiter>>
Calculus`VectorAnalysis`JacobianDeterminant	"JacobianDeterminant[pt] gives the determinate of the Jacobian matrix of the transformation from the default coordinate system to the Cartesian coordinate system at the point pt. JacobianDeterminant[pt, coordsys] gives the determinate of the Jacobian matrix of the transformation from the coordinate system coordsys to the Cartesian coordinate system at the point pt. If pt is not given, the default coordinate variables are used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CoxeterGraph	"CoxeterGraph gives a non-Hamiltonian graph with a high degree of symmetry such that there is a graph automorphism taking any path of length 3 to any other."
<<EntryDelimiter>>
AuthorTools`Common`RemoveCellTags	"RemoveCellTags[nbObj,pat] removes all cell tags from nbObj that match the string pattern pat. RemoveCellTags[nbObj,All] removes every cell tag from every cell in nbObj."
<<EntryDelimiter>>
Utilities`URLTools`URLInformation	Set[MessageName[URLInformation,"obs"],"URLInformation has been removed. Use FetchURLWithHeaders to get the response headers associated with a given URL."]
<<EntryDelimiter>>
Calculus`VectorAnalysis`EllipticCylindrical	"EllipticCylindrical represents the elliptic cylindrical coordinate system with default variables Uu, Vv, and Zz and default parameter value 1. EllipticCylindrical[u, v, z] represents the elliptic cylindrical coordinate system with variables u, v, and z and default parameter value 1. EllipticCylindrical[u, v, z, a] represents the elliptic cylindrical coordinate system with variables u, v, and z and parameter a."
<<EntryDelimiter>>
Calculus`VariationalMethods`NVariationalBound	"NVariationalBound[{f,g}, u[x], {x,xmin,xmax}, ut, {a,a0,amin,amax}, {b,b0,bmin,bmax}, ..., opts] numerically determines the parameters {a,b,...} of a trial function ut[x] that extremize Integrate[f, {x,xmin,xmax}]/Integrate[g, {x,xmin,xmax}] by starting from {a0,b0,...} and evaluating the integrals numerically.  It returns the extremal value of the functional and the optimal values of the parameters. NVariationalBound[{f,g}, u[x,y,...], {{x,xmin,xmax},{y,ymin,ymax},...}, ut, {a,a0,amin,amax}, {b,b0,bmin,bmax}, ..., opts] does the same for more than one independent variable.  If the argument g is absent the functional Integrate[f, {x,xmin,xmax}] is extremized."
<<EntryDelimiter>>
AuthorTools`StyleTools`NotebookInheritanceList	"NotebookInheritanceList[nb] returns a list of style prototypes that affect the display of the given notebook. NotebookInheritanceList[nb, opt] returns all parts of the inheritance that contain a setting for the given option."
<<EntryDelimiter>>
AuthorTools`Experimental`Verbosity	"Verbosity is an option to NotebookSearch that can be set to a positive integer, indicating how much speed to trade for progress messages."
<<EntryDelimiter>>
AuthorTools`Experimental`$BrowserCacheFile	"$BrowserCacheFile is the file path used to store Help Browser information in a format that can be read quickly into the kernel in subsequent sessions with NotebookSearch."
<<EntryDelimiter>>
AuthorTools`StyleTools`StyleSection	"StyleSection[nb, sty] returns the section in which the given style name is first defined."
<<EntryDelimiter>>
AuthorTools`Common`MessageDialog	"MessageDialog[symbol::tag, e1, e2, ...] displays the indicated message in a dialog-like notebook with an OK button."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetEnvironments	"StylesheetEnvironments[nb] returns a list of style environments defined in the given stylesheet. StylesheetEnvironments[nb, sty] returns just those environment names for styles matching the given style pattern."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Brelaz	"Brelaz is a value that the option Algorithm can take when used in the function VertexColoring."
<<EntryDelimiter>>
DemonstrationsTools`WebLink	"Convert selected URL into button. In future will apply special \r\nformatting based on target."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Toroidal	"Toroidal represents the toroidal coordinate system with default variables Uu, Vv, and Pphi and default parameter value 1. Toroidal[u, v, phi] represents the toroidal coordinate system with variables u, v, and phi and default parameter value 1. Toroidal[u, v, phi, a] represents the toroidal coordinate system with variables u, v, phi and parameter a."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeYPrimeJPrimeYPrimeZeros	"BesselJPrimeYPrimeJPrimeYPrimeZeros[nu, l, n] gives a list of the first n zeros of BesselJ'[nu, z] BesselY'[nu, l z] - BesselJ'[nu, l z] BesselY'[nu, z]. BesselJPrimeYPrimeJPrimeYPrimeZeros[nu, l, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
NumericalMath`NLimit`EulerRatio	"EulerRatio is an option to EulerSum, which specifies the parameter to use in the generalized Euler transformation. EulerRatio can be Automatic, a single ratio, or a list of ratios or {ratio, degree + 1} pairs. In the case of a list the various ratios are used successively in iterated Euler transformations."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetVertexLabels	"SetVertexLabels[g, l] assigns the labels in l to vertices of g. If l is shorter than the number of vertices in g, then labels get assigned cyclically. If l is longer than the number of vertices in g, then the extra labels are ignored."
<<EntryDelimiter>>
Parallel`Kernels``kernelQ	"kernelQ[kernel] is the kernel type predicate."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`MixedMode	"MixedMode is an option to SetArithmetic that can be either True or False. It specifies whether mixed-mode arithmetic is to be allowed. The default is False."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Algorithm	"Algorithm is an option that informs functions such as ShortestPath, VertexColoring, and VertexCover about which algorithm to use."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Xx	Set[MessageName[Yy,"usage"],"{Xx,Yy,Zz} are the default Cartesian coordinates."]
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToAdjacencyMatrix	"ToAdjacencyMatrix[g] constructs an adjacency matrix representation for graph g. An option Type that takes on values All or Simple can be used to affect the matrix constructed. Type -> All is the default, and Type -> Simple ignores any self-loops or multiple edges g may have. ToAdjacencyMatrix[g, EdgeWeight] returns edge weights as entries of the adjacency matrix with Infinity representing missing edges."
<<EntryDelimiter>>
AuthorTools`MakeIndex`CleanIndex	"CleanIndex[nb] removes index entries which refer to cell tags that don't exist in nb."
<<EntryDelimiter>>
DiscreteMath`RSolve`MethodGF	"MethodGF is a possible value for the Method option of RSolve. It denotes the method of ordinary generating functions."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomTableau	"RandomTableau[p] constructs a random Young tableau of shape p."
<<EntryDelimiter>>
DiscreteMath`RSolve`ISolve	"ISolve[eqs] solves a Boolean combination of equalities and/or inequalities in a single integer-valued variable. The answer is given as a disjunction of disjoint inclusive inequalities."
<<EntryDelimiter>>
Miscellaneous`WorldNames`Africa	"Africa contains the names of the countries of Africa defined in the WorldData database."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`One	"One is a tag used in several functions to inform the functions that only one object need be considered or only one solution be produced, as opposed to all objects or all solutions."
<<EntryDelimiter>>
Miscellaneous`Dictionary`SpellCheck	"SpellCheck[\"string\"] finds all the words in string not in the $Dictionary and returns the string with these words highlighted in red, together with a list of these words."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`AliquotCycle	"AliquotCycle[n] gives the repeating cycle at the end of the Aliquot sequence of n."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexNumberColor	"VertexNumberColor is an option that can be used in ShowGraph to associate different colors to vertex numbers. Black is the default color. VertexNumberColor can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GrayCodeKSubsets	"GrayCodeKSubsets[l, k] generates k-subsets of l in Gray code order."
<<EntryDelimiter>>
ClusterIntegration`Palette`CIPSetConfiguration	"Set configuration for ClusterIntegration."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DeleteVertex	"DeleteVertex[g, v] deletes a single vertex v from graph g. Here v is a vertex number."
<<EntryDelimiter>>
Miscellaneous`Music`PythagoreanMajor	"PythagoreanMajor is an interval list in which the members of the scale are derived from a sequence of octaves and fifths, where a fifth is the ratio of 3/2 (702 cents) and an octave is the ratio of 2/1 (1200 cents). The scale is built by successive fifth addition and octave subtraction."
<<EntryDelimiter>>
AuthorTools`Common`$Resource	"$Resource is an internal symbol."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SqrtMod	"SqrtMod[n, m] returns the least nonnegative integer from 0 to m-1 whose square is congruent to n modulo m, if such an integer exists, otherwise it returns unevaluated with an error message."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SimpleQ	"SimpleQ[g] yields True if g is a simple graph, meaning it has no multiple edges and contains no self-loops."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexConnectivity	"VertexConnectivity[g] gives the minimum number of vertices whose deletion from graph g disconnects it. VertexConnectivity[g, Cut] gives a set of vertices of minimum size, whose removal disconnects the graph."
<<EntryDelimiter>>
Parallel`Kernels``receive	"receive[kernel, True] waits for a result and returns it.\r\n\treceive[kernel, False] returns $notReady if no result is available immediately.\r\n\tThe result received is wrapped in HoldComplete.\r\n\tIf no evaluation is pending, receive issues a message and returns $Failed."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetCells	"StylesheetCells[nb, sty] returns the cells from Stylesheet[nb] that define the given style or style name pattern. StylesheetCells[nb] returns all the StyleData cells."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NetworkFlow	"NetworkFlow[g, source, sink] returns the value of a maximum flow through graph g from source to sink. NetworkFlow[g, source, sink, Edge] returns the edges in g that have positive flow along with their flows in a maximum flow from source to sink. NetworkFlow[g, source, sink, Cut] returns a minimum cut between source and sink. NetworkFlow[g, source, sink, All] returns the adjacency list of g along with flows on each edge in a maximum flow from source to sink. g can be a directed or an undirected graph."
<<EntryDelimiter>>
SubKernels`RemoteKernels`remoteKernelObject	"remoteKernelObject[method] is the remote kernels class object."
<<EntryDelimiter>>
DiscreteMath`ComputationalGeometry`DelaunayTriangulationQ	"DelaunayTriangulationQ[{{x1,y1},{x2,y2},...,{xn,yn}},val] returns True if the triangulation of the {xi,yi} represented by the vertex adjacency list val is a Delaunay triangulation, and False otherwise. DelaunayTriangulationQ[{{x1,y1}, {x2,y2},...,{xn,yn}},val,hull] takes hull to be the convex hull of the unique points. The val must be such that a point on the hull lists first the hull neighbor that follows the point on a counterclockwise traversal of the hull."
<<EntryDelimiter>>
Geometry`Polytopes`Faces	"Faces[polytope] gives a list of the faces of polytope.  Each face is a list of the numbers of the vertices that comprise that face. To get the number of faces of polytope use NumberOfFaces[polytope]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OrbitRepresentatives	"OrbitRepresentatives[pg, x] returns a representative of each orbit of x induced by the action of the group pg on x. pg is assumed to be a set of permutations on the first n natural numbers and x is a set of functions whose domain is the first n natural numbers. Each function in x is specified as an n-tuple."
<<EntryDelimiter>>
DiscreteMath`RSolve`PrecisionHS	"PrecisionHS is an obsolete option of RSolve, HSolve, GeneratingFunction, and ExponentialGeneratingFunction. Now all solutions are exact as they are with Solve and DSolve."
<<EntryDelimiter>>
Parallel`Kernels``$FEQ	"$FEQ is True, if we are running under the frontend."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RegularQ	"RegularQ[g] yields True if g is a regular graph."
<<EntryDelimiter>>
SubKernels`LocalKernels`LaunchLocal	"LaunchLocal[template, n, opts] launches n kernels on the local host using LinkLaunch; opts is passed as options to LinkLaunch."
<<EntryDelimiter>>
AuthorTools`Common`VersionCheck	"VersionCheck[v] aborts the current evaluation if $VersionNumber is less than v, and notifies the user that they need a more recent copy of Mathematica."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`UpperLeft	"UpperLeft is a value that options VertexNumberPosition, VertexLabelPosition, and EdgeLabelPosition can take on in ShowGraph."
<<EntryDelimiter>>
Geometry`Polytopes`NumberOfFaces	"NumberOfFaces[polytope] gives the number of faces of polytope."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShortestPathSpanningTree	"ShortestPathSpanningTree[g, v] constructs a shortest-path spanning tree rooted at v, so that a shortest path in graph g from v to any other vertex is a path in the tree. An option Algorithm that takes on the values Automatic, Dijkstra, or BellmanFord is provided. This allows a choice between Dijkstra's algorithm and the Bellman-Ford algorithm. The default is Algorithm -> Automatic. In this case, depending on whether edges have negative weights and depending on the density of the graph, the algorithm chooses between Bellman-Ford and Dijkstra."
<<EntryDelimiter>>
Miscellaneous`Calendar`EasterSunday	"EasterSunday[year] computes the date of Easter Sunday in the Gregorian calendar according to the Gregorian calculation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexNumber	"VertexNumber is an option that can take on values True or False. This can be used in ShowGraph to display or suppress vertex numbers. By default, the vertex numbers are hidden. VertexNumber can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJYJYZeros	"BesselJYJYZeros[nu, l, n] gives a list of the first n zeros of BesselJ[nu, z] BesselY[nu, l z] - BesselJ[nu, l z] BesselY[nu, z]. BesselJYJYZeros[nu, l, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeYJYPrimeZeros	"BesselJPrimeYJYPrimeZeros[nu, l, n] gives a list of the first n zeros of BesselJ'[nu, z] BesselY[nu, l z] - BesselJ[nu, l z] BesselY'[nu, z]. BesselJPrimeYJYPrimeZeros[nu, l, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
Parallel`Kernels``dead	"dead is a tag to signal a kernel failure."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Zz	"{Xx,Yy,Zz} are the default Cartesian coordinates; {Rr,Ttheta,Zz} are the default Cylindrical coordinates; {Uu,Vv,Zz} are the default coordinates for the ParabolicCylindrical, EllipticCylindrical, and Bipolar coordinate systems."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`KSetPartitions	"KSetPartitions[set, k] returns the list of set partitions of set with k blocks. KSetPartitions[n, k] returns the list of set partitions of {1, 2, ..., n} with k blocks. If all set partitions of a set are needed, use the function SetPartitions."
<<EntryDelimiter>>
Statistics`DataManipulation`CategoryLists	"CategoryLists[{x1, x2, ...}, {e1, e2, ...}] gives lists of the elements in the data {x1, x2, ...} that match each of the ei. CategoryLists[{x1, x2, ...}, {{e11, e12, ...}, {e21, e22, ...}, ...}] gives lists of the elements in the data {x1, x2, ...} that match any of the elements in each list {ei1, ei2, ...}. CategoryLists[{{x1, y1}, {x2, y2}, ...}, {xe1, xe2, ...}, {ye1, ye2, ...}] and CategoryLists[{{x1, y1}, {x2, y2}, ...}, {{xe11, xe12, ...}, {xe21, xe22, ...}, ...}, {{ye11, ye12, ...}, {ye21, ye22, ...}, ...}] both give 2-dimensional arrays of category lists for the bivariate data {{x1, y1}, {x2, y2}, ...}. In general, CategoryLists gives a p-dimensional array of category lists for p-variate data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Runs	"Runs[p] partitions p into contiguous increasing subsequences."
<<EntryDelimiter>>
Parallel`Concurrency``$Queue	"$Queue is the input queue of processes waiting to be evaluated."
<<EntryDelimiter>>
AuthorTools`MakeCategories`MakeBrowserCategories	"MakeBrowserCategories[nbfile, format] creates a browser categories file in the same directory as nbfile, and opens it in the front end."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DerangementQ	"DerangementQ[p] tests whether permutation p is a derangement, that is, a permutation without a fixed point."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphUnion	"GraphUnion[g1, g2, ...] constructs the union of graphs g1, g2, and so forth. GraphUnion[n, g] constructs n copies of graph g, for any nonnegative integer n."
<<EntryDelimiter>>
DemonstrationsTools`UpdateManipulateOutputs	""
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`$FirstBilateralStyles	"$FirstBilateralStyles gives the default setting for the option FirstBilateralStyles in MakeBilateral."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SmallestCyclicGroupGraph	"SmallestCyclicGroupGraph returns a smallest nontrivia al graph whose automorphism group is cyclic."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherGamma	"ButcherGamma[tree] gives the density of the tree tree. This is also the reciprocal of the right-hand side of the order condition imposed by tree."
<<EntryDelimiter>>
Calculus`VectorAnalysis`CoordinatesToCartesian	"CoordinatesToCartesian[pt] gives the Cartesian coordinates of the point pt given in the default coordinate system. CoordinatesToCartesian[pt, coordsys] gives the Cartesian coordinates of the point given in the coordinate system coordsys."
<<EntryDelimiter>>
AuthorTools`Common`ProgressDialogSetSubcaption	"ProgressDialogSetSubcaption[nb, subcaption] sets the subcaption in the given progress dialog to the desired string."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FerrersDiagram	"FerrersDiagram[p] draws a Ferrers diagram of integer partition p."
<<EntryDelimiter>>
AuthorTools`StyleTools`StylesheetQ	"StylesheetQ[nb] returns True if the given notebook file, object, or expression contains any StyleData cells, and False otherwise."
<<EntryDelimiter>>
DocumentationSearch`DocumentationIndexes	"DocumentationIndexes[] returns the index directories of documentation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`InversePermutation	"InversePermutation[p] yields the multiplicative inverse of permutation p."
<<EntryDelimiter>>
NumericalMath`ComputerArithmetic`ExponentRange	"ExponentRange is an option to SetArithmetic and specifies the range of exponents that are to be allowed. The exponent range must be of the form {minexp, maxexp} where -1000 <= minexp < maxexp <= 1000.  The default ExponentRange is {-50, 50}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Equivalences	"Equivalences[g, h] lists the vertex equivalence classes between graphs g and h defined by their vertex degrees. Equivalences[g] lists the vertex equivalences for graph g defined by the vertex degrees. Equivalences[g, h, f1, f2, ...] and Equivalences[g, f1, f2, ...] can also be used, where f1, f2, ... are functions that compute other vertex invariants. It is expected that for each function fi, the call fi[g, v] returns the corresponding invariant at vertex v in graph g. The functions f1, f2, ... are evaluated in order, and the evaluation stops either when all functions have been evaluated or when an empty equivalence class is found. Three vertex invariants, DegreesOf2Neighborhood, NumberOf2Paths, and Distances are Combinatorica functions and can be used to refine the equivalences."
<<EntryDelimiter>>
AuthorTools`Common`CellsSelectedQ	"CellsSelectedQ[nb] returns True if the selection in the indicated notebook is one or more cells, and False otherwise. CellsSelectedQ[nb, {min, max}] checks that the number of selected cells is in the indicated range."
<<EntryDelimiter>>
Miscellaneous`Calendar`DateQ	"DateQ[date] indicates whether date is valid in the current calendar. The Calendar option may be used to specify which calendar is used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationQ	"PermutationQ[p] yields True if p is a list representing a permutation and False otherwise."
<<EntryDelimiter>>
AuthorTools`Common`IncludeCellPage	"IncludeCellIndex is an option that determines whether the page on which a cell ends should be included in the output."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Laplacian	"Laplacian[f] gives the Laplacian of the scalar- or vector-valued function f in the default coordinate system. Laplacian[f, coordsys] gives the Laplacian of f in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Derangements	"Derangements[p] constructs all derangements of permutation p."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherRowConditions	"ButcherRowConditions[p, s] gives the row simplifying conditions up to and including order p for s stages. ButcherRowConditions[p] gives the row simplifying conditions in stage-independent tensor notation. The option RungeKuttaMethod controls the form of the result."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselYZeros	"BesselYZeros[nu, n] gives a list of the first n zeros of the order nu BesselY function. BesselYZeros[nu, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
Miscellaneous`Geodesy`Radius	"Radius is an option for SphericalDistance, which sets the radius of the sphere defining the planet, in km. The default is for the Earth, for the authalic sphere based on the WGS-84 standard spheroid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexConnectivityGraph	"VertexConnectivityGraph[g] returns a directed graph that contains an edge corresponding to each vertex in g and in which edge disjoint paths correspond to vertex disjoint paths in g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Backtrack	"Backtrack[s, partialQ, solutionQ] performs a backtrack search of the state space s, expanding a partial solution so long as partialQ is True and returning the first complete solution, as identified by solutionQ."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`CompareMethods	"CompareMethods[sys, refsol, methods, opts]\r\nTakes the system sys specified as an NDSolveProblem and compares\r\nvarious methods with the reference solution refsol. NDSolve options\r\ncan be specified as opts."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FranklinGraph	"FranklinGraph returns a 12-vertex graph that represents a 6-chromatic map on the Klein bottle. It is the sole counterexample to Heawood's map coloring conjecture."
<<EntryDelimiter>>
Utilities`MemoryConserve`$MemoryIncrement	"$MemoryIncrement sets the amount by which memory must increase for MemoryConserve to call Share[]."
<<EntryDelimiter>>
NumberTheory`Frobenius`FrobeniusInstance	"FrobeniusInstance[{a1, ..., an}, b] gives a solution of the Frobenius equation a1 x1+...+an xn==b. If there are no solutions gives an empty list."
<<EntryDelimiter>>
ClusterIntegration`PBS`PBSCloseJob	"Internal function of ClusterIntegration. Use ClusterCloseSlaves to close compute nodes."
<<EntryDelimiter>>
AuthorTools`StyleTools`SetStyleOptions	"SetStyleOptions[nb, sty, opts] sets the options for a style in the stylesheet, returning an altered stylesheet."
<<EntryDelimiter>>
AuthorTools`MakeIndex`RemoveIndex	"RemoveIndex[nb] removes the cell tags and index entries from nb."
<<EntryDelimiter>>
Utilities`URLTools`FileFilters	"FileFilters is an option of FetchURL that sets up pairs {patt, fun}. Each of these apply the function 'fun' to the file if the name matches patt. This can be used for decompressing files."
<<EntryDelimiter>>
DiscreteMath`RSolve`Even	"Even[n] is equivalent to EvenQ[n] except that it remains unevaluated when n is not numerical."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PermutationWithCycle	"PermutationWithCycle[n, {i, j, ...}] gives a size-n permutation in which {i, j, ...} is a cycle and all other elements are fixed points."
<<EntryDelimiter>>
Miscellaneous`Calendar`Thursday	"Thursday is a day of the week."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OctahedralGraph	"OctahedralGraph returns the graph corresponding to the octahedron, a Platonic solid."
<<EntryDelimiter>>
AuthorTools`Printing`RunningHead	"RunningHead[nb] returns a TextData expression containing a counter box built from the content of Section style cells in the notebook nb. RunningHeads[nb,style] uses the content of cells with the specified style. RunningHead[nb,style,target] pastes the counter box at the current insertion point in the notebook target."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ToOrderedPairs	"ToOrderedPairs[g] constructs a list of ordered pairs representing the edges of the graph g. If g is undirected each edge is interpreted as two ordered pairs. An option called Type that takes on values Simple or All can be used to affect the constructed representation. Type -> Simple forces the removal of multiple edges and self-loops. Type -> All keeps all information and is the default option."
<<EntryDelimiter>>
Parallel`Concurrency``newEvaluation	"newEvaluation[cmd, (sched)] creates a new evaluation object."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Distribution	"Distribution[l, set] lists the frequency of each element of set in list l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GetEdgeLabels	"GetEdgeLabels[g] returns the list of labels of the edges of g. GetEdgeLabels[g, es] returns the list of labels in graph g of the edges in es."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`IcosahedralGraph	"IcosahedralGraph returns the graph corresponding to the icosahedron, a Platonic solid."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Strong	"Strong is an option to ConnectedQ that seeks to determine if a directed graph is strongly connected."
<<EntryDelimiter>>
LightweightGridClient`RemoteServicesLinks	"RemoteServicesLinks[] returns the list of all Lightweight Grid kernels that are currently open."
<<EntryDelimiter>>
DemonstrationsTools`CellInf	"Utility function for returning CellInformation packet data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SymmetricGroupIndex	"SymmetricGroupIndex[n, x] returns the cycle index of the symmetric group on n symbols, expressed as a polynomial in x[1], x[2], ..., x[n]."
<<EntryDelimiter>>
Parallel`Kernels``KernelName	"KernelName[kernel] gives the name (usually machine name) of the given subkernel.\r\n\tKernelName[kernel]=name sets the name."
<<EntryDelimiter>>
Utilities`CleanSlate`CleanSlate	"CleanSlate[] purges all symbols and their values in all contexts that have been added to the context search path ($ContextPath), since the CleanSlate package was read in. This includes user-defined symbols (in the Global` context) as well as any packages that may have been read in. It also removes most, but possibly not all, of the additional rules for System symbols that these packages may have defined. It also clears the In[] and Out[] values, and resets the $Line number, so new input begins as In[1]. CleanSlate[\"Context1`\",\"Context2`\"] purges only the listed contexts."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HamiltonianQ	"HamiltonianQ[g] yields True if there exists a Hamiltonian cycle in graph g, or in other words, if there exists a cycle that visits each vertex exactly once."
<<EntryDelimiter>>
Graphics`ArgColors`ColorCircle	"ColorCircle[r, (light:1)] gives a color value whose hue is proportional to r (mod 2Pi) with lightness light."
<<EntryDelimiter>>
AuthorTools`MakeCategories`GetBrowserCategory	"GetBrowserCategory[nb|proj, format] returns the BrowserCategory expression for the given notebook or project in the given format. Note that the resulting expression may contain references to CellTags that don't exist yet, and other information in TaggingRules that is only used by MakeBrowserCategories."
<<EntryDelimiter>>
SubKernels`LocalKernels`localKernelObject	"localKernelObject[method] is the local kernels class object."
<<EntryDelimiter>>
AuthorTools`MakeContents`ContentsFileName	"ContentsFileName is an option to MakeContents that specifies the name of the generated contents file."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`SqrtModList	"SqrtModList[n, m] gives the complete list of integers from 0 to m-1 whose squares are congruent to n modulo m."
<<EntryDelimiter>>
Algebra`FiniteFields`FieldIrreducible	"FieldIrreducible[f, s] gives the irreducible polynomial in symbol s associated with the field f."
<<EntryDelimiter>>
Utilities`Benchmark`BenchmarkReport	"BenchmarkReport[] runs the MathematicaMark6 benchmark and produces a comparison report in a separate notebook if a front end is available. BenchmarkReport[\"system1\", \"system2\", ..., data1, data2, ...] produces a custom comparison report using the specified systems from $BenchmarkSystems and raw data. The benchmark takes about one minute to run on the reference system."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`DominatingIntegerPartitionQ	"DominatingIntegerPartitionQ[a, b] yields True if integer partition a dominates integer partition b, that is, the sum of a size-t prefix of a is no smaller than the sum of a size-t prefix of b for every t."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`MaxTerms	"MaxTerms specifies the maximum size of terms computed in the Aliquot sequence in AliquotSequence or AliquotCycle. Its default value is Infinity."
<<EntryDelimiter>>
Geometry`Polytopes`Volume	"Volume[polytope] gives the volume of polytope, when the edges of polytope have unit length."
<<EntryDelimiter>>
NumericalMath`Butcher`ContinuousExtension	"ContinuousExtension is an option to RungeKuttaOrderConditions and related functions specifying whether to generate order conditions for continuous extensions of Runge-Kutta methods."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LexicographicPermutations	"LexicographicPermutations[l] constructs all permutations of list l in lexicographic order."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherTreeSimplify	"ButcherTreeSimplify[p, eta, xi] gives the set of trees through order p that are not reduced by Butcher's simplifying assumptions, assuming that the quadrature conditions through order p, the row simplifying conditions through order eta, and the column simplifying conditions through order xi all hold. The result is grouped by order, starting with the first non-vanishing trees."
<<EntryDelimiter>>
Utilities`URLTools`FetchURLWithHeaders	"FetchURLWithHeaders[ url, new] copies the file referenced by url to the file new on the local machine.  FetchURLWithHeaders[ url ] copies the file creating a new filename.  FetchURLWithHeaders returns a list of two elements: the name of the temporary file used on the local machine and the HTTP header fields."
<<EntryDelimiter>>
LinearAlgebra`Orthogonalization`GramSchmidt	"GramSchmidt[vectors] is an obsolete function. Use Orthogonalize[vectors] instead."
<<EntryDelimiter>>
AuthorTools`Common`ExtendNotebookFunction	"ExtendNotebookFunction[function, nb, args] is a convenience that defines function[nb, args] when nb is a notebook file, project file, or project notebook, in terms of function[_NotebookObject, args]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GrayCodeSubsets	"GrayCodeSubsets[l] constructs a binary reflected Gray code on set l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomSetPartition	"RandomSetPartition[set] returns a random set partition of set. RandomSetPartition[n] returns a random set partition of the first n natural numbers."
<<EntryDelimiter>>
Integration`NIntegrateUtilities`NIntegrateSamplingPoints	"NIntegrateSamplingPoints[NIntegrate[___]] plots the sampling points for one-, two-, and three-dimensional integrals."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RemoveSelfLoops	"RemoveSelfLoops[g] returns the graph obtained by deleting self-loops in g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MaximumSpanningTree	"MaximumSpanningTree[g] uses Kruskal's algorithm to find a maximum spanning tree of graph g."
<<EntryDelimiter>>
NumericalMath`BesselZeros`BesselJPrimeZeros	"BesselJPrimeZeros[nu, n] gives a list of the first n zeros of the derivative of the order nu BesselJ function, for nu >= -1. BesselJPrimeZeros[nu, {m, n}] gives a list of the mth through the nth zeros."
<<EntryDelimiter>>
ClusterIntegration`XGRID`XGRIDLaunchMathJobs	"Internal function of ClusterIntegration. Use to launch math jobs on remote Xgrid clusters."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomSubset	"RandomSubset[l] creates a random subset of set l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfGraphs	"NumberOfGraphs[n] returns the number of nonisomorphic undirected graphs with n vertices. NumberOfGraphs[n, m] returns the number of nonisomorphic undirected graphs with n vertices and m edges."
<<EntryDelimiter>>
Parallel`Parallel``AddInitCode	"AddInitCode[code] sends code to running subkernels and uses AppendInitCode to remember it."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PathConditionGraph	"The usage of PathConditionGraph is obsolete. This functionality is no longer supported in Combinatorica."
<<EntryDelimiter>>
Parallel`Preferences`debugQ	"debugQ[] returns True, if debug mode should be enabled."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`Unitary	"Unitary is an option value for the SumOfFactorsType option of AliquotSequence, AliquotCycle, and SumOfFactors, specifying that only divisors d of n except n are to be added such that d and n/d are coprime."
<<EntryDelimiter>>
DiscreteMath`RSolve`PrecisionST	"PrecisionST is an obsolete option of RSolve and SeriesTerm. Now all results are exact as they are with Solve and DSolve."
<<EntryDelimiter>>
AuthorTools`MakeIndex`IndexingDialog	"IndexingDialog[] opens a new dialog for adding or editing index entries."
<<EntryDelimiter>>
AuthorTools`MakeIndex`MakeIndexNotebook	"MakeIndexNotebook[nb|proj, format] returns a Notebook expression containing an index for the specified notebook or project in the given format."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NextKSubset	"NextKSubset[l, s] gives the k-subset of list l, following the k-subset s in lexicographic order."
<<EntryDelimiter>>
Graphics`Arrow`HeadLength	"HeadLength is an obsolete option for the Arrow primitive.  It is used when HeadShape -> Automatic. It describes the length of the arrowhead, scaled according to HeadScaling."
<<EntryDelimiter>>
Parallel`VirtualShared``SendBack	"SendBack[expr] keeps expr unevaluated on the master kernel and evaluates it normally on the slave kernels."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherQuadratureConditions	"ButcherQuadratureConditions[p, s] gives the quadrature conditions up to and including order p for s stages. ButcherQuadratureConditions[p] gives the quadrature conditions in stage-independent tensor notation. The option RungeKuttaMethod controls the form of the result."
<<EntryDelimiter>>
Miscellaneous`Music`CentsToHertz	"CentsToHertz[ilist] converts a list of intervals measured in cents to a list of frequencies measured in Hertz, beginning at 440 Hertz. CentsToHertz[ilist, f] gives a list of frequencies beginning at frequency f."
<<EntryDelimiter>>
Parallel`Parallel``parallelizeSystemValues	"parallelizeSystemValues[s] exports definitions of symbol s."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MultiplicationTable	"MultiplicationTable[l, f] constructs the complete transition table defined by the binary relation function f on the elements of list l."
<<EntryDelimiter>>
NumericalMath`Approximations`GeneralRationalInterpolation	"GeneralRationalInterpolation[{x, y}, {t, m, k}, xvar, {t1, t2, ..., tmk1}], (opts)] gives the rational interpolant to the function y[x] on the interval t0 < t < t1, where x and y are functions of t, which parametrically define y[x], m and k are the degrees of the numerator and denominator, respectively, and xvar is the variable to be used for x in the approximation, and {t1, t2, ..., tmk1} is a list of m+k+1 abscissas (values of t) of the interpolation points. An alternative form is GeneralRationalInterpolation[{x, y}, {t, m, k}, xvar, {t, t0, t1}, (opts)], which specifies the list of abscissas implicitly: the abscissas come from the interval t0 < t < t1."
<<EntryDelimiter>>
Miscellaneous`Music`MeanMinor	"MeanMinor is an interval list derived from the MeanChromatic scale."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TreeQ	"TreeQ[g] yields True if graph g is a tree."
<<EntryDelimiter>>
NumericalMath`NIntegrateInterpolatingFunct`NIntegrateInterpolatingFunction	"NIntegrateInterpolatingFunction[f, {x, xmin, xmax}] gives a numerical approximation to the integral of f with respect to x over the interval xmin to xmax. If f involves InterpolatingFunction objects the domain of integration is broken up at the interpolation nodes prior to being passed on to NIntegrate for evaluation."
<<EntryDelimiter>>
NumericalMath`GaussianQuadrature`GaussianQuadratureError	"GaussianQuadratureError[n, f, a, b, prec] gives the leading term in the error in the elementary n-point Gaussian quadrature formula to prec digits precision for the function f on an interval from a to b. The argument prec is optional."
<<EntryDelimiter>>
Calculus`VariationalMethods`EulerEquations	"EulerEquations[f, u[x], x] or EulerEquations[f, u[x,y,...], {x,y,...}] returns the Euler-(Lagrange) equation obeyed by u[x] for the functional defined by f.  EulerEquations[f, {u[x,y,...],v[x,y,...], ...}, {x,y,...}] returns a list of Euler equations obeyed by the functions {u[x,y,...], v[x,y,...], ...}."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ChangeEdges	"ChangeEdges[g, e] replaces the edges of graph g with the edges in e. e can have the form {{s1, t1}, {s2, t2}, ...} or the form { {{s1, t1}, gr1}, {{s2, t2}, gr2}, ...}, where {s1, t1}, {s2, t2}, ... are endpoints of edges and gr1, gr2, ... are graphics information associated with edges."
<<EntryDelimiter>>
Utilities`Benchmark`Benchmark	"Benchmark[] runs the MathematicaMark6 benchmark and returns raw data as the result. The benchmark takes about one minute to run on the reference system."
<<EntryDelimiter>>
NumericalMath`TrigFit`TrigFit	"TrigFit[data, n, x] gives the least squares trigonometric fit to data much as Fit[data, {1, Cos[x], Sin[x], Cos[2x], Sin[2x, ... Cos[n x], Sin[n x]}, x] would do, except that the calculation is done using Fourier[ ]. The data must be a list of numbers sampled at equally spaced points over one period starting at 0. TrigFit[data, n, {x, L}] can be used if the fundamental period is not 2Pi. TrigFit[data, n, {x, x0, x1}] can be used for data starting at x0 and ending at the sample point immediately before x1."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`Type	"Type is an obsolete option of NewtonCotesWeights and NewtonCotesError, replaced by QuadratureType."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeStyle	"EdgeStyle is an option that allows the user to associate different sizes and shapes to edges. A line segment is the default edge. EdgeStyle can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Div	"Div[f] gives the divergence of the vector-valued function f in the default coordinate system. Div[f, coordsys] gives the divergence of f in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`HasseDiagram	"HasseDiagram[g] constructs a Hasse diagram of the relation defined by directed acyclic graph g."
<<EntryDelimiter>>
ClusterIntegration`CCS`CCSMathBatchJob	"Internal functions. Use the Batch Submission Job palette to submit batch jobs."
<<EntryDelimiter>>
AuthorTools`Experimental`PartialMatch	"PartialMatch is an option to ItemLookup that determines whether to look inside item names for the given string."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MinimumVertexCover	"MinimumVertexCover[g] finds a minimum vertex cover of graph g. For bipartite graphs, the function uses the polynomial-time Hungarian algorithm. For everything else, the function uses brute force."
<<EntryDelimiter>>
AuthorTools`ExportNotebook`ExportDirectory	"ExportDirectory is an option for ExportNotebook that determines the location of the generated files. The default value of Automatic uses the directory containing the given notebook."
<<EntryDelimiter>>
DiscreteMath`RSolve`PowerSum	"PowerSum[expr, {z, n, n0:0}] gives Sum[expr z^n, {n, n0, Infinity}]. If a function representing a sequence of the form a[n] is in expr, the name Gf[a][z] is used by PowerSum to denote Sum[a[n] z^n, {n, 0, Infinity}]. PowerSum is threaded over lists and equations."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ConfocalEllipsoidal	"ConfocalEllipsoidal represents the confocal ellipsoidal coordinate system with default variables Llambda, Mmu, and Nnu and default parameter values 3, 2, and 1. ConfocalEllipsoidal[lambda, mu, nu] represents the confocal ellipsoidal coordinate system with variables lambda, mu, and nu and default parameter values 3, 2, and 1. ConfocalEllipsoidal[lambda, mu, nu, a, b, c] represents the confocal ellipsoidal coordinate system with variables lambda, mu, and nu and parameters a, b, and c."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Turan	"Turan[n, p] constructs the Turan graph, the extremal graph on n vertices that does not contain CompleteGraph[p]."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`AliquotSequence	"AliquotSequence[n] gives the Aliquot sequence {s_0, s_1, s_2, ..., s_k} of n, where s_0 = n and s_(i+1) is the sum of factors of s_i other than s_i. The sequence either terminates with s_k = 0, with s_k = s_j for some j<k, or tends to infinity, in which case it will run forever. (Although it has not been proven that the Aliquot sequence of n ever grows to infinity, it is strongly suspected that it does for certain n. The smallest number for which the fate of the Aliquot sequence is unknown is n=276.)"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BipartiteMatching	"BipartiteMatching[g] gives the list of edges associated with a maximum matching in bipartite graph g. If the graph is edge weighted, then the function returns a matching with maximum total weight."
<<EntryDelimiter>>
Parallel`V2``LaunchSlave	"LaunchSlave[] has been superseded by LaunchKernel[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`SetGraphOptions	"SetGraphOptions[g, opts] returns g with the options opts set. SetGraphOptions[g, {v1, v2, ..., vopts}, gopts] returns the graph with the options vopts set for vertices v1, v2, ... and the options gopts set for the graph g. SetGraphOptions[g, {e1, e2,..., eopts}, gopts], with edges e1, e2,..., works similarly. SetGraphOptions[g, {{elements1, opts1}, {elements2, opts2},...}, opts] returns g with the options opts1 set for the elements in the sequence elements1, the options opts2 set for the elements in the sequence elements2, and so on. Here, elements can be a sequence of edges or a sequence of vertices. A tag that takes on values One or All can also be passed in as an argument before any options. The default value of the tag is All and it is useful if the graph has multiple edges. It informs the function about whether all edges that connect a pair of vertices are to be affected or only one edge is affected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`BipartiteQ	"BipartiteQ[g] yields True if graph g is bipartite."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`KnightsTourGraph	"KnightsTourGraph[m, n] returns a graph with m*n vertices in which each vertex represents a square in an m x n chessboard and each edge corresponds to a legal move by a knight from one square to another."
<<EntryDelimiter>>
Parallel`V2``ClearSlaves	"ClearSlaves[] has been superseded by ClearKernels[]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankBinarySubset	"RankBinarySubset[l, s] gives the rank of subset s of set l in the ordering of subsets of l, obtained by interpreting these subsets as binary string representations of integers."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MaximumClique	"MaximumClique[g] finds a largest clique in graph g. MaximumClique[g, k] returns a k-clique, if such a thing exists in g; otherwise it returns {}."
<<EntryDelimiter>>
NumericalMath`NewtonCotes`NewtonCotesError	"NewtonCotesError[n, f, a, b] gives the error in the elementary n point Newton-Cotes quadrature formula for the function f on an interval from a to b. NewtonCotesError has the option QuadratureType, which can be Open or Closed."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherTreeQ	"ButcherTreeQ[tree] tests for valid syntax of the tree or trees tree."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ConstructTableau	"ConstructTableau[p] performs the bumping algorithm repeatedly on each element of permutation p, resulting in a distinct Young tableau."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfDirectedGraphs	"NumberOfDirectedGraphs[n] returns the number of nonisomorphic directed graphs with n vertices. NumberOfDirectedGraphs[n, m] returns the number of nonisomorphic directed graphs with n vertices and m edges."
<<EntryDelimiter>>
AuthorTools`StyleTools`StyleInheritanceList	"StyleInheritanceList[nb, sty] returns a list of style prototypes that affect the display of the given style in the given notebook. StyleInheritanceList[nb, sty, opt] returns all parts of the inheritance that contain a setting for the given option."
<<EntryDelimiter>>
Parallel`Kernels``LaunchDefaultKernels	"LaunchDefaultKernels[] launches kernels if necessary and\r\npossible given the default configuration admits kernels. Returns True, if at least two kernels\r\nare running, False otherwise."
<<EntryDelimiter>>
Geometry`Polytopes`NumberOfEdges	"NumberOfEdges[polytope] gives the number of edges of polytope."
<<EntryDelimiter>>
NumberTheory`Ramanujan`RamanujanTauGeneratingFunction	"RamanujanTauGeneratingFunction[x] gives the generating function of the Ramanujan tau function."
<<EntryDelimiter>>
NumericalMath`GaussianQuadrature`GaussianQuadratureWeights	"GaussianQuadratureWeights[n, a, b, prec] gives a list of the pairs {abscissa, weight} to prec digits precision for the elementary n-point Gaussian quadrature formula for quadrature on the interval a to b. The argument prec is optional."
<<EntryDelimiter>>
AuthorTools`Common`NotebookFileOptions	"NotebookFileOptions[nb] returns a list of the notebook options read from from the saved notebook nb."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Polya	"Polya[g, m] returns the polynomial giving the number of colorings, with m colors, of a structure defined by the permutation group g. Polya is obsolete; use OrbitInventory instead."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CompleteKaryTree	"CompleteKaryTree[n, k] returns a complete k-ary tree on n vertices."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TransitiveQ	"TransitiveQ[g] yields True if graph g defines a transitive relation."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TriangleInequalityQ	"TriangleInequalityQ[g] yields True if the weights assigned to the edges of graph g satisfy the triangle inequality."
<<EntryDelimiter>>
Parallel`Concurrency``ProcessState	"ProcessState[pid] gives the queueing state of pid."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`StepDataPlot	"StepDataPlot[sols, opts] plots the step sizes used in\r\nthe NDSolve solutions sols."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`LineGraph	"LineGraph[g] constructs the line graph of graph g."
<<EntryDelimiter>>
Parallel`Concurrency``Scheduling	"Scheduling->data is an option of ParallelSubmit[] to specify scheduling info that may be used by the queue or scheduler."
<<EntryDelimiter>>
Miscellaneous`Calendar`Monday	"Monday is a day of the week."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ButterflyGraph	"ButterflyGraph[n] returns the n-dimensional butterfly graph, a directed graph whose vertices are pairs (w, i), where w is a binary string of length n and i is an integer in the range 0 through n and whose edges go from vertex (w, i) to (w', i+1), if w' is identical to w in all bits with the possible exception of the (i+1)th bit. Here bits are counted left to right. An option VertexLabel, with default setting False, is allowed. When this option is set to True, vertices are labeled with strings (w, i)."
<<EntryDelimiter>>
AuthorTools`MakeBilateralCells`$RestBilateralStyles	"$RestBilateralStyles gives the default setting for the option RestBilateralStyles in MakeBilateral."
<<EntryDelimiter>>
NumericalMath`EquationTrekker`TrekData	"TrekData[data] represents the data which is shown as a single path or set of points in the EquationTrekker.  By default, only the initial conditions are shown."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Curl	"Curl[f] gives the curl of the vector-valued function f in the default coordinate system. Curl[f, coordsys] gives the curl of f in the coordinate system coordsys."
<<EntryDelimiter>>
Parallel`Kernels``kernel	"kernel[...] is the data type for kernels."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`PrimeFactorList	"PrimeFactorList[n] returns the list of prime factors of n for rational n, including -1 if n is negative."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AntiSymmetricQ	"AntiSymmetricQ[g] yields True if the adjacency matrix of g represents an anti-symmetric binary relation."
<<EntryDelimiter>>
Statistics`DataManipulation`DropNonNumeric	"DropNonNumeric[data] drops elements or rows that contain non-numeric elements in data."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromCycles	"FromCycles[{c1, c2, ...}] gives the permutation that has the given cycle structure."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RGFs	"RGFs[n] lists all restricted growth functions on the first n natural numbers in lexicographic order."
<<EntryDelimiter>>
NumberTheory`NumberTheoryFunctions`ClassNumber	"ClassNumber[d] gives the number of inequivalent quadratic forms of discriminant d, where d is a fundamental discriminant."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FindCycle	"FindCycle[g] finds a list of vertices that define a cycle in graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`TableauxToPermutation	"TableauxToPermutation[t1, t2] constructs the unique permutation associated with Young tableaux t1 and t2, where both tableaux have the same shape."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Cut	"Cut is a tag that can be used in a call to NetworkFlow to tell it to return the minimum cut."
<<EntryDelimiter>>
Parallel`V2``ParallelEvaluate	"ParallelEvaluate[expr, f, ...] has been superseded by ParallelCombine[f, expr, ...].\r\n\tParallelEvaluate[expr] has been superseded by Parallelize[expr]."
<<EntryDelimiter>>
ClusterIntegration`XGRID`XGRIDEngine	"Internal function of ClusterIntegration. Use to find and set the default Xgrid cluster."
<<EntryDelimiter>>
AuthorTools`NotebookDiff`IgnoreContentStructure	"IgnoreContentStructure is an option to NotebookDiff which specifies whether to discard all structure from each cell's content, keeping only strings."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`FromAdjacencyLists	"FromAdjacencyLists[l] constructs an edge list representation for a graph from the given adjacency lists l, using a circular embedding. FromAdjacencyLists[l, v] uses v as the embedding for the resulting graph. An option called Type that takes on the values Directed or Undirected can be used to affect the type of graph produced. The default value of Type is Undirected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`OrientGraph	"OrientGraph[g] assigns a direction to each edge of a bridgeless, undirected graph g, so that the graph is strongly connected."
<<EntryDelimiter>>
AuthorTools`Common`OptionValues	"OptionValues[opt] can be set to a list of possible option settings which are presented by SetOptionsDialog[f, opt]. OptionValues[f,opt] can store different groups of values for the same option used by several functions."
<<EntryDelimiter>>
AuthorTools`Experimental`GetBrowserLookupTable	"Read the browser item cache if one exists, or run RebuildBrowserLookupTable[] if not."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Strings	"Strings[l, n] constructs all possible strings of length n from the elements of list l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Greedy	"Greedy is a value that the option Algorithm can take in calls to functions such as VertexCover, telling the function to use a greedy algorithm."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`EdgeLabelPosition	"EdgeLabelPosition is an option that allows the user to place an edge label in a certain position relative to the midpoint of the edge. LowerLeft is the default value of this option. EdgeLabelPosition can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RGFQ	"RGFQ[l] yields True if l is a restricted growth function. It yields False otherwise."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`PerfectQ	"PerfectQ[g] yields True if g is a perfect graph, meaning that for every induced subgraph of g the size of a largest clique equals the chromatic number."
<<EntryDelimiter>>
AuthorTools`StyleTools`RemoveStylesheetSection	"Lou!"
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GraphDifference	"GraphDifference[g, h] constructs the graph resulting from subtracting the edges of graph h from the edges of graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`AnimateGraph	"AnimateGraph[g, l] displays graph g with each element in the list l successively highlighted. Here l is a list containing vertices and edges of g. An optional flag, which takes on the values All and One, can be used to inform the function about whether objects highlighted earlier will continue to be highlighted or not. The default value of flag is All. All the options allowed by the function Highlight are permitted by AnimateGraph, as well. See the usage message of Highlight for more details."
<<EntryDelimiter>>
Statistics`DataManipulation`Frequencies	"Frequencies[list] gives a list of the distinct elements in list, together with the frequencies with which they occur."
<<EntryDelimiter>>
Algebra`RootIsolation`ComplexRootIntervals	"ComplexRootIntervals[pp] computes isolating intervals for all roots of pp. pp is a rational univariate polynomial or a list of such polynomials. If a root is real, the isolating interval is an open real interval, if a root is not real, the isolating interval is an open rectangle, disjoint from the real axis."
<<EntryDelimiter>>
Parallel`Concurrency``$QueueType	"$QueueType gives the current type of process queue used."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ConnectedQ	"ConnectedQ[g] yields True if undirected graph g is connected. If g is directed, the function returns True if the underlying undirected graph is connected. ConnectedQ[g, Strong] and ConnectedQ[g, Weak] yield True if the directed graph g is strongly or weakly connected, respectively."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ProlateSpheroidal	"ProlateSpheroidal represents the prolate spheroidal coordinate system with default variables Xxi, Eeta, and Pphi and default parameter value 1. ProlateSpheroidal[xi, eta, phi] represents the prolate spheroidal coordinate system with variables xi, eta, and phi and default parameter value 1. ProlateSpheroidal[xi, eta, phi, a] represents the prolate spheroidal coordinate system with variables xi, eta, and phi and parameter a."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexLabelColor	"VertexLabelColor is an option that allows the user to associate different colors to vertex labels. Black is the default color. VertexLabelColor can be set as part of the graph data structure or in ShowGraph."
<<EntryDelimiter>>
Parallel`Concurrency``queued	"queued is a process state indicating that the process is in the input queue, waiting to be evaluated on a remote processor."
<<EntryDelimiter>>
AuthorTools`MakeProject`ProjectDialogQ	"ProjectDialogQ[nb] returns True if indeed the specified notebook is the project dialog."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Approximate	"Approximate is a value that the option Algorithm can take in calls to functions such as VertexCover, telling it to use an approximation algorithm."
<<EntryDelimiter>>
Miscellaneous`Music`TemperedMajor	"TemperedMajor is an interval list derived from the TemperedChromatic scale."
<<EntryDelimiter>>
LightweightGridClient`LightweightGrid	"LightweightGrid[agent] is a description of a subkernel to be launched on agent by the Wolfram Lightweight Grid Manager\r\nLightweightGrid[{\"Agent\" -> agent, \"KernelCount\" -> count, options}] is a description of count kernels to be launched on agent with options passed to RemoteKernelOpen.."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherWidth	"ButcherWidth[tree] gives the width of the tree tree."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Tree	"Tree is an option that informs certain functions for which the user wants the output to be a tree."
<<EntryDelimiter>>
Parallel`Kernels``slaveQ	"slaveQ[kernel] is True, if kernel is available."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`GrotztschGraph	"GrotztschGraph returns the smallest triangle-free graph with chromatic number 4. This is identical to MycielskiGraph[4]."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Dihedral	"Dihedral is an argument to the Polya-theoretic functions ListNecklaces, NumberOfNecklace, and NecklacePolynomial, which count or enumerate distinct necklaces. Dihedral refers to the dihedral group acting on necklaces to make equivalent necklaces that can be obtained from each other by a rotation or a flip."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherTrees	"ButcherTrees[p] gives a list of lists of the trees for any Runge-Kutta method of order p. The inner lists group the trees by order."
<<EntryDelimiter>>
DifferentialEquations`InterpolatingFunctionAnatomy`InterpolatingFunctionValuesOnGrid	"InterpolatingFunctionValuesOnGrid[ifun] gives the function values on the grid of all of the interpolating points."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Heapify	"Heapify[p] builds a heap from permutation p."
<<EntryDelimiter>>
Parallel`Configuration``$AvailableMachines	"$AvailableMachines is a list of normally available remote machines."
<<EntryDelimiter>>
Parallel`V2``LaunchSlaves	"LaunchSlaves[] has been superseded by LaunchKernels[]."
<<EntryDelimiter>>
AuthorTools`NotebookRestore`DeleteCorruptCells	"DeleteCorruptCells is an option that determines whether NotebookRestore and SalvageCells will preserve the corrupt data or discard it."
<<EntryDelimiter>>
AuthorTools`Common`NotebookScan	"NotebookScan[nb,func] scans nb cell by cell, and executes the function func[nb] as each cell is selected."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`MakeUndirected	"MakeUndirected[g] gives the underlying undirected graph of the given directed graph g."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RandomPermutation	"RandomPermutation[n] generates a random permutation of the first n natural numbers."
<<EntryDelimiter>>
Utilities`Package`PackageInformation	"PackageInformation[package] finds all the keywords in the informational comment fields from the named package. PackageInformation[package, keyword] returns the contents of the given informational field. PackageInformation[package, {key1, key2,...}] returns the contents of several named fields."
<<EntryDelimiter>>
Parallel`Kernels``send	"send[kernel,cmd] sends cmd for evaluation to the given remote kernel."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`Invariants	"Invariants is an option to the functions Isomorphism and IsomorphicQ that informs these functions about which vertex invariants to use in computing equivalences between vertices."
<<EntryDelimiter>>
Miscellaneous`Calendar`Friday	"Friday is a day of the week."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RadialEmbedding	"RadialEmbedding[g, v] constructs a radial embedding of the graph g in which vertices are placed on concentric circles around v depending on their distance from v. RadialEmbedding[g] constructs a radial embedding of graph g, radiating from the center of the graph."
<<EntryDelimiter>>
AuthorTools`Common`NotebookModifiedQ	"NotebookModifiedQ[nb] returns True if the indicated notebook has been edited since it was last saved, and False otherwise."
<<EntryDelimiter>>
DiscreteMath`Tree`MakeTree	"MakeTree[list] creates a binary tree with each node labeled by an element in list."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`VertexCoverQ	"VertexCoverQ[g, c] yields True if the vertices in list c define a vertex cover of graph g."
<<EntryDelimiter>>
Algebra`SymmetricPolynomials`Algebra`SymmetricPolynomials`SymmetricPolynomial	"SymmetricPolynomial[{x1,...,xn}, k] gives the k-th symmetric polynomial of variables {x1,...,xn}."
<<EntryDelimiter>>
Parallel`Concurrency``SetQueueType	"SetQueueType[constructor, args...] sets the type of process queue to use, by giving its constructor and the arguments with which to call it.\r\n\tA list of available queues is in Parallel`Queue`Interface`$QueueTypes."
<<EntryDelimiter>>
Miscellaneous`Dictionary`GetDictionary	"GetDictionary[\"file\"] loads the list of words stored in \"file\" and stores it in $Dictionary. GetDictionary[] loads the  default dictionary."
<<EntryDelimiter>>
Graphics`Arrow`Absolute	"Absolute is a possible value for the HeadScaling option to Arrow. It specifies that the device scaling should be used for the arrowhead."
<<EntryDelimiter>>
AuthorTools`StyleTools`RemoveStyleCategories	""
<<EntryDelimiter>>
Miscellaneous`Music`MeanChromatic	"MeanChromatic is an interval list in which 696.6 cents is used as the definition of a fifth, instead of 702 cents as in the Pythagorean and just intonation systems. This scale was invented in the 18th century by Gottfried Silbermann to correct for intonation problems due to enharmonic change."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`RankSubset	"RankSubset[l, s] gives the rank, in canonical order, of subset s of set l."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShowGraphArray	"ShowGraphArray[{g1, g2, ...}] displays a row of graphs. ShowGraphArray[{ {g1, ...}, {g2, ...}, ...}] displays a two-dimensional table of graphs. ShowGraphArray accepts all the options accepted by ShowGraph, and the user can also provide the option GraphicsSpacing -> d."
<<EntryDelimiter>>
SubKernels`Client`flush	"flush[kernel] throws away any pending output and checks that the kernel is ready."
<<EntryDelimiter>>
Miscellaneous`Geodesy`SemimajorAxis	"SemimajorAxis is an option for SpheroidalDistance, that sets the semimajor axis for the spheroid defining the planet, in km. Default is for the Earth, from the WGS-84 standard."
<<EntryDelimiter>>
NumericalMath`Microscope`Ulp	"Ulp[x] gives the size of an ulp for numbers near x."
<<EntryDelimiter>>
NumericalMath`Butcher`ButcherHeight	"ButcherHeight[tree] gives the height of the tree tree."
<<EntryDelimiter>>
Calculus`VectorAnalysis`ConfocalParaboloidal	"ConfocalParaboloidal represents the confocal paraboloidal coordinate system with default variables Llambda, Mmu, and Nnu and default parameter values 2 and 1. ConfocalParaboloidal[lambda, mu, nu] represents the confocal paraboloidal coordinate system with variables lambda, mu, and nu and default parameter values 2 and 1. ConfocalParaboloidal[lambda, mu, nu, a, b] represents the confocal paraboloidal coordinate system with variables lambda, mu, and nu and parameters a and b."
<<EntryDelimiter>>
DifferentialEquations`NDSolveUtilities`InvariantErrorPlot	"InvariantErrorPlot[invariants, dvars, ivar, sol, opts]\r\nplots the errors in invariants with dependent variables dvars and independent\r\nvariable ivar at the grid points of the NDSolve solution sol."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`CompleteGraph	"CompleteGraph[n] creates a complete graph on n vertices. An option Type that takes on the values Directed or Undirected is allowed. The default setting for this option is Type -> Undirected. CompleteGraph[a, b, c,...] creates a complete k-partite graph of the prescribed shape. The use of CompleteGraph to create a complete k-partite graph is obsolete; use CompleteKPartiteGraph instead."
<<EntryDelimiter>>
DemonstrationsTools`PreflightCheck	""
<<EntryDelimiter>>
DiscreteMath`Combinatorica`ShowLabeledGraph	"ShowLabeledGraph[g] displays graph g according to its embedding, with each vertex labeled with its vertex number. ShowLabeledGraph[g, l] uses the ith element of list l as the label for vertex i."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Coordinates	"Coordinates[ ] gives a list of the default coordinate variables in the default coordinate system. Coordinates[coordsys] gives a list of the default coordinate variables in the coordinate system coordsys."
<<EntryDelimiter>>
DiscreteMath`Tree`ExprPlot	"ExprPlot[expr] generates a graphical representation of an expression, viewed as a tree."
<<EntryDelimiter>>
Calculus`VectorAnalysis`Bipolar	"Bipolar represents the bipolar coordinate system with default variables Uu, Vv, and Zz and default parameter value 1. Bipolar[u, v, z] represents the bipolar coordinate system with variables u, v, and z and default parameter value 1. Bipolar[u, v, z, a] represents the bipolar coordinate system with variables u, v, and z, and parameter a."
<<EntryDelimiter>>
DiscreteMath`Combinatorica`NumberOfSpanningTrees	"NumberOfSpanningTrees[g] gives the number of labeled spanning trees of graph g."
<<EntryDelimiter>>
Parallel`Kernels``PacketHandler	"PacketHandler[packet, kernel] is called by receive to handle packets other than evaluation results received from a remote kernel."
<<EntryDelimiter>>
Parallel`Concurrency``Load	"Load[kernel] gives the load (length of input queue) on a remote kernel. Load[] gives the sum of all loads."
<<EntryDelimiter>>
Calculus`DSolveIntegrals`B	"B[i] is the default form for the i-th parameter produced in building a complete integral for a differential equation with CompleteIntegral"
<<EntryDelimiter>>
AuthorTools`Common`OpenAuthorTool	"OpenAuthorTool[name] opens the palette with the specified name from AuthorTools layout. OpenAuthorTool[] returns links for opening any of the main palettes."
<<EntryDelimiter>>
